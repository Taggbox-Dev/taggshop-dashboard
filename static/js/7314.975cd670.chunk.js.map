{"version":3,"file":"static/js/7314.975cd670.chunk.js","mappings":"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","sources":["actions/socketClient.js","app/Layout/Main/PricePlan/SignUpPricePlan.js","actions/initActions.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport { SOCKET_CLIENT_URL } from './api';\r\n\r\nexport const SOCKET_CONNECTION = io(`${SOCKET_CLIENT_URL}`, {\r\n    transports: [\"websocket\"],\r\n    transport: [\"websocket\"],\r\n    upgrade: true\r\n})\r\n\r\nexport const emitEvent = (event, data) => {\r\n    SOCKET_CONNECTION.emit(event, data);\r\n};\r\n\r\nexport const onEvent = (event, func) => {\r\n    SOCKET_CONNECTION.on(event, func);\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport { PLAN__DETAILS, UPDATE_PLAN__DETAILS } from '../../../../actions/planDetail';\r\nimport { TOAST_DISMISS, TOAST_LOADING, getCookieValue } from '../../../../utils';\r\nimport withRouter from '../../../routes/WithRouter';\r\nimport Cookies from 'universal-cookie';\r\nimport { connect } from 'react-redux';\r\nimport PlanView from './Elements/PlanView';\r\nimport { emitEvent, onEvent } from '../../../../actions/socketClient';\r\nimport { HOST_URL } from '../../../../actions/api';\r\nimport { createWall } from '../../../../actions/initActions';\r\nimport { SHOPIFY_PRODUCT_SYNC } from '../../../../actions/productAction';\r\nimport { getUserInfo } from '../../../../actions/loginActions';\r\n\r\nclass SignUpPricePlan extends Component {\r\n  state = { init: false, showFrePlan: false, shopifyLogin: localStorage.getItem('shopifyLogin'), loading: false, changePrice: true, showContactUs: false }\r\n\r\n  componentDidMount() {\r\n    this.props.PLAN__DETAILS(true);\r\n    this.setState({ shopifyLogin: localStorage.getItem('shopifyLogin') })\r\n    setTimeout(() => {\r\n      onEvent(`getPlanUpdated${this.props.authorized?.token?.user?.id != null ? this.props.authorized?.token?.user?.id : this.props.authorized?.userData?.user_data?.user.id ? this.props.authorized?.userData?.user_data?.user.id : localStorage.getItem('ownerId')}`, (data) => {\r\n        localStorage.removeItem(\"steps\")\r\n        this.props.history('/home')\r\n      });\r\n    }, 1500);\r\n    window.fpr(\"referral\", { email: localStorage.getItem('emailId') })\r\n  }\r\n\r\n\r\n\r\n  SignUpPlanUpdate = async (planId) => {\r\n\r\n    const { authorized } = this.props;\r\n    this.setState({ loading: true });\r\n    const toastId = TOAST_LOADING();\r\n    const cookies = new Cookies();\r\n    try {\r\n      const response = await UPDATE_PLAN__DETAILS(planId);\r\n      if (response.data.response_code !== 200) throw new Error(\"Plan update failed\");\r\n\r\n      const userId = authorized?.token?.user?.id || authorized?.userData?.user_data?.user.id || localStorage.getItem('ownerId');\r\n      const createFromShopify = authorized?.userData?.user_data?.sessionData?.createFrom === 'shopify';\r\n\r\n      const processResponse = () => {\r\n        //await createWall(shopOnBio);\r\n        this.setState({ loading: false, init: true });\r\n        localStorage.removeItem('steps');\r\n        cookies.remove('shoponUrl');\r\n        setTimeout(() => {\r\n          this.props.history('/home')\r\n        }, 100);\r\n      };\r\n\r\n      if (createFromShopify) {\r\n        //await createWall(null);\r\n        localStorage.removeItem('shopifyLogin');\r\n        localStorage.removeItem('steps');\r\n        setTimeout(() => {\r\n          SHOPIFY_PRODUCT_SYNC(localStorage.getItem('shopId'), () => {\r\n             this.props.getUserInfo(this.props.history,`${HOST_URL}init/index/shopify`)\r\n            //window.location.href = ``;\r\n          });\r\n        }, 100);\r\n      } else {\r\n        emitEvent('planUpdated', { id: userId, plan: \"\" });\r\n        const shopOnBio = getCookieValue('shoponUrl');\r\n        await processResponse(shopOnBio);\r\n      }\r\n      TOAST_DISMISS(toastId);\r\n    } catch (error) {\r\n      this.setState({ loading: false });\r\n      TOAST_DISMISS(toastId);\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return <PlanView {...this.props} signUpPlan={true} loading={this.state.loading} SignUpPlanUpdate={this.SignUpPlanUpdate} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n  return {\r\n    authorized: state.authorized,\r\n    priceDetail: state.planPriceDetail?.planPrice,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    PLAN__DETAILS: (isSignup) => dispatch(PLAN__DETAILS(isSignup)),\r\n    getUserInfo: (navigation,link) =>dispatch(getUserInfo(navigation,link))\r\n    ,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignUpPricePlan));","import axios from 'axios';\r\nimport HttpClient from \"./http-client\";\r\nimport { GET_INIT_PRODUCT, SIGN_UP_VERIFICATION, CREATE_WALL, EXTRA_DATA_UPDATE, BASE_URL } from './api'\r\nimport { USER_TOKEN, USER_AUTHENTICATED } from '../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { TOAST_ERROR } from '../utils';\r\n\r\n\r\nexport const getInItProduct = () => {\r\n    return new HttpClient().get(GET_INIT_PRODUCT)\r\n}\r\n\r\nexport const UPDATE_EXTRA_DATA = (postData) => {\r\n    // return new HttpClient().post(EXTRA_DATA_UPDATE , postData)\r\n}\r\n\r\n\r\n\r\n\r\nexport const createWall = (shopOnBio = null) => {\r\n    const url = shopOnBio ? `${CREATE_WALL}?slug=${shopOnBio}` : CREATE_WALL\r\n    return new HttpClient().get(url)\r\n}\r\n\r\nexport const signUpVerified = (token, history, callback) => {\r\n    return (dispatch) => {\r\n        new HttpClient().post(`${SIGN_UP_VERIFICATION}/${token}`).then((response) => {\r\n            const { responseData, response_code, response_message, user } = response.data\r\n\r\n            if (responseData?.promotor_key) {\r\n                Object.keys(responseData.promotor_key).forEach(key => {\r\n                    document.cookie = `${key}=${responseData.promotor_key[key]};`;\r\n                });\r\n            }\r\n\r\n            if (responseData.user && Object.keys(responseData.user).length > 0) {\r\n                callback(responseData.user.id);\r\n            }\r\n\r\n            if (response_code == 200) {\r\n                localStorage.setItem('steps', '1');\r\n                dispatch({ type: USER_TOKEN, payload: responseData });\r\n                localStorage.setItem('token', responseData.token);\r\n                if (responseData?.user?.emailId) localStorage.setItem('emailId', responseData?.user?.emailId);\r\n                history('/accounts/price')\r\n            }\r\n            else if (response_code == 201) {\r\n                Swal.fire({\r\n                    title: response_message,\r\n                    icon: \"success\",\r\n                    showCancelButton: false,\r\n                    showConfirmButton: true,\r\n                    confirmButtonText: 'Go to Home',\r\n                }).then(result => {\r\n                    localStorage.removeItem('steps')\r\n                    window.location = BASE_URL\r\n                })\r\n            }\r\n        })\r\n    }\r\n}"],"names":["SOCKET_CONNECTION","io","SOCKET_CLIENT_URL","transports","transport","upgrade","SignUpPricePlan","Component","constructor","arguments","state","init","showFrePlan","shopifyLogin","localStorage","getItem","loading","changePrice","showContactUs","SignUpPlanUpdate","async","authorized","this","props","setState","toastId","TOAST_LOADING","cookies","Cookies","_authorized$token","_authorized$token$use","_authorized$userData","_authorized$userData$","_authorized$userData2","_authorized$userData3","_authorized$userData4","UPDATE_PLAN__DETAILS","planId","data","response_code","Error","userId","token","user","id","userData","user_data","createFromShopify","sessionData","createFrom","processResponse","removeItem","remove","setTimeout","history","SHOPIFY_PRODUCT_SYNC","getUserInfo","HOST_URL","event","plan","emit","shopOnBio","getCookieValue","TOAST_DISMISS","error","emitEvent","componentDidMount","PLAN__DETAILS","_this$props$authorize","_this$props$authorize2","_this$props$authorize3","_this$props$authorize4","_this$props$authorize5","_this$props$authorize6","_this$props$authorize7","_this$props$authorize8","_this$props$authorize9","_this$props$authorize10","_this$props$authorize11","_this$props$authorize12","func","on","window","fpr","email","render","_jsx","PlanView","signUpPlan","connect","_state$planPriceDetai","priceDetail","planPriceDetail","planPrice","dispatch","isSignup","navigation","link","withRouter","signUpVerified","callback","HttpClient","post","SIGN_UP_VERIFICATION","then","response","responseData","response_message","_responseData$user","_responseData$user2","promotor_key","Object","keys","forEach","key","document","cookie","length","setItem","type","USER_TOKEN","payload","emailId","Swal","title","icon","showCancelButton","showConfirmButton","confirmButtonText","result","location","BASE_URL"],"sourceRoot":""}