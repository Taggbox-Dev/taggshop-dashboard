{"version":3,"file":"static/js/4070.0ff0e011.chunk.js","mappings":"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","sources":["app/Layout/Main/Home/Dashboard/index.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport withRouter from '../../../../routes/WithRouter';\r\nimport { Container, Button, Row, Col } from 'react-bootstrap';\r\nimport { GET_WEBSITE_LIST } from '../../../../../actions/websiteAction';\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { GET_ALL_SHOPON_LIST } from '../../../../../actions/shoponAction';\r\nimport { GET_DASHBOARD_DATA } from '../../../../../actions/sceneActions';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport ErrorFound from '../../../../ErrorFound';\r\nimport \"../home.scss\"\r\nimport { GET_IFRAM } from '../../../../../utils';\r\nimport { DASHBOARD_LOAD } from '../../../../../reducer/keys';\r\n\r\nconst CaseStudy = React.lazy(() => import(\"./CaseStudy\"));\r\nconst Overview = React.lazy(() => import(\"./Overview\"));\r\nconst SocialAccount = React.lazy(() => import(\"./SocialAccount\"));\r\nconst OverallCount = React.lazy(() => import(\"./OverallCount\"));\r\nconst PublishAssets = React.lazy(() => import(\"./PublishAssets\"));\r\nconst TrustedApps = React.lazy(() => import(\"./TrustedApps\"));\r\nconst ChannelPerfomance = React.lazy(() => import(\"./ChannelPerfomance\"));\r\nconst ContentChart = React.lazy(() => import(\"./ContentChart\"));\r\nconst ActiveUsers = React.lazy(() => import(\"./ActiveUsers\"));\r\nconst TopPosts = React.lazy(() => import(\"./TopPosts\"));\r\nconst TopProducts = React.lazy(() => import(\"./TopProducts\"));\r\n\r\n\r\n\r\nconst dateRanges = {\r\n    \"Today\": [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\")],\r\n    \"Yesterday\": [moment().subtract(1, 'days').format(\"DD-MM-YYYY\"), moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),],\r\n    'Last 7 Days': [moment().subtract(6, 'days').format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\r\n    'Last 30 Days': [moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month').format(\"DD-MM-YYYY\"), moment().subtract(1, 'month').endOf('month').format(\"DD-MM-YYYY\"),],\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state = { loadScroll: GET_IFRAM() ? false : true,  startDate: moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), endDate: moment().format(\"DD-MM-YYYY\"), maxDate: moment().endOf('month').format(\"DD-MM-YYYY\") }\r\n    componentDidMount() {\r\n        const { getDashboard, websiteList, getWebistes, shopOnList, getShopOn, dashboardLoad } = this.props\r\n        const { startDate, endDate } = this.state\r\n        getDashboard(startDate, endDate);\r\n        if (!(websiteList && websiteList.length)) getWebistes()\r\n        if (!(shopOnList && shopOnList.length)) getShopOn()\r\n\r\n        if(GET_IFRAM()){\r\n           let timeout = setTimeout(() => {\r\n                    dashboardLoad();\r\n                    clearTimeout(timeout); \r\n                }, 1500);\r\n            window.addEventListener('scroll', this.handleScroll);\r\n        }   \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(GET_IFRAM()) window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n   handleScroll=()=> this.setState({loadScroll : true})\r\n\r\n    handleOnApply = (event, picker) => this.setState({ startDate: picker.startDate.format(\"DD-MM-YYYY\"), endDate: picker.endDate.format(\"DD-MM-YYYY\") })\r\n\r\n    handleCallback = (start, end) => {\r\n        this.props.getDashboard(start, end)\r\n        this.setState({ startDate: start.format(\"DD-MM-YYYY\"), endDate: end.format(\"DD-MM-YYYY\") })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, maxDate, loadScroll} = this.state\r\n        const { loadDelay }= this.props\r\n\r\n        return <Container>\r\n            <div className=\"text-end w-100\">\r\n                <ErrorFound>\r\n                    <DateRangePicker onApply={this.handleOnApply} startDate={startDate} endDate={endDate}\r\n                        initialSettings={{\r\n                            locale: { format: 'DD-MM-YYYY', separator: '-' },\r\n                            maxDate: maxDate,\r\n                            showDropdowns: true,\r\n                            startDate: startDate, endDate: endDate,\r\n                            ranges: dateRanges,\r\n                        }} onCallback={this.handleCallback}>\r\n                        <Button variant='secondary' className='mb-5 f-center flex-grow-1' style={{minWidth:190}}>\r\n                            <FontAwesomeIcon icon={'calendar-range'} iconClass={'me-1'}/>\r\n                            {moment(startDate, \"DD-MM-YYYY\").format(\"ll\")}\r\n                            -\r\n                            {moment(endDate, \"DD-MM-YYYY\").format(\"ll\")}\r\n                        </Button>\r\n                    </DateRangePicker>\r\n                </ErrorFound>\r\n            </div>\r\n            <Suspense fallback={null}><CaseStudy /></Suspense>\r\n\r\n            { loadDelay || !GET_IFRAM() ? <>\r\n            <Suspense fallback={null}><Overview /></Suspense>\r\n            <Row>\r\n                <ErrorFound>\r\n                <Suspense fallback={null}><SocialAccount /></Suspense>\r\n                </ErrorFound>\r\n                <Col sm={6}>\r\n                <Suspense fallback={null}><OverallCount title={'Gallery Count'} tooltip={'No. of galleries created vs the total no. of galleries available in your plan.'} gallery={true} /></Suspense>\r\n                <Suspense fallback={null}><OverallCount title={'Feed count'} tooltip={'No. of feeds created vs the total no. of feeds available in your plan.'} /></Suspense>\r\n                </Col>\r\n            </Row>  </> : null }\r\n\r\n              { loadScroll && <>\r\n                <Suspense fallback={null}><PublishAssets /></Suspense>\r\n                <Suspense fallback={null}><TrustedApps /></Suspense>  \r\n                 <Suspense fallback={null}><ChannelPerfomance startDate={startDate} endDate={endDate} /></Suspense> \r\n                <Row> \r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><ContentChart/></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><ActiveUsers /></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><TopPosts /></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><TopProducts /></Suspense></ErrorFound>\r\n                    </Col>\r\n                </Row> </>   \r\n              }\r\n        </Container>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n    return {\r\n        websiteList: state.websiteList?.websiteList,\r\n        shopOnList: state.shopOnList?.shopOnList,\r\n        loadDelay: state.dashboardData?.loadDelay,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDashboard: (start, end) => dispatch(GET_DASHBOARD_DATA(start, end)),\r\n        getWebistes: () => dispatch(GET_WEBSITE_LIST()),\r\n        getShopOn: () => dispatch(GET_ALL_SHOPON_LIST()),\r\n        dashboardLoad: () => dispatch({ type: DASHBOARD_LOAD}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(React.memo(Dashboard)))"],"names":["CaseStudy","React","Overview","SocialAccount","OverallCount","PublishAssets","TrustedApps","ChannelPerfomance","ContentChart","ActiveUsers","TopPosts","TopProducts","dateRanges","moment","format","subtract","startOf","endOf","Dashboard","Component","constructor","arguments","state","loadScroll","GET_IFRAM","startDate","endDate","maxDate","handleScroll","this","setState","handleOnApply","event","picker","handleCallback","start","end","props","getDashboard","componentDidMount","websiteList","getWebistes","shopOnList","getShopOn","dashboardLoad","length","timeout","setTimeout","clearTimeout","window","addEventListener","componentWillUnmount","removeEventListener","render","loadDelay","_jsxs","Container","children","_jsx","className","ErrorFound","DateRangePicker","onApply","initialSettings","locale","separator","showDropdowns","ranges","onCallback","Button","variant","style","minWidth","FontAwesomeIcon","icon","iconClass","Suspense","fallback","_Fragment","Row","Col","sm","title","tooltip","gallery","lg","connect","_state$websiteList","_state$shopOnList","_state$dashboardData","dashboardData","dispatch","GET_DASHBOARD_DATA","GET_WEBSITE_LIST","GET_ALL_SHOPON_LIST","type","DASHBOARD_LOAD","withRouter"],"sourceRoot":""}