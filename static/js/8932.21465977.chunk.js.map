{"version":3,"file":"static/js/8932.21465977.chunk.js","mappings":"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","sources":["app/Authentication/Components/AccountVerify.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Image, Container, Card, InputGroup, Form } from \"react-bootstrap\";\r\nimport { getUserInfo, reSendEmail } from \"../../../actions/loginActions\";\r\nimport { TOAST_DISMISS, TOAST_SUCCESS } from \"../../../utils\";\r\nimport withRouter from \"../../routes/WithRouter\";\r\nimport { baseUrl } from \"../../../Assets/AssetsHelper\";\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass AccountVerify extends Component {\r\n    componentWillMount() {\r\n        const { navigate, authorized, getUserInfo } = this.props;\r\n        this.reSendEmailCall()\r\n        channel.addEventListener(\"message\", this.isVerified);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.isVerified);\r\n    }\r\n\r\n    isVerified = (event) => {\r\n        const { getUserInfo, navigate } = this.props\r\n        getUserInfo(navigate)\r\n    }\r\n\r\n    reSendEmailCall=()=>{\r\n        var email= localStorage.getItem(\"emailId\") \r\n        TOAST_SUCCESS('Verification link successfully sent');\r\n        reSendEmail(email);\r\n        setTimeout(() => { TOAST_DISMISS()}, 2000);\r\n    }\r\n    \r\n    onSignOut=()=>{\r\n        localStorage.clear()\r\n        this.props.navigate('/accounts/register')\r\n    }\r\n\r\n    render() {\r\n        return (<Container>\r\n                    <div className=\"f-center h-100vh\">\r\n                        <Card className=\"p-lg-8\" style={{maxWidth:700}}>\r\n                            <Card.Body className=\"f-center flex-column\">\r\n                                <Image className=\"mb-4\" src={baseUrl('media/images/email-verification.svg')} height={185} width={276} alt='' fluid/>\r\n                                <h2 className='text-center mb-5 h1'>You're just a step away.</h2>\r\n                                <p className='fw-medium text-muted text-center'>\r\n                                    We have sent an email to <span className=\"fw-bold \">{localStorage.getItem(\"emailId\")} </span>  \r\n                                        with the verification link. Please go to your email account to verify. If you don't see the email in your inbox or spam folder, try resending the email here:\r\n                                </p>\r\n                                <div className=\"mx-auto w-100\" style={{maxWidth:420}}>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control size=\"lg\" placeholder='example@mail.com' name='emailId' defaultValue={localStorage.getItem(\"emailId\")} readOnly/>\r\n                                    <InputGroup.Text id=\"basic-addon2\" className=\"bg-primary cursor-pointer text-gray-100 fw-medium border-primary\" onClick={()=>this.reSendEmailCall()}>Resend Email</InputGroup.Text>\r\n                                </InputGroup>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                </div>\r\n                </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUserInfo: (navigate) => dispatch(getUserInfo(navigate))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AccountVerify));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;"],"names":["channel","BroadcastChannel","AccountVerify","Component","constructor","arguments","isVerified","event","getUserInfo","navigate","this","props","reSendEmailCall","email","localStorage","getItem","TOAST_SUCCESS","reSendEmail","setTimeout","TOAST_DISMISS","onSignOut","clear","componentWillMount","authorized","addEventListener","componentWillUnmount","removeEventListener","render","_jsx","Container","children","className","Card","style","maxWidth","_jsxs","Body","Image","src","baseUrl","height","width","alt","fluid","InputGroup","Form","Control","size","placeholder","name","defaultValue","readOnly","Text","id","onClick","connect","state","dispatch","withRouter","_excluded","InputGroupText","React","_ref","ref","bsPrefix","as","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","displayName","hasValidation","contextValue","useMemo","InputGroupContext","Provider","value","concat","Object","assign","Radio","FormCheckInput","type","Checkbox","context"],"sourceRoot":""}