{"version":3,"file":"static/js/7146.14e4e070.chunk.js","mappings":"8LAQO,MAgBMA,EAAiBA,CAACC,EAAOC,EAASC,IACnCC,KACJ,IAAIC,EAAAA,GAAaC,KAAK,GAAGC,EAAAA,OAAwBN,KAASO,MAAMC,IAC5D,MAAM,aAAEC,EAAY,cAAEC,EAAa,iBAAEC,EAAgB,KAAEC,GAASJ,EAASK,KAY9C,IAADC,EAAAC,GAVV,OAAZN,QAAY,IAAZA,GAAAA,EAAcO,cACdC,OAAOC,KAAKT,EAAaO,cAAcG,SAAQC,IAC3CC,SAASC,OAAS,GAAGF,KAAOX,EAAaO,aAAaI,KAAO,IAIjEX,EAAaG,MAAQK,OAAOC,KAAKT,EAAaG,MAAMW,OAAS,GAC7DrB,EAASO,EAAaG,KAAKY,IAGV,KAAjBd,IACAe,aAAaC,QAAQ,QAAS,KAC9BvB,EAAS,CAAEwB,KAAMC,EAAAA,IAAYC,QAASpB,IACtCgB,aAAaC,QAAQ,QAASjB,EAAaT,OAC3B,OAAZS,QAAY,IAAZA,GAAkB,QAANK,EAAZL,EAAcG,YAAI,IAAAE,GAAlBA,EAAoBgB,SAASL,aAAaC,QAAQ,UAAuB,OAAZjB,QAAY,IAAZA,GAAkB,QAANM,EAAZN,EAAcG,YAAI,IAAAG,OAAN,EAAZA,EAAoBe,SACrF7B,EAAQ,oBAEc,KAAjBS,GACLqB,IAAAA,KAAU,CACNC,MAAOrB,EACPsB,KAAM,UACNC,kBAAkB,EAClBC,mBAAmB,EACnBC,kBAAmB,eACpB7B,MAAK8B,IACJZ,aAAaa,WAAW,SACxBC,OAAOC,SAAWC,EAAAA,GAAQ,GAElC,GACF,C,gGCtDV,MAAMC,EAAU,IAAIC,iBAAiB,WACrC,MAAMC,UAAoBC,EAAAA,UACtBC,WAAAA,CAAYC,GAASC,MAAMD,GAAM,KAMjCE,YAAeC,IACXR,EAAQS,YAAYC,KAAKC,UAAU,CAAE7B,GAAI0B,EAAQI,KAAM,KAAM,CAP/B,CAClCC,kBAAAA,GACI,MAAM,OAAEC,EAAM,QAAEvD,GAAYwD,KAAKV,MACjCU,KAAKV,MAAMhD,eAAeyD,EAAOhC,GAAIvB,EAASwD,KAAKR,YACvD,CAMAS,MAAAA,GAAW,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,GAAM,EAG5B,MAMA,GAAeC,EAAAA,EAAAA,KANUC,IAAmB,CAAC,KAElB3D,IAChB,CAAEJ,eAAgBA,CAACC,EAAOC,EAASC,IAAaC,GAASJ,EAAAA,EAAAA,IAAeC,EAAOC,EAASC,OAGnG,CAA4D0C,E","sources":["actions/initActions.js","app/Authentication/verifyEmail.js"],"sourcesContent":["import axios from 'axios';\r\nimport HttpClient from \"./http-client\";\r\nimport { GET_INIT_PRODUCT, SIGN_UP_VERIFICATION, CREATE_WALL, EXTRA_DATA_UPDATE, BASE_URL } from './api'\r\nimport { USER_TOKEN, USER_AUTHENTICATED } from '../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { TOAST_ERROR } from '../utils';\r\n\r\n\r\nexport const getInItProduct = () => {\r\n    return new HttpClient().get(GET_INIT_PRODUCT)\r\n}\r\n\r\nexport const UPDATE_EXTRA_DATA = (postData) => {\r\n    // return new HttpClient().post(EXTRA_DATA_UPDATE , postData)\r\n}\r\n\r\n\r\n\r\n\r\nexport const createWall = (shopOnBio = null) => {\r\n    const url = shopOnBio ? `${CREATE_WALL}?slug=${shopOnBio}` : CREATE_WALL\r\n    return new HttpClient().get(url)\r\n}\r\n\r\nexport const signUpVerified = (token, history, callback) => {\r\n    return (dispatch) => {\r\n        new HttpClient().post(`${SIGN_UP_VERIFICATION}/${token}`).then((response) => {\r\n            const { responseData, response_code, response_message, user } = response.data\r\n\r\n            if (responseData?.promotor_key) {\r\n                Object.keys(responseData.promotor_key).forEach(key => {\r\n                    document.cookie = `${key}=${responseData.promotor_key[key]};`;\r\n                });\r\n            }\r\n\r\n            if (responseData.user && Object.keys(responseData.user).length > 0) {\r\n                callback(responseData.user.id);\r\n            }\r\n\r\n            if (response_code == 200) {\r\n                localStorage.setItem('steps', '1');\r\n                dispatch({ type: USER_TOKEN, payload: responseData });\r\n                localStorage.setItem('token', responseData.token);\r\n                if (responseData?.user?.emailId) localStorage.setItem('emailId', responseData?.user?.emailId);\r\n                history('/accounts/price')\r\n            }\r\n            else if (response_code == 201) {\r\n                Swal.fire({\r\n                    title: response_message,\r\n                    icon: \"success\",\r\n                    showCancelButton: false,\r\n                    showConfirmButton: true,\r\n                    confirmButtonText: 'Go to Home',\r\n                }).then(result => {\r\n                    localStorage.removeItem('steps')\r\n                    window.location = BASE_URL\r\n                })\r\n            }\r\n        })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUpVerified } from '../../actions/initActions'\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass VerifyEmail extends Component {\r\n    constructor(props) { super(props) }\r\n    componentWillMount() {\r\n        const { params, history } = this.props;\r\n        this.props.signUpVerified(params.id, history, this.sendMessage)\r\n    }\r\n\r\n    sendMessage = (userId) => {\r\n        channel.postMessage(JSON.stringify({ id: userId, plan: \"\" }))\r\n    }\r\n\r\n    render() { return <></> }\r\n}\r\n\r\nconst mapStateToProps = (state) => { return {} }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { signUpVerified: (token, history, callback) => dispatch(signUpVerified(token, history, callback)), }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);"],"names":["signUpVerified","token","history","callback","dispatch","HttpClient","post","SIGN_UP_VERIFICATION","then","response","responseData","response_code","response_message","user","data","_responseData$user","_responseData$user2","promotor_key","Object","keys","forEach","key","document","cookie","length","id","localStorage","setItem","type","USER_TOKEN","payload","emailId","Swal","title","icon","showCancelButton","showConfirmButton","confirmButtonText","result","removeItem","window","location","BASE_URL","channel","BroadcastChannel","VerifyEmail","Component","constructor","props","super","sendMessage","userId","postMessage","JSON","stringify","plan","componentWillMount","params","this","render","_jsx","_Fragment","connect","state"],"sourceRoot":""}