{"version":3,"file":"static/js/2081.66c5a988.chunk.js","mappings":"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","sources":["app/components/content/moderation/components/feeds/googlereviews/googleConnect.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Select from 'react-select';\r\nimport { HOST_URL } from '../../../../../../../actions/api';\r\nimport { CREATE_FEED } from '../../../../../../../actions/moderationActions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GoogleConnect = (props) => {\r\n    const navigation = useNavigate()\r\n    return <Gconnect {...props} navigation={navigation} />\r\n}\r\nclass Gconnect extends Component {\r\n    state = { accountOption: [], allChild: this.props.googleReviewFeedData && this.props.googleReviewFeedData.responseData ? this.props.googleReviewFeedData.responseData : [], moderation: null, connetedAccount: this.props.createdAccount, accountId: null }\r\n\r\n    componentDidMount() {\r\n        const { googleReviewFeedData } = this.props\r\n        const { allChild } = this.state\r\n        if (!this.props.googleReviewFeedData || !googleReviewFeedData.responseCode) window.location = `${HOST_URL}content/moderation/${localStorage.getItem('wallId')}`\r\n\r\n        this.setState({ allChild: this.props.googleReviewFeedData && this.props.googleReviewFeedData.responseData ? this.props.googleReviewFeedData.responseData : [], connetedAccount: this.props.createdAccount })\r\n        if (allChild) {\r\n            var data = allChild.map((f, i) => { return ({ 'label': f.value2, 'value': f.id }) })\r\n            this.setState({ accountOption: data })\r\n            if(data && data.length) this.onAccountIdChange(data[0].value)\r\n\r\n        }\r\n    }\r\n\r\n    onModerationChange = (value) => this.setState({ moderation: value })\r\n\r\n    onAccountIdChange = (value) => {\r\n        var mainAccountId = this.state.allChild.filter(f => f.id == value)\r\n        this.setState({ accountId: value, connetedAccount: mainAccountId[0].parent })\r\n    }\r\n\r\n    onAddFeed = () => {\r\n        const { moderation, connetedAccount, accountId } = this.state\r\n        const { navigation, hideAddfeed } = this.props\r\n\r\n        var obj = {\r\n            wallId: localStorage.getItem('wallId'),\r\n            networkId: 4,\r\n            filter: 29,\r\n            field33: \"\",\r\n            field33placeId: \"\",\r\n            field33placeName: \"\",\r\n            connetedAccount: connetedAccount,\r\n            feedType: 2,\r\n            account: accountId,\r\n            hashtagIGTV: 0,\r\n            onlyReels: 0,\r\n            moderation: Number(moderation)\r\n        }\r\n\r\n        CREATE_FEED(obj, navigation, true, hideAddfeed)\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { googleReviewFeedData } = this.props\r\n        const { accountOption, moderation } = this.state\r\n\r\n        return (googleReviewFeedData && googleReviewFeedData.responseCode && googleReviewFeedData.responseCode == 404 ?\r\n            <div className=\"d-flex flex-column-fluid main_content bg-white connect_your_account\">\r\n                <div className=\"container py-18\">\r\n                    <div className=\"row align-items-center h-100\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"middle_content\">\r\n                                <div className=\"small_container\">\r\n                                    <div className=\"facebook_error col p-10 text-center\">\r\n                                        <div className=\"card-body py-5\">\r\n                                            <img src=\"https://cloud.taggbox.com/taggshop/app/assets/media/error/problem-error.svg\" className=\"mb-10 img-fluid\" />\r\n                                            <h3 className=\"h1 mb-4\">Looks like there is a problem!</h3>\r\n                                            <p className=\"font-size-h6\">Oops!! Seems that you havenâ€™t connected through Google Business Account. Kindly connect using authorised Google Business Account.</p>\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-center pt-10\">\r\n                                        <Link to={`/transactions#connectedAccounts`}  className=\"btn btn-primary mr-4\">Back To Social Accounts</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : accountOption && accountOption.length ?\r\n\r\n                <div className=\"d-flex flex-column-fluid main_content no_subheader bg-white connect_your_account\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"middle_content\">\r\n                                    <div className=\"small_container\">\r\n                                        <div className=\"pt-5\">\r\n                                            <div className=\"d-flex flex-wrap align-items-center mb-10\">\r\n                                                <div className=\"symbol symbol-60 flex-shrink-0 mr-4\">\r\n                                                    <div className=\"symbol-label\" style={{ background: `url('https://cloud.taggbox.com/taggshop/app/assets/media/square-icons/google.svg')`, backgroundSize: \"100%\" }}></div>\r\n                                                </div>\r\n                                                <h3 className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pr-3\">\r\n                                                    <span className=\"card-label font-weight-bolder text-dark\">Connect Place</span>\r\n                                                    <span className=\" mt-2 font-weight-bold font-size-sm\">Select the Google Place you'd like to fetch the Reviews for</span>\r\n                                                </h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row newRadio selectChannel tabbable tabbable-tabdrop newRadio mb-5\" id=\"GoogleReviewAccounts\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"col-md-6 titleLabel mb-4\">\r\n                                                    <label>Select Account</label>\r\n                                                    <Select options={accountOption} defaultValue={accountOption[0]} onChange={(e) => this.onAccountIdChange(e.value)} />\r\n                                                </div>\r\n                                                {/* <div className=\"col-md-6 titleLabel mt-4\">\r\n                                                    <div className=\"mb-4\">\r\n                                                        <label>Select Place</label>\r\n                                                        <Select />\r\n                                                    </div>\r\n                                                </div> */}\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"checkbox-inline\">\r\n                                                            <label htmlFor=\"feedscreatemoderation\" className=\"checkbox checkbox-outline checkbox-primary mr-2\">\r\n                                                                <input type=\"checkbox\" id=\"feedscreatemoderation\" className=\"checkbox checkbox-outline checkbox-outline-2x checkbox-primary mr-2\" checked={moderation} onChange={e => this.onModerationChange(e.target.checked)} />\r\n                                                                <span></span>\r\n                                                                Manually approve posts before making them public?\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-end border-top pt-10\">\r\n                                            <button className=\"btn btn-primary\" type=\"submit\" value=\"Add Source\" onClick={() => this.onAddFeed()}>Create Feed</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : ''\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        googleReviewFeedData: state.addFeedReducer.googleReviewFeedData,\r\n    }\r\n}\r\n// const mapDispatchToProps = dispatch => {\r\n//     return { \r\n//     }\r\n// }\r\nexport default connect(mapStateToProps)(GoogleConnect);\r\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["Gconnect","Component","constructor","arguments","state","accountOption","allChild","this","props","googleReviewFeedData","responseData","moderation","connetedAccount","createdAccount","accountId","onModerationChange","value","setState","onAccountIdChange","mainAccountId","filter","f","id","parent","onAddFeed","navigation","hideAddfeed","obj","wallId","localStorage","getItem","networkId","field33","field33placeId","field33placeName","feedType","account","hashtagIGTV","onlyReels","Number","CREATE_FEED","componentDidMount","responseCode","window","location","concat","HOST_URL","data","map","i","value2","length","render","_jsx","className","children","_jsxs","src","Link","to","style","background","backgroundSize","Select","options","defaultValue","onChange","e","htmlFor","type","checked","target","onClick","connect","addFeedReducer","useNavigate","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","cache","memoized","newArgs","_i","lastThis","lastArgs","lastResult","apply","clear","_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__"],"sourceRoot":""}