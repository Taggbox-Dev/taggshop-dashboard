{"version":3,"file":"static/js/1467.f5f326b5.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownDivider.js","../node_modules/react-bootstrap/esm/DropdownHeader.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/DropdownItemText.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../packages/@react-aria/ssr/src/SSRProvider.tsx"],"sourcesContent":["import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","const _excluded = [\"children\", \"usePopper\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst noop = () => {};\n\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n      children,\n      usePopper: usePopperProp = true\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useDropdownMenu(Object.assign({}, options, {\n    usePopper: usePopperProp\n  }));\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownMenu.displayName = 'DropdownMenu';\n\n/** @component */\nexport default DropdownMenu;","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nconst noop = () => {};\n\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  };\n\n  // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show,\n    toggle\n  }];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n\n/** @component */\nexport default DropdownToggle;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      eventKey,\n      disabled,\n      onClick,\n      active,\n      as: Component = Button\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element;\n    // ensure that a menu set triggers an update for consumers\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n\n/**\n * @displayName Dropdown\n * @public\n */\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle);\n\n  // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    }\n    // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target);\n\n    // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n    const isInput = /input|textarea/i.test(target.tagName);\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n        return;\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        onToggle(false, meta);\n        break;\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownDivider = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'hr',\n  role = 'separator',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-divider');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownDivider.displayName = 'DropdownDivider';\nexport default DropdownDivider;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  role = 'heading',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownHeader.displayName = 'DropdownHeader';\nexport default DropdownHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItemText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-item-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nDropdownItemText.displayName = 'DropdownItemText';\nexport default DropdownItemText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    var _meta$originalEvent, _meta$originalEvent$t;\n    /** Checking if target of event is ToggleButton,\n     * if it is then nullify mousedown event\n     */\n    const isToggleButton = (_meta$originalEvent = meta.originalEvent) == null ? void 0 : (_meta$originalEvent$t = _meta$originalEvent.target) == null ? void 0 : _meta$originalEvent$t.classList.contains('dropdown-toggle');\n    if (isToggleButton && meta.source === 'mousedown') {\n      return;\n    }\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","\"use client\";\n\nimport * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip = true,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint];\n\n        // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\n\n  // For custom components provide additional, non-DOM, props;\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...menuProps,\n    style: style\n    // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nexport default DropdownMenu;","\"use client\";\n\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useMergedRefs(warningRef, ref);\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  // @ts-ignore\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n"],"names":["useForceUpdate","dispatch","useReducer","state","React","_excluded","noop","useDropdownMenu","options","arguments","length","undefined","context","useContext","DropdownContext","arrowElement","attachArrowRef","useCallbackRef","hasShownRef","useRef","flip","offset","rootCloseEvent","fixed","placement","placementOverride","popperConfig","enableEventListeners","usePopper","shouldUsePopper","show","current","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","Object","assign","ref","id","attributes","style","styles","metadata","hasShown","toggle","arrowProps","arrow","useClickOutside","e","clickTrigger","disabled","DropdownMenu","_ref","children","usePopperProp","source","excluded","key","i","target","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","props","meta","_jsx","_Fragment","displayName","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","useSSRSafeId","setToggle","handleClick","useCallback","onClick","DropdownToggle","NavContext","makeEventKey","eventKey","href","String","useUncontrolledProp","propValue","defaultValue","handler","wasPropRef","stateValue","setState","useState","isProp","wasProp","_len","args","Array","_key","value","rest","returnValue","useDropdownItem","_ref2","active","onSelectCtx","SelectableContext","navContext","activeKey","isActive","useEventCallback","event","isPropagationStopped","dataAttr","DropdownItem","as","Component","Button","dropdownItemProps","useRefWithUpdate","forceUpdate","attachRef","element","Dropdown","defaultShow","rawShow","onSelect","onToggle","rawOnToggle","itemSelector","concat","focusFirstItemOnShow","window","useWindow","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","useMemo","contains","ownerDocument","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","qsa","useEffect","getNextFocusedChild","items","index","Math","max","min","useEventListener","document","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","preventDefault","addEventListener","_menuRef$current2","once","stopPropagation","Provider","Menu","Toggle","Item","DropdownDivider","className","bsPrefix","role","useBootstrapPrefix","classNames","DropdownHeader","Anchor","prefix","DropdownItemText","pProps","drop","align","navbar","_4","autoClose","useUncontrolled","isInputGroup","InputGroupContext","isRTL","useIsRTL","handleToggle","_meta$originalEvent","_meta$originalEvent$t","classList","currentTarget","alignEnd","getDropdownMenuPlacement","contextValue","directionClasses","down","up","end","start","BaseDropdown","ItemText","Divider","Header","dropDirection","showProps","renderOnMount","variant","isNavbar","NavbarContext","contextAlign","alignClasses","brkPoint","direction","push","useMergedRefs","useWrappedRefWithWarning","useIsomorphicEffect","update","close","split","childBsPrefix","dropdownContext","toggleProps","componentName","$b5e257d569688ac6$var$defaultContext","round","random","$b5e257d569688ac6$var$SSRContext","$670gB$react","createContext","$b5e257d569688ac6$var$IsSSRContext","$b5e257d569688ac6$var$canUseDOM","Boolean","createElement","$b5e257d569688ac6$var$componentIds","WeakMap","$b5e257d569688ac6$var$useCounter","isDisabled","ctx","$670gB$useContext","$670gB$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","currentOwner","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","prevComponentValue","get","set","memoizedState","delete","$b5e257d569688ac6$export$619500959fc48b26","defaultId","useId","didSSR","$670gB$useState","$b5e257d569688ac6$var$subscribe","$b5e257d569688ac6$var$getSnapshot","$b5e257d569688ac6$var$getServerSnapshot","console","warn","counter","onStoreChange"],"sourceRoot":""}