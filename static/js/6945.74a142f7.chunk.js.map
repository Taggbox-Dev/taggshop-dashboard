{"version":3,"file":"static/js/6945.74a142f7.chunk.js","mappings":"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","sources":["app/components/content/moderation/components/OnsiteUpload/components/PreviewOnsite.js","app/components/content/moderation/components/OnsiteUpload/components/UploadImage.js","app/components/content/moderation/components/OnsiteUpload/components/UploadLogo.js","app/components/content/moderation/components/OnsiteUpload/components/UrlInput.js","app/components/content/moderation/components/OnsiteUpload/components/ColorPicker.js","app/components/content/moderation/components/OnsiteUpload/components/CodeShareCopy.js","app/components/content/moderation/components/OnsiteUpload/components/LinkOnsite.js","app/components/content/moderation/components/OnsiteUpload/components/WebsiteOnsite.js","app/components/content/moderation/components/OnsiteUpload/OnsiteUpload.js","actions/publishAction.js","app/components/website/publish/elements/popup/SendCodeByEmail.js","utils/addAccount.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class PreviewOnsite extends Component {\r\n\r\n    render() {\r\n        const { title, subTitle, backgroundImage, selectedColor, btnText, logoImage } = this.props;\r\n        return (\r\n            <div className=\"form-body\">\r\n                <div className=\"uploader-preview\">\r\n                    <div className=\"onsite_preview\">\r\n                        <div className=\"onsite_preview_inner\" style={{ backgroundColor: selectedColor, backgroundImage: `url(${backgroundImage})` }}>\r\n                            <div className=\"onsite_submit_post_main\">\r\n                                <div className=\"tb_onsite_post_inner\">\r\n                                    <div className=\"tb_onsite_upload_post\">\r\n                                        <div className=\"tb_onsite_box\">\r\n                                            <div className=\"tb_onsite_box_header pt-4\">\r\n                                                {logoImage ? <div className=\"tb_onsite_logo_wrap\">\r\n                                                    <img loading=\"lazy\" src={logoImage} className=\"tb_onsite_popup_logo\" width=\"400\" height=\"50\" alt=\"logo\" />\r\n                                                </div> : null}\r\n                                            </div>\r\n                                            <div className=\"tb_onsite_box_title pt-0 pb-2\">\r\n                                                <div className=\"tb_onsite_title\">{title}</div>\r\n                                                <div className=\"tb_onsite_sub_heading mb-0\">{subTitle}</div>\r\n                                            </div>\r\n                                            <div className=\"tb_onsite_box_body\">\r\n                                                <div className=\"tb_onsite_post_tabs\">\r\n                                                    <div className=\"tb_onsite_separator\">OR</div>\r\n                                                    <div className=\"tb_onsite_tabs_nav\">\r\n                                                        <div className=\"tb_onsite_tabs active\">Add Caption</div>\r\n                                                        <div className=\"tb_onsite_tabs\">Submit Review</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"tb_onsite_tabs_content\">\r\n                                                    <div className=\"tb_onsite_add_caption_tab\">\r\n                                                        <div className=\"tb_onsite_image_upload_box mb-3\">\r\n                                                            <div className=\"tb_onsite_upload_box_content\">\r\n                                                                <div>\r\n                                                                    <button type=\"button\" className=\"btn\">\r\n                                                                        <input className=\"uppy-DragDrop-input\" type=\"file\" hidden=\"\" name=\"files[]\" accept=\"image/*,video/*\" />\r\n                                                                        <div className=\"uppy-DragDrop-inner\">\r\n                                                                            <div className=\"uppy-DragDrop-label\">Drag a video / image to upload (optional)</div>\r\n                                                                            <span className=\"uppy-DragDrop-note\">Video Size : Max 100MB | Photo Size : Max 15MB | Max 20 Posts</span>\r\n                                                                        </div>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"tb_onsite_uploader_status\">\r\n                                                                    <div>\r\n                                                                        <div className=\"uppy-Root uppy-StatusBar is-waiting\" aria-hidden=\"true\" dir=\"ltr\">\r\n\r\n                                                                            <div className=\"uppy-StatusBar-actions\"></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"tb_onsite_add_caption_tab\">\r\n                                                        <div className=\"tb_onsite_form_group mb-2\"><textarea className=\"tb_onsite_form_control_textarea\" rows=\"2\" placeholder=\"Add your caption here....\"></textarea></div>\r\n                                                        <div className=\"tb_onsite_form_actions\">\r\n                                                            <div className=\"tb_onsite_btn_primary btn-sm\">{btnText}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <p className=\"text-center mt-3 mb-0 text-gray-500 fw-semibold\">SnapUp Preview</p> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { Uppy } from \"@uppy/core\";\r\nimport Transloadit from \"@uppy/transloadit\";\r\nimport GoogleDrive from '@uppy/google-drive';\r\nimport Url from '@uppy/url';\r\nimport { DashboardModal } from '@uppy/react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { IS_LIVE } from '../../../../../../../actions/api';\r\n// import { IS_LIVE } from '../../../../../Services/Api'\r\nimport '@uppy/core/dist/style.min.css';\r\nimport '@uppy/dashboard/dist/style.min.css';\r\n\r\n\r\nconst uppyConfig = {\r\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\r\n    uppyBucket: 'cloud.tagshop.ai',\r\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\r\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\r\n    companionUrl: IS_LIVE ? 'https://app.taggbox.com' : 'https://test.taggbox.com'\r\n}\r\n\r\nexport default class UploadImage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\r\n            .use(Transloadit, {\r\n                target: '#a',\r\n                params: {\r\n                    auth: {\r\n                        key: uppyConfig.uppyKey\r\n                    },\r\n                    steps: {\r\n                        store: {\r\n                            robot: \"/wasabi/store\",\r\n                            bucket_region: \"us-west-1\",\r\n                            bucket: uppyConfig.uppyBucket,\r\n                            key: uppyConfig.uppyAwsKey,\r\n                            secret: uppyConfig.uppyAwsSecret,\r\n                            path: 'tmp/${file.id}.${file.ext}'\r\n                        }\r\n                    }\r\n                },\r\n                waitForEncoding: true\r\n            })\r\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n    }\r\n    state = {\r\n        backgroundModal: false\r\n    }\r\n    componentDidMount() {\r\n        var self = this;\r\n        this.uppy.on('transloadit:result', (stepName, result) => {\r\n            self.props.onClickTouploadImage(`https://cloud.tagshop.ai/tmp/${result.id}.${result.ext}`, () => {\r\n                setTimeout(() => {\r\n                    this.uppy.cancelAll()\r\n                    this.setState({ backgroundModal: false })\r\n                }, 300)\r\n            })\r\n        })\r\n    }\r\n    onBackgroundClose = event => {\r\n        this.uppy.cancelAll()\r\n        this.setState({ backgroundModal: false })\r\n    }\r\n    onBackgroundOpen = event => {\r\n        this.setState({ backgroundModal: true }, () => {\r\n            $(\".uppy-Dashboard-close\").click(() => {\r\n                this.uppy.cancelAll()\r\n                this.setState({ backgroundModal: false })\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const { imageStyle, backgroundImage } = this.props\r\n        const { backgroundModal } = this.state\r\n        return <>\r\n            <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\r\n                <label className=\"mb-1 fs-9 fw-medium\">Background Image</label>\r\n                {!backgroundImage ? <button type=\"button\" className=\"btn btn-secondary btn-sm w-100 mb-2\" onClick={() => this.setState({ backgroundModal: true })}>Attach Image</button> : null}\r\n                {backgroundImage ?\r\n                    <div className=\"card card-custom mb-2 w-100 rounded-1\">\r\n                        <div className=\"card-body d-flex flex-column p-1\">\r\n                            <div className=\"position-relative d-flex align-items-center cursor-pointer\">\r\n                                <div className=\"position-relative rounded-1 bg-light overflow-hidden w-100\" style={imageStyle}>\r\n                                    <img className=\"object-center-contain position-absolute\" loading=\"lazy\" src={backgroundImage} height={500} width={300} />\r\n                                </div>\r\n                                <div className=\"removeBanner position-absolute end-0 top-0 pt-2 pe-2\">\r\n                                    <div className=\"d-flex align-items-center justify-content-end\">\r\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2 snapup_edit_btn\" onClick={() => this.setState({ backgroundModal: true })}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                                    <path d=\"M16.7574 2.99677L14.7574 4.99677H5V18.9968H19V9.23941L21 7.23941V19.9968C21 20.5491 20.5523 20.9968 20 20.9968H4C3.44772 20.9968 3 20.5491 3 19.9968V3.99677C3 3.44448 3.44772 2.99677 4 2.99677H16.7574ZM20.4853 2.09727L21.8995 3.51149L12.7071 12.7039L11.2954 12.7063L11.2929 11.2897L20.4853 2.09727Z\"></path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </OverlayTrigger>\r\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px snapup_delete_btn\" onClick={() => this.props.onClickTouploadImage('', () => { })}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                                    <path d=\"M7 4V2H17V4H22V6H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V6H2V4H7ZM6 6V20H18V6H6ZM9 9H11V17H9V9ZM13 9H15V17H13V9Z\"></path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </OverlayTrigger>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> : null}\r\n            </div>\r\n            {\r\n                backgroundModal ?\r\n                 <DashboardModal\r\n                    animateOpenClose={true}\r\n                    open={backgroundModal}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppy}\r\n                    onRequestClose={this.onBackgroundClose}\r\n                    closeAfterFinish={true}\r\n                    plugins={['Url']}\r\n                /> \r\n                : null\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { Uppy } from \"@uppy/core\";\r\nimport Transloadit from \"@uppy/transloadit\";\r\nimport GoogleDrive from '@uppy/google-drive';\r\nimport Url from '@uppy/url';\r\nimport { DashboardModal } from '@uppy/react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { IS_LIVE } from '../../../../../../../actions/api';\r\n// import { IS_LIVE } from '../../../../../Services/Api'\r\n\r\nconst uppyConfig = {\r\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\r\n    uppyBucket: 'cloud.tagshop.ai',\r\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\r\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\r\n    companionUrl: IS_LIVE ? 'https://app.taggbox.com' : 'https://test.taggbox.com'\r\n}\r\n\r\nexport default class UploadImage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\r\n            .use(Transloadit, {\r\n                target: '#a',\r\n                params: {\r\n                    auth: {\r\n                        key: uppyConfig.uppyKey\r\n                    },\r\n                    steps: {\r\n                        store: {\r\n                            robot: \"/wasabi/store\",\r\n                            bucket_region: \"us-west-1\",\r\n                            bucket: uppyConfig.uppyBucket,\r\n                            key: uppyConfig.uppyAwsKey,\r\n                            secret: uppyConfig.uppyAwsSecret,\r\n                            path: 'tmp/${file.id}.${file.ext}'\r\n                        }\r\n                    }\r\n                },\r\n                waitForEncoding: true\r\n            })\r\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n    }\r\n    state = {\r\n        backgroundModal: false\r\n    }\r\n    componentDidMount() {\r\n        var self = this;\r\n        this.uppy.on('transloadit:result', (stepName, result) => {\r\n            self.props.onClickTouploadLogo(`https://cloud.tagshop.ai/tmp/${result.id}.${result.ext}`, () => {\r\n                setTimeout(() => {\r\n                    this.uppy.cancelAll()\r\n                    this.setState({ backgroundModal: false })\r\n                }, 300)\r\n            })\r\n        })\r\n    }\r\n    onBackgroundClose = event => {\r\n        this.uppy.cancelAll()\r\n        this.setState({ backgroundModal: false })\r\n    }\r\n    onBackgroundOpen = event => {\r\n        this.setState({ backgroundModal: true }, () => {\r\n            $(\".uppy-Dashboard-close\").click(() => {\r\n                this.uppy.cancelAll()\r\n                this.setState({ backgroundModal: false })\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const { imageStyle, logoImage } = this.props\r\n        const { backgroundModal } = this.state\r\n        return <>\r\n            <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\r\n                <label className=\"mb-1 fs-9 fw-medium\">Logo</label>\r\n                {!logoImage ? <button type=\"button\" className=\"btn btn-secondary btn-sm w-100 mb-2\" onClick={() => this.setState({ backgroundModal: true })}>Attach Logo</button> : null}\r\n                {logoImage ?\r\n                    <div className=\"card card-custom mb-2 w-100 rounded-1\">\r\n                        <div className=\"card-body d-flex flex-column p-1\">\r\n                            <div className=\"position-relative d-flex align-items-center cursor-pointer\">\r\n                                <div className=\"position-relative rounded-1 bg-light overflow-hidden w-100\" style={imageStyle}>\r\n                                    <img className=\"object-center-contain position-absolute\" loading=\"lazy\" src={logoImage} height={500} width={300} />\r\n                                </div>\r\n                                <div className=\"removeBanner position-absolute end-0 top-0 pt-2 pe-2\">\r\n                                    <div className=\"d-flex align-items-center justify-content-end\">\r\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2 snapup_edit_btn\" onClick={() => this.setState({ backgroundModal: true })}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                                    <path d=\"M16.7574 2.99677L14.7574 4.99677H5V18.9968H19V9.23941L21 7.23941V19.9968C21 20.5491 20.5523 20.9968 20 20.9968H4C3.44772 20.9968 3 20.5491 3 19.9968V3.99677C3 3.44448 3.44772 2.99677 4 2.99677H16.7574ZM20.4853 2.09727L21.8995 3.51149L12.7071 12.7039L11.2954 12.7063L11.2929 11.2897L20.4853 2.09727Z\"></path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </OverlayTrigger>\r\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px snapup_delete_btn\" onClick={() => this.props.onClickTouploadLogo('', () => { })}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                                    <path d=\"M7 4V2H17V4H22V6H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V6H2V4H7ZM6 6V20H18V6H6ZM9 9H11V17H9V9ZM13 9H15V17H13V9Z\"></path>\r\n                                                </svg>  \r\n                                            </button>\r\n                                        </OverlayTrigger>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> : null}\r\n            </div>\r\n            {\r\n                backgroundModal ? <DashboardModal\r\n                    animateOpenClose={true}\r\n                    open={backgroundModal}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppy}\r\n                    onRequestClose={this.onBackgroundClose}\r\n                    closeAfterFinish={true}\r\n                    plugins={['Url']}\r\n                /> : null\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// import { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\n\r\nclass UrlInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showModal: false, genrateCode: false, codeCopied: false, shareLink: \"\", isLoading: false };\r\n    }\r\n    codeCopy = (id) => event => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        navigator.clipboard.writeText(this.props.inputUrl);\r\n        // COPY_TO_CLIPBOARD(id);\r\n    }\r\n    render() {\r\n        const { genrateCode, showModal, codeCopied } = this.state\r\n        const { inputUrl, inputId, inputSize, share, copy, edit, onClickToOpen } = this.props\r\n        return <div className=\"position-relative mb-2\">\r\n            <input type={'text'} id={inputId} className={`text-ellipsis form-control ${inputSize ? `form-control-${inputSize}` : ``}`} value={inputUrl} readOnly onClick={this.codeCopy(inputId)} style={{ paddingRight: 70 }} />\r\n            <div className=\"d-flex align-items-center position-absolute top-50 translate-middle-y end-0 pe-2 uploaderURl_buttons\">\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy URL' : 'URL Copied'}</Tooltip>}>\r\n                    <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1 uploader_copy\" onClick={this.codeCopy(inputId)}>\r\n                        {!codeCopied ?\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                <path d=\"M6.9998 6V3C6.9998 2.44772 7.44752 2 7.9998 2H19.9998C20.5521 2 20.9998 2.44772 20.9998 3V17C20.9998 17.5523 20.5521 18 19.9998 18H16.9998V20.9991C16.9998 21.5519 16.5499 22 15.993 22H4.00666C3.45059 22 3 21.5554 3 20.9991L3.0026 7.00087C3.0027 6.44811 3.45264 6 4.00942 6H6.9998ZM5.00242 8L5.00019 20H14.9998V8H5.00242ZM8.9998 6H16.9998V16H18.9998V4H8.9998V6Z\"/>\r\n                            </svg>\r\n                            :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" >\r\n                                <path d=\"M9.9997 15.1709L19.1921 5.97852L20.6063 7.39273L9.9997 17.9993L3.63574 11.6354L5.04996 10.2212L9.9997 15.1709Z\" style={{fill: '#6AC259'}} />\r\n                            </svg>\r\n                        }\r\n                    </button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Send Email</Tooltip>}>\r\n                    <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1 uploader_mail\" onClick={onClickToOpen(inputUrl)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                            <path d=\"M3 3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3ZM20 7.23792L12.0718 14.338L4 7.21594V19H20V7.23792ZM4.51146 5L12.0619 11.662L19.501 5H4.51146Z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </OverlayTrigger>\r\n                {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit Campaign Url</Tooltip>}>\r\n                            <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1\" onClick={this.EditCampaignUrlModal}>\r\n                                <i className=\"ri-edit-box-line\"></i>\r\n                            </button>\r\n                        </OverlayTrigger> */}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default UrlInput;","import React, { Component } from 'react';\r\nimport reactCSS from 'reactcss'\r\nimport { ChromePicker } from 'react-color';\r\n\r\n\r\nclass ColorPicker extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      color: props.color ? props.color : \"#fff\",\r\n    };\r\n  }\r\n\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color: color.hex }, () => this.props.onChangeColor(this.state.color))\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(this.state.color != nextProps.color){\r\n      this.setState({color:nextProps.color});\r\n    }\r\n}\r\n  render() {\r\n    //const { setValue } = this.state\r\n\r\n    const styles = reactCSS({\r\n      'default': {\r\n        color: {\r\n          background: this.state.color,\r\n        },\r\n        swatch: {\r\n          padding: '5px',\r\n          background: '#fff',\r\n          borderRadius: '1px',\r\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n          display: 'inline-block',\r\n          cursor: 'pointer',\r\n        },\r\n        popover: {\r\n          position: 'absolute',\r\n          zIndex: '999',\r\n          top:'100%',\r\n          right:0\r\n        },\r\n        cover: {\r\n          position: 'fixed',\r\n          top: '0px',\r\n          right: '0px',\r\n          bottom: '0px',\r\n          left: '0px',\r\n        },\r\n      },\r\n    });\r\n\r\n    return <><div className=\"colorPickerWrapper\" onClick={this.handleClick}>\r\n      <div className=\"colorPicker\" style={styles.color} />\r\n    </div>\r\n      {this.state.displayColorPicker ? <div style={styles.popover}>\r\n        <div style={styles.cover} onClick={this.handleClose} />\r\n        <ChromePicker color={this.state.color} onChange={this.handleChange} />\r\n      </div> : null}</>\r\n  }\r\n}\r\n\r\nexport default ColorPicker;","import React, { Component } from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// import { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\n\r\n\r\nclass CodeShareCopy extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\r\n    }\r\n    shareEmbedModal = (id) => event => this.setState({\r\n        showModal: true,\r\n        id: id\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        navigator.clipboard.writeText(this.props.copyText)\r\n        // COPY_TO_CLIPBOARD(id);\r\n    }\r\n    render() {\r\n        const { codeCopied } = this.state\r\n        const { copyText, id, height, onClickToOpen, readOnly } = this.props\r\n\r\n        return <div className=\"mb-2 mb-xl-3 position-relative link_uploader_textarea\">\r\n            <textarea className={`form-control textarea-min-row-${height} fs-10`} id={id} onClick={readOnly ? () => { this.codeCopy(id) } : null} value={copyText} defaultValue={copyText} readOnly={readOnly} />\r\n            <div className=\"snapup_emebed_action position-absolute\" style={{ bottom: 5, right: 7 }}>\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? id == 'smsLink' ? 'Copy Message' : 'Copy Code' : id == 'smsLink' ? 'Message Copied' : 'Code Copied'}</Tooltip>}>\r\n                    <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2 snapUp_embed_copy\" onClick={() => { this.codeCopy(id) }}>\r\n                        {!codeCopied ?\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                <path d=\"M6.9998 6V3C6.9998 2.44772 7.44752 2 7.9998 2H19.9998C20.5521 2 20.9998 2.44772 20.9998 3V17C20.9998 17.5523 20.5521 18 19.9998 18H16.9998V20.9991C16.9998 21.5519 16.5499 22 15.993 22H4.00666C3.45059 22 3 21.5554 3 20.9991L3.0026 7.00087C3.0027 6.44811 3.45264 6 4.00942 6H6.9998ZM8.9998 6H16.9998V16H18.9998V4H8.9998V6Z\"/>\r\n                            </svg>\r\n                            :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" >\r\n                                <path d=\"M9.9997 15.1709L19.1921 5.97852L20.6063 7.39273L9.9997 17.9993L3.63574 11.6354L5.04996 10.2212L9.9997 15.1709Z\" style={{fill: '#6AC259'}} />\r\n                            </svg>\r\n                        }\r\n                    </button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                    <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode snapUp_geneate_code\" type=\"button\" onClick={onClickToOpen(copyText)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                            <path d=\"M3 3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3ZM12.0606 11.6829L5.64722 6.2377L4.35278 7.7623L12.0731 14.3171L19.6544 7.75616L18.3456 6.24384L12.0606 11.6829Z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </OverlayTrigger>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default CodeShareCopy;","import React, { Component } from 'react';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PreviewOnsite from './PreviewOnsite';\r\nimport CodeShareCopy from './CodeShareCopy';\r\n\r\nclass LinkOnsite extends Component {\r\n\r\n    render() {\r\n        const { tinyUrl, onClickToOpen } = this.props\r\n\r\n        return <div className=\"d-flex align-items-start flex-column flex-lg-row\">\r\n            <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\r\n                <PerfectScrollbar>\r\n                    <div className=\"upload_aside_scroll\">\r\n                        <div className=\"mb-2 mt-2\">\r\n                            <h4 className=\"mb-3 fs-9\">1. Collect and show shared content. </h4>\r\n                            <p className=\"mb-2\">Feel free to share this URL with your audience, enabling them to upload visual user-generated content (UGC) and reviews.</p>\r\n                            <p className=\"mb-5\">Get creative with the UGC on your marketing touchpoints to delight your audience.</p>\r\n                            <h4 className=\"mb-3 fs-9\">SnapUp URL</h4>\r\n                            <CodeShareCopy copyText={tinyUrl} id={'siteLink'} height={2} onClickToOpen={onClickToOpen} readOnly={true} />\r\n                            {/* <h4 className=\"mb-3 fs-9\">2. Manage your assets</h4>\r\n                            <p className=\"mb-5\">You can find your collected posts in the \"UGC Library\" section of the app. Here you can sort out your content according to your preferences.</p> */}\r\n                        </div>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </div>\r\n            <div className=\"d-flex flex-grow-1 w-100 flex-column bg-light p-xl-5 p-3 mb-3 rounded-1\">\r\n                <p className=\"text-start mb-3\"><strong>SnapUp Preview</strong></p>\r\n                <div className=\"mb-2\">\r\n                    {/* <UrlInput inputUrl={tinyUrl} inputId={'onsiteInput'} inputSize={''} onClickToOpen={onClickToOpen}\r\n                        share={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                        copy={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                        edit={[{ status: true, tooltip: 'Share Onsite Url' }]} /> */}\r\n                </div>\r\n                <PreviewOnsite {...this.props} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default LinkOnsite;","import React, { Component, Suspense } from 'react';\r\nimport SVG from 'react-inlinesvg';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n// import UrlInput from '../../../CommonComponents/UrlInput';\r\n// import CodeShareCopy from '../../../CommonComponents/CodeShareCopy';\r\n// import ColorPicker from '../../../CommonComponents/ColorPicker';\r\nimport PickColor from '.././components/ColorPicker';\r\nimport QRCode from 'react-qr-code';\r\nimport CodeShareCopy from './CodeShareCopy'; \r\nimport { UPPY_UPLOAD_PATH } from '../../../../../../../actions/api';\r\n\r\n\r\nconst WidgetOnsiteButton = ({ qrCodeStatus, QRButtonText, qrUrl, bgColor, fcColor, fontSize, uniqueCode, onUploadQrChange }) => {\r\n    return <div className=\"tb_onsite_upload_btn_wrap\">\r\n        <div className=\"tb_onsite_upload_btn\">\r\n            <div className='tb_onsite_btn' style={{ backgroundColor: bgColor, color: fcColor }}>\r\n                <div className=\"tb_onsite_qr_btn_wrap\">\r\n                    {qrCodeStatus == 1 ? <div className='tb_onsite_qr_code' style={{ padding: 1 }}>\r\n                        {!uniqueCode ? <QRCode\r\n                            level=\"L\"\r\n                            size={60}\r\n                            value={qrUrl}\r\n                        /> :\r\n                        <img src={`${UPPY_UPLOAD_PATH}onsiteupload/images/${uniqueCode}.png`} onError={e => onUploadQrChange(true)} height={60} width={60} alt=\"QR Code\" />}\r\n                    </div> : null}\r\n                    {QRButtonText !== '' ?\r\n                        <div className={`tb_onsite_btn_txt`} style={{ fontSize: fontSize }}>\r\n                            {QRButtonText}\r\n                        </div> : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nclass WebsiteOnsite extends Component {\r\n    state = { error: false, buttonText: \"Scan QR or Tap to submit UGC\", bgColor: \"#000\", fcColor: \"#fff\", fontSize: 8, qrStatus: true };\r\n    onBGColorChange = (value) => {\r\n        this.setState({ bgColor: value })\r\n\r\n    }\r\n    onFCColorChange = (value) => {\r\n        this.setState({ fcColor: value })\r\n    }\r\n    onFontSize = event => this.setState({ fontSize: parseInt(event.target.value > 30 ? 30 : event.target.value) })\r\n    onQrStatus = event => {\r\n        this.setState({ qrStatus: event.target.checked })\r\n    }\r\n    onChangeText = event => {\r\n        this.setState({ buttonText: event.target.value })\r\n    }\r\n    render() {\r\n        const { error, buttonText, bgColor, fcColor, fontSize, qrStatus } = this.state\r\n        const { tinyUrl, onClickToOpen, uniqueCode, onUploadQrChange } = this.props\r\n\r\n        return <div className=\"d-flex align-items-start flex-column flex-lg-row\">\r\n            <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\r\n                <PerfectScrollbar>\r\n                    <div className=\"upload_aside_scroll\">\r\n                        <div className=\"mb-2 mt-2\">\r\n                            <label className=\"mb-1 fs-9 fw-medium\">Button Text</label>\r\n                            <div className=\"snapup_button_text_input\">\r\n                                <input type=\"text\" name=\"title\" className={`form-control form-control-sm ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Button Title...\" value={buttonText} onChange={this.onChangeText} />\r\n                                {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                            </div>\r\n                        </div>\r\n                        <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\r\n                            <span className=\"ms-0 fs-9 fw-medium\">Background Color</span>\r\n                            <Suspense fallback={<></>}>\r\n                                <PickColor color={bgColor} onChangeColor={this.onBGColorChange} />\r\n                                {/* <PickColor id=\"snap-up-website-bg\" defaultColor={bgColor} changeColor={this.onBGColorChange}  /> */}\r\n\r\n                            </Suspense>\r\n                        </label>\r\n                        <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\r\n                            <span className=\"ms-0 fs-9 fw-medium\">Font Color</span>\r\n                            <Suspense fallback={<></>}>\r\n                                <PickColor color={fcColor} onChangeColor={this.onFCColorChange} />\r\n                                {/* <PickColor id=\"snap-up-website-font\" defaultColor={fcColor} changeColor={this.onFCColorChange}  /> */}\r\n                            </Suspense>\r\n                        </label>\r\n                        <div className=\"d-flex align-items-stretch flex-column justify-content-between py-1\">\r\n                            <div className=\"\">\r\n                                <p className=\"my-2\"><span className=\"fs-9 fw-medium\">Font Size</span></p>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center w-100 mb-1 snapup_fontSize_outer\">\r\n                                <div className=\"d-flex flex-grow-1 pe-3\">\r\n                                    <div className=\"form-group pt-1 w-100 \">\r\n                                        <input type=\"range\" className=\"form-range\" min=\"10\" max=\"30\" step=\"1\" value={fontSize} defaultValue={fontSize} id=\"formControlRange\" onChange={this.onFontSize} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex align-items-center snapup_fontSize_wrap\">\r\n                                    <div className=\"form-group me-1\">\r\n                                        <input type=\"number\" className=\"form-control form-control-sm w-54px snapup_fontSize_input\" value={fontSize} defaultValue={fontSize} onChange={this.onFontSize} />\r\n                                    </div>\r\n                                    px\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <label className=\"form-check form-switch py-2 align-items-center justify-content-between h-40px py-1\">\r\n                            <span className=\"form-check-label ps-0 fs-9 fw-medium text-gray-800\">QR (Show/Hide)</span>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"shareIcons\" onChange={this.onQrStatus} checked={qrStatus} />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                            <h4 className=\"mb-3 fs-9\">SnapUp Embed Code</h4>\r\n                        <CodeShareCopy copyText={\r\n                            `<style>\t\t\r\n.tb_onsite_upload_btn_wrap {padding: 10px;}\r\n.tb_onsite_upload_btn,\r\n.tb_onsite_upload_btn_wrap {align-items: center;display: flex;justify-content: center}\r\n.tb_onsite_upload_btn {flex-direction: column;max-width: 350px}\r\n.tb_onsite_btn_txt {align-items: center;display: flex;font-size: 14px;font-weight: 400;padding: 0 10px}\r\n.tb_onsite_btn {background-color: ${bgColor};border-radius: 3px;color: #fff;cursor: pointer;font-weight: 500;padding: 6px;text-decoration:none;}\r\n.tb_onsite_btn:hover,.tb_onsite_btn:focus {text-decoration:none;}\r\n.tb_onsite_btn,\r\n.tb_onsite_qr_btn_wrap {align-items: stretch;display: flex;justify-content: center}\r\n.tb_onsite_qr_code {align-items: center;background: #fff;display: flex;justify-content: center;object-fit: cover;padding: 0px}\r\n</style> \r\n<div class=\"tb_onsite_upload_btn_wrap\">\r\n\t<div class=\"tb_onsite_upload_btn\">\r\n\t\t<a href=\"${tinyUrl}\" target=\"_blank\" style=\"background-color: ${bgColor}\" class=\"tb_onsite_btn\">\r\n\t\t\t<div class=\"tb_onsite_qr_btn_wrap\"> \r\n\t\t\t\t${qrStatus ? `<div class=\"tb_onsite_qr_code\"> <img src=\"${UPPY_UPLOAD_PATH}onsiteupload/images/${uniqueCode}.png\" height=\"60\" width=\"60\" /> </div>` : \"\"}\r\n\t\t\t\t<div class=\"tb_onsite_btn_txt\" style=\"color:${fcColor};font-size:${fontSize}px;text-align:center;\">${buttonText}</div>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t</div>\r\n</div>`}\r\n                            id={'buttonEmbedCode'} height={10} onClickToOpen={onClickToOpen} readOnly={true} />\r\n                        </div>\r\n                </PerfectScrollbar>\r\n\r\n            </div>\r\n            <div className=\"d-flex flex-grow-1 w-100 flex-column bg-light p-xl-5 p-3 mb-3 rounded-1\" style={{ height: 520 }}>\r\n                <div>\r\n                    {/* <UrlInput inputUrl={tinyUrl} inputId={'onsite1'} inputSize={''} onClickToOpen={onClickToOpen}\r\n                        share={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                        copy={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                        edit={[{ status: false, tooltip: 'Share Onsite Url' }]} /> */}\r\n                    <div className='w-100 p-5 block-center'>\r\n                        <div className=\"bg-white rounded-1 p-2 w-100 snapup_email_template_prev\" style={{ maxWidth: 300 }}>\r\n                            <div className=\"block-center py-3 mx-auto justify-content-between\">\r\n                                <div className=\"bg-light rounded-4 h-8px mb-2 me-3 w-60px\"></div>\r\n                                <div className=\"d-flex align-items-center justify-content-between w-100\" style={{ maxWidth: 150 }}>\r\n                                    <div className=\"w-75 bg-light rounded-4 h-8px mb-2 ms-2\"></div>\r\n                                    <div className=\"w-75 bg-light rounded-4 h-8px mb-2 ms-2\"></div>\r\n                                    <div className=\"w-75 bg-light rounded-4 h-8px mb-2 ms-2\"></div>\r\n                                    <div className=\"w-75 bg-light rounded-4 h-8px mb-2 ms-2\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-start mb-3\">\r\n                                <div className=\"w-100\">\r\n                                    <div className=\"w-100 bg-light rounded-4 h-8px mb-2\"></div>\r\n                                    <div className=\"w-75 bg-light rounded-4 h-8px mb-2\"></div>\r\n                                </div>\r\n                                <div className=\"block-center flex-column w-100\">\r\n                                    <div className=\"w-100 bg-light h-60px\" style={{ maxWidth: 100 }}></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-center flex-column mx-auto\">\r\n                                <div className=\"w-25 bg-light rounded-4 h-6px mb-2 ms-2\"></div>\r\n                                <div className=\"w-50 bg-light rounded-4 h-6px mb-2 ms-2\"></div>\r\n                            </div>\r\n                            <div className=\"w-100\" style={{ transform: 'scale(0.8)' }}>\r\n                                <WidgetOnsiteButton qrCodeStatus={qrStatus} onUploadQrChange={onUploadQrChange} QRButtonText={buttonText} qrUrl={tinyUrl} bgColor={bgColor} uniqueCode={uniqueCode} fcColor={fcColor} fontSize={fontSize} />\r\n                            </div>\r\n                            <div className=\"d-flex mb-3\">\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                            </div>\r\n                            <div className=\"d-flex mb-3\">\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                                <div className=\"h-80px w-100 bg-light mx-1 rounded-1\"></div>\r\n                            </div>\r\n                            <div className=\"block-center flex-column mb-3 mx-auto\">\r\n                                <div className=\"w-50 bg-light rounded-4 h-6px mb-2 ms-2\"></div>\r\n                                <div className=\"w-25 bg-light rounded-4 h-6px mb-2 ms-2\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default WebsiteOnsite;","\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport PreviewOnsite from './components/PreviewOnsite';\r\nimport UploadImage from './components/UploadImage';\r\nimport UploadLogo from './components/UploadLogo';\r\nimport { CLOUDPATH_TAGGSHOP, HOST_URL, WEBSITE_EMBED_URL } from '../../../../../../actions/api';\r\nimport UrlInput from './components/UrlInput';\r\nimport ColorPicker from './components/ColorPicker';\r\nimport SendCodeByEmail from '../../../../website/publish/elements/popup/SendCodeByEmail';\r\nimport { CREATE_ONSITE_FEED, SNAPUP_DETAILS_ACTION } from '../../../../../../actions/addFeedActions';\r\nimport withRouter from '../../../../../routes/WithRouter';\r\nimport LinkOnsite from './components/LinkOnsite';\r\nimport WebsiteOnsite from './components/WebsiteOnsite';\r\n\r\nclass OnsiteUpload extends Component {\r\n    state = {\r\n        onSiteEnable: true,\r\n        loading: false,\r\n        title: 'Submit your post',\r\n        subTitle: 'You can share your reviews/rating here',\r\n        error: false,\r\n        subtitleError: false,\r\n        selectedColor: '#eff2f3',\r\n        btnText: 'Submit',\r\n        btnTextError: false,\r\n        msgError: false,\r\n        backgroundImage: '',\r\n        msg: 'The post(s) will be appeared after the admin approval',\r\n        tinyUrl: `${WEBSITE_EMBED_URL}${localStorage.getItem('wallId')}/onsite-upload?wall=1`,\r\n        uniqueCode: null,\r\n        isLoading: false,\r\n        showModal: false,\r\n        dataShare: null,\r\n        logoImage: null,\r\n        buttonText: \"Create Connection\",\r\n        moderation: false,\r\n        ugcSettings: null,\r\n        firstTime: true,\r\n        uploadQr: true,\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.onLoadSettings()\r\n        if(this.props.feedInfo[0].value1){\r\n            console.log('this.props.feedInfo', this.props.feedInfo[0].value1)\r\n            this.setState({uploadQr: false, uniqueCode: this.props.feedInfo[0].value1})\r\n        }\r\n    }\r\n    onLoadSettings = () => {\r\n        const { Personalization } = this.props\r\n        const ugcSettings = Personalization?.onsite_settings ? JSON.parse(Personalization.onsite_settings).taggshop : null \r\n        \r\n        if(ugcSettings){\r\n            const { onsite_bg_color_wg, onsite_bg_image_wg, onsite_popup_btn_txt, onsite_popup_sub_heading, onsite_popup_title, onsite_succ_msg, onsite_status, onsite_logo } = ugcSettings;\r\n            this.setState({ugcSettings: ugcSettings, firstTime: false})\r\n            this.setState({ title: onsite_popup_title, subTitle: onsite_popup_sub_heading, btnText: onsite_popup_btn_txt, msg: onsite_succ_msg, backgroundImage: onsite_bg_image_wg, logoImage: onsite_logo, selectedColor: onsite_bg_color_wg, onSiteEnable: onsite_status == 1 ? true : false, buttonText: \"Update Connection\" })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, subtitleError: false, subtitleError: false, btnTextError: false, msgError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onColorChange = (value) => {\r\n        this.setState({ selectedColor: value })\r\n    }\r\n\r\n    onClickTouploadImage = (value, callBack) => {\r\n        this.setState({ backgroundImage: value }, () => callBack())\r\n    }\r\n    onClickTouploadLogo = (value, callBack) => {\r\n        this.setState({ logoImage: value }, () => callBack())\r\n    }\r\n    \r\n    onUploadQrChange = (state) => this.setState({uploadQr: state})\r\n\r\n    onSubmit = () => {\r\n        const { title, subTitle, backgroundImage, selectedColor, onSiteEnable, btnText, msg, logoImage, moderation, ugcSettings, uploadQr, tinyUrl } = this.state;\r\n        const { navigate, SNAPUP_DETAILS_ACTION } = this.props\r\n        if (title == '') {\r\n            this.setState({ error: true });\r\n        } else if (subTitle == '') {\r\n            this.setState({ subTitle: true });\r\n        } else if (btnText == '') {\r\n            this.setState({ btnTextError: true });\r\n        } else if (msg == '') {\r\n            this.setState({ msg: true });\r\n        } else {\r\n            var obj = {\r\n                network: 29,\r\n                filter: 2,\r\n                moderation: moderation ? 1 : 0,\r\n                onsite_popup_title: title,\r\n                onsite_popup_btn_txt: btnText,\r\n                onsite_popup_sub_heading: subTitle,\r\n                onsite_term_url: \"https://taggbox.com/on-site-uploads-content-rights/\",\r\n                onsiteImgBack: \"\",\r\n                onsite_logo: logoImage ? logoImage : '',\r\n                Onsite_logoImageValue: \"\",\r\n                onsite_bg_color_wg: selectedColor,\r\n                onsiteBackImage: \"\",\r\n                onsite_bg_image_wg: backgroundImage ? backgroundImage : '',\r\n                Onsite_backImageValue: \"\",\r\n                onsite_succ_msg: msg,\r\n                onsite_status: onSiteEnable ? 1 : 0,\r\n                wallId: localStorage.getItem('wallId')\r\n            };\r\n            if(ugcSettings) obj = {...ugcSettings, ...obj} \r\n            else {\r\n                obj = {...obj,\r\n                    onsite_qr_code_btn_text: \"Scan QR code or click here to submit reviews/rating\",\r\n                    onsite_btn_color: \"#000000\",\r\n                    onsite_btn_txt_color: \"#ffffff\",\r\n                    onsite_link_font_btn: \"Lato\",\r\n                    onsite_css_font_btn: \"Lato\",\r\n                    onsite_font_varient_btn: \"\",\r\n                    btn_fontSize: 16,\r\n                    onsite_button_status: 1,\r\n                    onsite_qr_code_status: 1,\r\n                    onsite_thank_txt_color: \"#000000\",\r\n                    onsite_link_font_msg: \"Default\",\r\n                    onsite_css_font_msg: \"Default\",\r\n                    onsite_font_varient_msg: \"\",\r\n                    onsite_thank_fontSize: 16,\r\n                    choose_content_category:1,\r\n                }\r\n            }           \r\n            this.setState({ loading: true, error: false, subtitleError: false, btnTextError: false, msgError: false });\r\n            // console.log('obj', obj)\r\n            CREATE_ONSITE_FEED(obj, true, () =>{ navigate(`/content/managefeed/${localStorage.getItem('wallId')}`)}, uploadQr, tinyUrl)\r\n            // this.setState({loading: false})\r\n        }\r\n\r\n    }\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent,\r\n            dataShare: null\r\n        })\r\n    }\r\n\r\n    onClickToOpen = (dataShare) => event => this.setState({\r\n        showModal: true,\r\n        dataShare\r\n    })\r\n    render() {\r\n        const { title, subTitle, error, onSiteEnable, subtitleError, backgroundImage, loading, selectedColor, btnText, msg, btnTextError, msgError, showModal, logoImage, tinyUrl, moderation, firstTime, dataShare } = this.state;\r\n        return <>   <Tab.Container id=\"ugc-upload\" defaultActiveKey=\"tab_uploader\">\r\n            <Nav variant=\"pills\" className=\"d-flex mb-3 light-pills\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"tab_uploader\">SnapUp</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"tab_publish\">Publish Options</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n                <Tab.Pane fade={true} eventKey=\"tab_uploader\">\r\n                    <Tab.Container id=\"ugc-upload2\" defaultActiveKey=\"tab_uploader1\">\r\n                        <Nav variant=\"underline\" className=\"d-flex justify-content-start border-bottom mb-3\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8 uploader_tab_navlink\" eventKey=\"tab_uploader1\">\r\n                                    {/* <SVG className=\"me-1\" src={baseUrl('media/icons/svg-icons/ugc-uploader-line.svg')} height={16} width={16} /> */}\r\n                                    <img className=\"me-2\" src={`${CLOUDPATH_TAGGSHOP}/app/assets/media/svg/icons/snap-up-icon.svg`} height={16} width={16} />\r\n                                    SnapUp settings\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Tab.Pane fade={true} eventKey=\"tab_uploader1\">\r\n                                <div className=\"d-flex align-items-start flex-column flex-md-row\">\r\n                                    <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\r\n                                        <label className=\"form-check form-switch py-2 align-items-center justify-content-between mb-2 h-40px py-1\">\r\n                                            <span className=\"form-check-label ps-0 fs-9 fw-medium text-gray-800 me-2\">Enable</span>\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" name=\"onSiteEnable\" checked={onSiteEnable} onChange={(e) => this.onCheckHandler(e)} />\r\n                                        </label>\r\n                                        {/* <PerfectScrollbar> */}\r\n                                            <div className=\"upload_aside_scroll\">\r\n                                                <div className=\"mb-2 mt-2\">\r\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Title</label>\r\n                                                    <div className=\"\">\r\n                                                        <input type=\"text\" name=\"title\" className={`form-control form-control-sm ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Sub Title...\" value={title} onChange={(e) => this.onChangeHandler(e)} />\r\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"mb-2\">\r\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Sub Title</label>\r\n                                                    <div className=\"\">\r\n                                                        <textarea name=\"subTitle\" className={`form-control form-control-sm textarea-min-row-2 ${subtitleError ? 'is-invalid' : ''}`} placeholder=\"Enter Title...\" value={subTitle} onChange={(e) => this.onChangeHandler(e)} />\r\n                                                        {subtitleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <UploadLogo imageStyle={{ paddingBottom: '50%' }} logoImage={logoImage} onClickTouploadLogo={this.onClickTouploadLogo} />\r\n                                                <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\r\n                                                    <span className=\"ms-0 fs-9 fw-medium\">Background Color</span>\r\n                                                    <Suspense fallback={<></>}>\r\n                                                        <ColorPicker color={selectedColor} onChangeColor={this.onColorChange} />\r\n\r\n                                                    </Suspense>\r\n                                                </label>\r\n                                                <UploadImage imageStyle={{ paddingBottom: '66%' }} backgroundImage={backgroundImage} onClickTouploadImage={this.onClickTouploadImage} />\r\n                                                <div className=\"mb-2\">\r\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Submit Button Text</label>\r\n                                                    <div className=\"\">\r\n                                                        <input type=\"text\" name=\"btnText\" className={`form-control form-control-sm ${btnTextError ? 'is-invalid' : ''}`} placeholder=\"Enter Button Text...\" value={btnText} onChange={(e) => this.onChangeHandler(e)} />\r\n                                                        {btnTextError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"mb-2\">\r\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Thank You Message</label>\r\n                                                    <div className=\"w-100 pb-2\">\r\n                                                        <textarea className={`form-control form-control-sm textarea-min-row-4 ${msgError ? 'is-invalid' : ''}`} name=\"msg\" row={5} value={msg} onChange={(e) => this.onChangeHandler(e)}  >\r\n                                                        </textarea>\r\n                                                        {msgError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex flex-grow-1 w-100 flex-column bg-light p-xl-5 p-3 mb-3 rounded-2 snapup_uploader_right\">\r\n                                        <p className=\"text-start mb-3\"><strong>SnapUp Preview</strong></p>\r\n                                        {/* <div className=\"mb-2\">\r\n                                            <UrlInput inputUrl={tinyUrl} inputId={'onsite4'} inputSize={''} onClickToOpen={this.onClickToOpen}\r\n                                                share={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                                                copy={[{ status: true, tooltip: 'Share Onsite Url' }]}\r\n                                                edit={[{ status: true, tooltip: 'Share Onsite Url' }]} />\r\n                                        </div> */}\r\n                                        <PreviewOnsite {...this.state} />\r\n                                    </div>\r\n                                </div>\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </Tab.Pane>\r\n                <Tab.Pane fade={true} eventKey=\"tab_publish\">\r\n                    <Tab.Container id=\"tab_publish_in\" defaultActiveKey=\"tab_link\">\r\n                        <Nav variant=\"underline\" className=\"d-flex border-bottom mb-3\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8\" eventKey=\"tab_link\">\r\n                                    <i className=\"ri-links-fill me-1\"></i>\r\n                                    Link\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8\" eventKey=\"tab_website\">\r\n                                    <i className=\"ri-window-line me-1\"></i>\r\n                                    Website\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Tab.Pane fade={true} eventKey=\"tab_link\">\r\n                                <LinkOnsite {...this.state} onClickToOpen={this.onClickToOpen} />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane fade={true} eventKey=\"tab_website\">\r\n                                <WebsiteOnsite {...this.state} onUploadQrChange={this.onUploadQrChange} onClickToOpen={this.onClickToOpen} />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </Tab.Pane>\r\n            </Tab.Content>\r\n        </Tab.Container>\r\n\r\n        <div className=\"hideforBSearch\">\r\n                            <div className=\"checkbox-inline\">\r\n                                <label htmlFor=\"feedscreatemoderation\" className=\"checkbox checkbox-outline checkbox-outline-2x checkbox-primary mr-2\">\r\n                                    <input type=\"checkbox\" id=\"feedscreatemoderation\" className=\"checkbox checkbox-outline checkbox-outline-2x checkbox-primary mr-2\" checked={moderation} onChange={(e) => this.setState({ moderation: e.target.checked})} />\r\n                                    <span></span>\r\n                                    Manually approve posts before making them public?\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n        <div className=\"form-actions\">\r\n                <div className=\"d-flex justify-content-between align-items-center flex-wrap border-top pt-lg-8 mt-lg-10 pt-5 mt-6\">\r\n                    <div className=\"need_help__\"></div>\r\n                    <div className=\"hideforBSearch\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.navigate(`/content/addfeed/${localStorage.getItem('wallId')}`)} >Back</button>\r\n                        <span className=\"create_feed_hideshow\">\r\n                            <button type=\"button\" className={`commanBtn btn btn-primary ml-4 ${loading ? 'spinner spinner-white disabled spinner-right' : \"\"}`} id=\"create_feed\" onClick={this.onSubmit}>{firstTime ? \"Create\" : 'Update'} Feed</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {showModal ? <SendCodeByEmail from={'snapUp'} setOpenPopup={(value) => this.setState({showModal: value})} sharecode={{ 'emailCmp': dataShare}} /> : <></>}\r\n        </>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Personalization: state.addFeedReducer.details.wall.Personalization,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        SNAPUP_DETAILS_ACTION: (callback) => dispatch(SNAPUP_DETAILS_ACTION(callback)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OnsiteUpload))","import { GET_POST, GET_WALL_DATA_NEW, MODERATION_POST_GET_AUTO_COMPLETE, SHARE_CODE, UPDATE_PUBLISH_TAGS, UPDATE_WALL_NAME } from \"./api\";\r\nimport HttpClient from \"./http-client\";\r\nexport const IS = localStorage.getItem('token');\r\n\r\n\r\nexport const generatetagCode = (tags) => {\r\n\r\n    return new HttpClient().post(`${UPDATE_PUBLISH_TAGS}`, {\r\n        'ownerId': localStorage.getItem('ownerId'),\r\n        'wallId': localStorage.getItem('wallId'),\r\n        'tags': tags.join(),\r\n    });\r\n}\r\n\r\n\r\nexport const getWall = () => {\r\n    return new HttpClient().get(`${GET_WALL_DATA_NEW}`,{ headers: { editor: 1 } })\r\n}\r\n\r\n\r\nexport const autoCompleteSearchPublish = (keyword, db_table) => {\r\n\r\n    const type = 1;\r\n\r\n    return new HttpClient().post(`${MODERATION_POST_GET_AUTO_COMPLETE}`, { ownerId: localStorage.getItem('ownerId'), db_table: db_table, keyword: keyword, wallId: localStorage.getItem('wallId'), feeds: \"\", type })\r\n\r\n}\r\nexport const shareCode = (code) => { \r\n    return new HttpClient().post(`${SHARE_CODE}`, {\r\n        'htmlCode': code.htmlCode,\r\n        'type': code.type,\r\n        'email': code.email,\r\n    })\r\n}\r\n\r\n\r\n// export const shareUrl = (data) =>{\r\n//     return new HttpClient().post(`${SHARE_EMAIL_CAMPAIGN_CODE}`,{\r\n//         'campaign_emails'    : data.campaign_emails,\r\n//         'emailcampaign_code' : data.code,\r\n//         'email_subject' : 'Hashtag Campaign URL',\r\n//     })\r\n// }\r\n\r\nexport const getPOST = (getDATA) => { \r\n    return new HttpClient().post(`${GET_POST}`, {\r\n        'dbTable': getDATA.dbTable,\r\n        'wallId': localStorage.getItem('wallId'),\r\n        'type': getDATA.type,\r\n        'randomizePost': getDATA.randomizePost,\r\n        'offset': getDATA.offset\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const updateWall = (getdata) => {\r\n    return new HttpClient().post(`${UPDATE_WALL_NAME}`, getdata)\r\n}\r\n","import { Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\"; \r\nimport { shareCode } from \"../../../../../../actions/publishAction\"; \r\nimport { DELETE_KEYS } from \"../../../../../../actions/moderationActions\";\r\nimport { TOAST_SUCCESS, TOAST_ERROR } from \"../../../../../../utils\";\r\n\r\n \r\nconst SendCodeByEmail = ({setOpenPopup, sharecode, from }) => {\r\n \r\n\r\n  const [email, setEmail] = useState('');\r\n  const [htmlCode, setHtmlCode] = useState(sharecode.emailCmp)\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const sendCode = () => {\r\n\r\n  if (email.trim().length > 0) {\r\n\r\n    const code = {\r\n      'email': email,\r\n      'type': from=='snapUp' ? 6 : 3,\r\n      'htmlCode': htmlCode\r\n    }\r\n\r\n    shareCode(code).then((res) => {\r\n\r\n      if (res.data.status) {\r\n        setLoader(true);\r\n        setTimeout(() => {\r\n          DELETE_KEYS();\r\n          if(from=='snapUp') TOAST_SUCCESS('Successfully shared.')\r\n          else TOAST_SUCCESS('Email Campaign Code successfully share.')\r\n          setLoader(false)\r\n          setOpenPopup(false)\r\n        }, 1000);\r\n      }else{\r\n        TOAST_ERROR(res.data.message);\r\n      }\r\n    })\r\n  } else\r\n    TOAST_ERROR('Please fill Email Id');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal dialogClassName=\" modal-dialog modal-dialog-centered modal-md personalizePopupModal dynamic-popup\"\r\n        size=\"lg\" show={true}>\r\n        <Modal.Body>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close-modal btn-close close\"\r\n            data-bs-dismiss=\"modal\"\r\n            onClick={(e) => {setOpenPopup(false) }}\r\n          >\r\n          </button>\r\n          <div className=\"p-8\">\r\n            <div className=\"pt-4 text-center\">\r\n            </div> <div className=\"mb-7 text-center\">\r\n              <h2 className=\"font-weight-boldest font-size-h2 mb-3\">Send by email</h2>\r\n              <p className=\"font-size-lg\">Share this {from=='snapUp' ? 'URL' : 'embed code'} with your team. Enter the Email Id to send the {from=='snapUp' ? 'URL' : 'code'} directly to them</p>\r\n            </div>\r\n            <div className=\"from-group\">\r\n              <textarea name=\"data[Wall][emails]\" placeholder=\"Ex: support@taggshop.com,info@taggshop.com\" label=\"Emails\" className=\"form-control form-control-lg\" value={email} onChange={(e) => setEmail(e.target.value)} id=\"wallemails\" style={{ height: '78px' }}></textarea> <span id=\"wallemailserror\" className=\"errorMessage required\">\r\n              </span>\r\n              <button type=\"submit\" onClick={(e) => sendCode(e)} className={`${loader ? 'ladda-button spinner spinner-white spinner-right disabled ' : ''} btn btn-primary btn-lg w-100 mt-5`} data-factors-bind=\"true\" data-factors-click-bind=\"true\">Share Now</button>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SendCodeByEmail\r\n","import { ADD_FEED_ACCOUNT } from \"../actions/addFeedActions\"\r\nimport { GET_LOCAL, TOAST_ERROR, TOAST_SUCCESS } from \".\"\r\nimport { FACEBOOK, GOOGLE, GOOGLE_SCOPE, INSTAGRAM, TWITTER_KEY, redirect_uri } from \"../actions/socialUrl\"\r\n\r\nexport const addAccountFromId = async(networkId, code, updateAccounts) => {\r\n    const accountFunctions = {\r\n        1: addTwitterAccount,\r\n        2: addInstaPersonal,\r\n        3: AddFbAccount,\r\n        18: AddFbAccount,\r\n        8: addVimeoAccount,\r\n        4: addGoogleAccount\r\n    };\r\n\r\n    const selectedFunction = accountFunctions[networkId];\r\n    if (selectedFunction) {\r\n        await selectedFunction(code, updateAccounts);\r\n    }\r\n}\r\n\r\nexport const addGoogleAccount = async (code, updateAccounts) => {\r\n    try {\r\n        const response = await GOOGLE(code);\r\n        const { access_token, expires_in, refresh_token, token_type, id_token } = response.data\r\n\r\n        const accObj = {\r\n            networkId: 4,\r\n            token: access_token,\r\n            expires_in,\r\n            refresh_token,\r\n            scope: GOOGLE_SCOPE,\r\n            token_type,\r\n            id_token,\r\n            created: 1675254640,\r\n            reconnectAccount: 0,\r\n            wallId: localStorage.getItem('wallId')\r\n        };\r\n\r\n        const res = await ADD_FEED_ACCOUNT(accObj);\r\n        const { responseCode, resposneMessage } = res.data;\r\n\r\n        responseCode === 200 ? TOAST_SUCCESS(resposneMessage) : TOAST_ERROR(resposneMessage);\r\n\r\n        updateAccounts();\r\n    } catch (error) {\r\n        console.error(\"Error adding Google Account:\", error);\r\n    }\r\n};\r\n\r\nexport const AddFbAccount = async (code, updateAccounts) => {\r\n    try {\r\n        const { data } = await FACEBOOK(code);\r\n\r\n        if (data) {\r\n            const { access_token, expires_in } = data;\r\n            const feedId = GET_LOCAL(\"feedId\");\r\n            const refresh = GET_LOCAL(\"refresh\");\r\n            const networkId = GET_LOCAL(\"networkId\");\r\n\r\n            const accObj = {\r\n                token: access_token || \"\",\r\n                networkId,\r\n                validity: expires_in || 34656,\r\n                reconnectAccount: refresh ? 1 : 0,\r\n                wallId: localStorage.getItem('wallId')\r\n            };\r\n\r\n            if (feedId) accObj.feedId = feedId;\r\n\r\n            const res = await ADD_FEED_ACCOUNT(accObj);\r\n            const { responseCode, resposneMessage } = res.data;\r\n\r\n            if (responseCode === 200) {\r\n                TOAST_SUCCESS(resposneMessage);\r\n            } else {\r\n                TOAST_ERROR(resposneMessage);\r\n            }\r\n\r\n            localStorage.removeItem('feedId');\r\n            updateAccounts();\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error adding Account:\", error);\r\n    }\r\n}\r\n\r\nexport const addInstaPersonal = async (code, updateAccounts=()=>{}) => {\r\n    const feedId = GET_LOCAL(\"feedId\") || null;\r\n    const refresh = GET_LOCAL(\"refresh\");\r\n    \r\n    try {\r\n        const res = await INSTAGRAM(code);\r\n        const { access_token } = res.data;\r\n\r\n        const accObj = {\r\n            token: access_token || \"\",\r\n            networkId: 2,\r\n            validity: 34656,\r\n            wallId: localStorage.getItem('wallId')\r\n        };\r\n        if (feedId) accObj['feedId'] = feedId;\r\n        accObj['reconnectAccount'] = refresh ? 1 : 0;\r\n\r\n        const { data } = await ADD_FEED_ACCOUNT(accObj);\r\n        const { responseCode, resposneMessage } = data;\r\n\r\n        if (responseCode === 200) {\r\n            TOAST_SUCCESS(resposneMessage);\r\n        } else {\r\n            TOAST_ERROR(resposneMessage);\r\n        }\r\n\r\n        localStorage.removeItem('feedId');\r\n        updateAccounts();\r\n    } catch (error) {\r\n        console.error(\"Error adding Instagram Account:\", error);\r\n    }\r\n\r\n}\r\n\r\nexport const addTwitterAccount = async (code, updateAccounts) => {\r\n    try {\r\n        const networkId = GET_LOCAL(\"networkId\");\r\n        const accObj = {\r\n            networkId,\r\n            grant_type: \"authorization_code\",\r\n            code_verifier: \"challenge\",\r\n            created: 1675254640,\r\n            client_id: TWITTER_KEY,\r\n            redirect_uri,\r\n            code,\r\n        }\r\n        const { data } = await ADD_FEED_ACCOUNT(accObj);\r\n        const { responseCode, resposneMessage } = data;\r\n        \r\n        if (responseCode === 200) {\r\n            TOAST_SUCCESS(resposneMessage);\r\n        } else {\r\n            TOAST_ERROR(resposneMessage);\r\n        }\r\n\r\n        updateAccounts();\r\n    } catch (error) {\r\n        TOAST_ERROR(\"Error adding Twitter Account\");\r\n        console.error(\"Error adding Twitter Account:\", error);\r\n    }\r\n}\r\n\r\nexport const addVimeoAccount = async (code, updateAccounts) => {\r\n    const feedId = GET_LOCAL(\"feedId\");\r\n    const refresh = GET_LOCAL(\"refresh\");\r\n    const accObj = {\r\n        token: \"w\",\r\n        networkId: 8,\r\n        code,\r\n        reconnectAccount: refresh ? 1 : 0,\r\n        wallId: localStorage.getItem('wallId'),\r\n    };\r\n    if (feedId) {\r\n        accObj['feedId'] = feedId;\r\n    }\r\n\r\n    try {\r\n        const { data } = await ADD_FEED_ACCOUNT(accObj);\r\n        const { responseCode, resposneMessage } = data;\r\n\r\n        if (responseCode === 200) {\r\n            TOAST_SUCCESS(resposneMessage);\r\n        } else {\r\n            TOAST_ERROR(resposneMessage);\r\n        }\r\n\r\n        localStorage.removeItem('feedId');\r\n        updateAccounts();\r\n    } catch (error) {\r\n        // TOAST_ERROR(\"Error adding Vimeo Account\");\r\n        console.error(\"Error adding Vimeo Account:\", error);\r\n    }\r\n}\r\n"],"names":["PreviewOnsite","Component","render","title","subTitle","backgroundImage","selectedColor","btnText","logoImage","this","props","_jsx","className","children","style","backgroundColor","concat","_jsxs","loading","src","width","height","alt","type","hidden","name","accept","dir","rows","placeholder","uppyConfig","uppyKey","uppyBucket","uppyAwsKey","uppyAwsSecret","companionUrl","IS_LIVE","UploadImage","constructor","super","state","backgroundModal","onBackgroundClose","event","uppy","cancelAll","setState","onBackgroundOpen","$","click","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","Dashboard","Url","componentDidMount","self","on","stepName","result","onClickTouploadImage","id","ext","setTimeout","imageStyle","_Fragment","onClick","OverlayTrigger","placement","overlay","Tooltip","xmlns","viewBox","fill","d","DashboardModal","animateOpenClose","open","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestClose","closeAfterFinish","plugins","onClickTouploadLogo","ColorPicker","handleClick","displayColorPicker","handleClose","handleChange","color","hex","onChangeColor","componentWillReceiveProps","nextProps","styles","reactCSS","background","swatch","padding","borderRadius","boxShadow","display","cursor","popover","position","zIndex","top","right","cover","bottom","left","ChromePicker","onChange","CodeShareCopy","shareEmbedModal","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","codeCopied","navigator","clipboard","writeText","copyText","isLoading","widthSign","heightSign","onClickToOpen","readOnly","value","defaultValue","LinkOnsite","tinyUrl","PerfectScrollbar","WidgetOnsiteButton","_ref","qrCodeStatus","QRButtonText","qrUrl","bgColor","fcColor","fontSize","uniqueCode","onUploadQrChange","UPPY_UPLOAD_PATH","onError","e","QRCode","level","size","WebsiteOnsite","arguments","error","buttonText","qrStatus","onBGColorChange","onFCColorChange","onFontSize","parseInt","onQrStatus","checked","onChangeText","Suspense","fallback","PickColor","min","max","step","maxWidth","transform","OnsiteUpload","onSiteEnable","subtitleError","btnTextError","msgError","msg","WEBSITE_EMBED_URL","localStorage","getItem","dataShare","moderation","ugcSettings","firstTime","uploadQr","onLoadSettings","Personalization","onsite_settings","JSON","parse","taggshop","onsite_bg_color_wg","onsite_bg_image_wg","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_popup_title","onsite_succ_msg","onsite_status","onsite_logo","onChangeHandler","onCheckHandler","onColorChange","callBack","onSubmit","navigate","SNAPUP_DETAILS_ACTION","obj","network","filter","onsite_term_url","onsiteImgBack","Onsite_logoImageValue","onsiteBackImage","Onsite_backImageValue","wallId","onsite_qr_code_btn_text","onsite_btn_color","onsite_btn_txt_color","onsite_link_font_btn","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","onsite_button_status","onsite_qr_code_status","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","choose_content_category","CREATE_ONSITE_FEED","componentWillMount","feedInfo","value1","console","log","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","fade","CLOUDPATH_TAGGSHOP","UploadLogo","paddingBottom","row","htmlFor","SendCodeByEmail","from","setOpenPopup","sharecode","connect","addFeedReducer","details","wall","dispatch","callback","withRouter","email","setEmail","useState","htmlCode","setHtmlCode","emailCmp","loader","setLoader","sendCode","trim","length","code","HttpClient","post","SHARE_CODE","shareCode","then","res","data","status","DELETE_KEYS","TOAST_SUCCESS","TOAST_ERROR","message","Modal","dialogClassName","show","Body","label","addAccountFromId","async","networkId","updateAccounts","selectedFunction","addTwitterAccount","addInstaPersonal","AddFbAccount","addVimeoAccount","addGoogleAccount","response","GOOGLE","access_token","expires_in","refresh_token","token_type","id_token","accObj","token","scope","GOOGLE_SCOPE","created","reconnectAccount","ADD_FEED_ACCOUNT","responseCode","resposneMessage","FACEBOOK","feedId","GET_LOCAL","refresh","validity","removeItem","undefined","INSTAGRAM","grant_type","code_verifier","client_id","TWITTER_KEY","redirect_uri"],"sourceRoot":""}