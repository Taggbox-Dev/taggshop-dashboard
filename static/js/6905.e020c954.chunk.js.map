{"version":3,"file":"static/js/6905.e020c954.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/CardAside.js","app/Layout/Main/CommonComponents/ContentSwitcher/AddContentModal.js","app/Layout/Main/CommonComponents/ContentSwitcher/index.js","utils/close_modal.js","app/Layout/Main/CommonComponents/WebsiteSwitcher/AddWebsiteModal.js","app/Layout/Main/CommonComponents/WebsiteSwitcher/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../Assets/AssetsHelper';\n\n\nclass CardAside extends Component {\n       constructor(props) {\n              super(props);\n              this.state = {\n                     width: window.innerWidth,\n                     isSavedList: false,\n              };\n              this.handleWindowResize = this.handleWindowResize.bind(this);\n       }\n\n       handleWindowResize() {\n              this.setState({ width: window.innerWidth });\n       }\n\n       componentDidMount() {\n              window.addEventListener('resize', this.handleWindowResize);\n       }\n\n       componentWillUnmount() {\n              window.removeEventListener('resize', this.handleWindowResize);\n       }\n\n       handleClose = () => {\n              this.props.filterToggleCallback(false)\n       };\n       render() {\n              const { filterToggle, heading, redirectUrl, isHide, closeAside } = this.props\n              const { width } = this.state\n              return (\n                     <div className={`aside__ border-end ${width < 1280 ? `offcanvas offcanvas-start ${filterToggle?'show':''}` : ''}`} id='aside__toggle'>\n                            <div className='d-flex justify-content-end d-xl-none p-3 border-bottom h-48px'>\n                                   <Button variant='secondary' id=\"toggle_aside\" size='sm' className='d-flex border-0' onClick={()=>closeAside()}>\n                                          <FontAwesomeIcon icon={'xmark'} iconClass={'me-0'}/>\n                                   </Button>\n                            </div>\n                            <div className='aside__body w-100'>\n                                   {\n                                          this.props.children\n                                   }\n                            </div>\n                     </div>\n              );\n       }\n}\n\nexport default CardAside;","import React, { useEffect, useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nconst AddContentModal = ({ show, title, apiError, setApiError, onCreate, onUpdate, editContent, handleClose, isStatus , deleteContent, spinner}) => {\n    const [name, setName] = useState('');\n    const [autoUpdate, setAutoUpdate] = useState(1);\n    const [status, setStatus] = useState(1);\n    const [error, setError] = useState(false);\n\n    const closePopup = () => {\n        setName('');\n        handleClose('');\n    };\n\n    const onSave = () => {\n        if (name && name.length > 0){ setError(false) ; onCreate(name,autoUpdate,status)}\n        else setError(true);\n    };\n\n    const Update = (id) => {\n        if (name && name.length > 0){ setError(false) ;  onUpdate(id, name, status, autoUpdate)}\n        else setError(true);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            if (editContent && Object.keys(editContent).length > 0) {\n                Update(editContent.id,  name, status, autoUpdate);\n            } else {\n                onSave();\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (editContent && Object.keys(editContent).length > 0) {\n            setName(editContent.name);\n            setAutoUpdate(Number(editContent.autoUpdate));\n            setStatus(Number(editContent.status));\n        } else {\n            resetForm();\n        }\n    }, [editContent]);\n\n    const resetForm = () => {\n        setName('');\n        setAutoUpdate(1);\n        setStatus(1);\n        setError(false);\n    };\n\n    return (\n        <Modal show={show} size='sm' onHide={handleClose} id=\"cont_modal\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {editContent && Object.keys(editContent).length > 0 ? 'Edit' : 'Create'} {title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group className='mb-4'>\n                    <Form.Control id=\"g_name\" className={`fw-semibold  ${error || apiError?'is-invalid':''}`} placeholder='Enter Gallery Name' value={name} onChange={(e) => { setError(false) ; setApiError('') ; setName(e.target.value)}} onKeyPress={handleKeyPress} />\n                    <span className=\"invalid-feedback\">{error ?  `${title} name is required` : apiError ? `${apiError}` :''}</span>\n                </Form.Group>\n                <Form.Group className=\"f-between mb-4\">\n                    <Form.Label htmlFor='cont_a_u'>Auto Update</Form.Label>\n                    <Form.Check type=\"switch\" id=\"cont_a_u\" checked={autoUpdate} onChange={() => setAutoUpdate(Number(!autoUpdate))} />\n                </Form.Group>\n                <Form.Group className=\"f-between mb-4\">\n                    <Form.Label htmlFor='cont_s'>Status</Form.Label>\n                    <Form.Check type=\"switch\" id=\"cont_s\" checked={status} onClick={() => setStatus(Number(!status))} />\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n               {editContent && Object.keys(editContent).length > 0 ? <>\n                  <Button variant='outline-danger' size='sm'  id='con_delete_btn'  onClick={()=>deleteContent(editContent)}>Delete</Button>\n                    <Button size='sm' id='con_update_btn'  className={`${spinner ? 'spinner':''}`} disabled={spinner}  onClick={() => Update(editContent.id)}>Update</Button>\n                    </>\n               : (\n                    <Button size='sm' id='con_save_btn' className={`${spinner ? 'spinner':''}`} disabled={spinner} onClick={onSave}>Save</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AddContentModal;\n","import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AddContentModal from './AddContentModal';\nimport { CHANGE_MODERATION_WALLID, MODERATION_LODING, MODERATION_RESET, TOGGLE_ADD_GALLERY } from '../../../../../reducer/keys';\nimport { activeTabActionFilter, getModeration, removeAllFilterBody } from '../../../../../actions/moderationActions';\nimport { GET_FEEDS } from '../../../../../actions/manageFeedsAction';\nimport { closePricingModal } from '../../../../../utils/close_modal';\nimport { GALLERY_WALL_UPDATE } from '../../../../../actions/sceneActions';\nimport Swal from 'sweetalert2';\n\nconst ContentSwitcher = ({ contentList, selectedContent, title, iswebsite, onlySwitcher, modifyContent, selectLoader, header }) => {\n    const allWalls = useSelector(state => state.dashboardData?.dashboarddata?.allWalls)\n    const user = useSelector(state => state.authorized?.userData?.user_data);\n    const { wallsLoader, addGalleryNow } = useSelector(state => state?.dashboardData)\n\n    const [selectedWall, setSelectedWall] = useState(null);\n    const [addContent, setAddContent] = useState(false);\n    const [editContent, setEditContent] = useState([]);\n    const [loader, setLoader] = useState(true)\n    const [spinner, setSpinner] = useState(false)\n    const [apiError, setApiError] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const changeContent = (item) => {\n        setSelectedWall(item);\n        if (user?.role == 'Collaborator') {\n            localStorage.setItem(\"wallId\", item.wallId)\n        }\n        else {\n            localStorage.setItem(\"wallId\", item.id)\n        }\n        if (title?.includes('Email') || title?.includes('Shop') || title?.includes('Website')) {\n            modifyContent(item)\n        }\n        else {\n            if (window.location.pathname?.includes('/more-apps')) {\n                navigate(`/more-apps/${item.id}`);\n            }\n\n            else if (window.location.pathname?.includes('/moderation')) {\n                dispatch({ type: CHANGE_MODERATION_WALLID, payload: true });\n                dispatch({ type: MODERATION_RESET, payload: true });\n                dispatch(GET_FEEDS())\n                dispatch(removeAllFilterBody(true))\n                dispatch(activeTabActionFilter(0))\n                navigate(`/content/moderation/${item.id}`);\n                closePricingModal(dispatch)\n            }\n            else {\n                dispatch({ type: CHANGE_MODERATION_WALLID, payload: true });\n                dispatch({ type: MODERATION_RESET, payload: true });\n                dispatch(GET_FEEDS())\n                setTimeout(() => {\n                    if (item?.totalPost > 0) navigate(`/content/managefeed/${item.id}`);\n                    else navigate(`/content/addfeed/${item.id}`);\n                }, 1000);\n            }\n        }\n\n\n    }\n\n    const callback = (msg) => {\n        if (msg) {\n            setApiError(msg)\n            setSpinner(false)\n        }\n        else {\n            openAddModal(false);\n            setEditContent([])\n            setSpinner(false)\n        }\n    };\n\n    const openAddModal = (status) => { dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }) }\n\n\n    const isGalleryNameExist = (galleryName) => allWalls?.some(wall => wall?.name?.toLowerCase() === galleryName?.toLowerCase());\n\n    const onAddGallery = (name, autoUpdate, status) => {\n        const galleryName = name?.trim();\n\n        if (isGalleryNameExist(galleryName)) {\n            setApiError(\"Gallery name already exists.\");\n            return;\n        }\n\n        if (galleryName) {\n            setSpinner(true);\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName, status, autoUpdate: autoUpdate || 0, deleted: 0, id: '', action: 1 }, navigate, callback));\n        }\n    };\n\n\n    const deleteContent = (item) => {\n        Swal.fire({\n            title: \"Are You Sure?\",\n            text: 'You are about to delete a Gallery that is used in Publish. Deleting the gallery would also delete the corresponding Publish sections.',\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n            confirmButtonText: \"Yes, Delete it\",\n        }).then((result) => {\n            if (result.value) {\n                dispatch(GALLERY_WALL_UPDATE({ name: item.name, status: item.status, autoUpdate: item.autoUpdate || 0, id: item.id, deleted: 0, action: 3 }, navigate, callback))\n            }\n            else if (result.dismiss === \"cancel\") { }\n        });\n    }\n\n    const onUpdate = (id, galleryName, status, autoupdate) => {\n        if (galleryName && galleryName.length > 0) {\n            setSpinner(true)\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName?.trim(), status: status, id: id, autoUpdate: autoupdate || 0, deleted: 0, action: 2 }, navigate, callback))\n        }\n    }\n\n    const editGallery = (item) => {\n        setEditContent(item);\n        openAddModal(true)\n    }\n\n    useEffect(() => {\n        const getSelectedWall = allWalls?.find((wall) => wall.id == localStorage.getItem('wallId'))\n        if ((selectedContent && Object.keys(selectedContent).length > 0)) {\n            setSelectedWall(selectedContent)\n            setLoader(false)\n        } else if (selectLoader) setLoader(true)\n        else {\n            setSelectedWall(getSelectedWall ? getSelectedWall : allWalls && allWalls[0] ? allWalls[0] : '');\n            setLoader(false)\n        }\n    }, [, selectedContent, selectLoader, allWalls, localStorage.getItem('wallId')])\n\n    return (<><div className='d-flex align-items-center'>\n        <Dropdown className='w-100'>\n            {wallsLoader || loader ? <div className=\"w-100 sk_rect rounded-1 h-34px\"></div> :\n                selectedWall && Object.keys(selectedWall).length > 0 ? <Dropdown.Toggle id=\"content_btn\" variant=\"secondary\" size={'sm'} className=\"d-flex align-items-center w-100 justify-content-between\" style={{ padding: header ? 2 : 4 }}>\n                    <div className=\"d-flex align-items-center flex-grow-1\">\n                        <div className={`symbol symbol-${header ? '28' : '32'} radius-2 flex-shrink-0 me-2`}>\n                            <span className=\"symbol-label fs-8\">{(selectedWall?.name)?.charAt(0).toUpperCase()}</span>\n                        </div>\n                        <div className=\"overflow-hidden w-100 text-start d-flex flex-column\" style={{ maxWidth: 130 }}>\n                            <p className=\"fw-bold mb-0 text-ellipsis fs-9 lh-sm\">{selectedWall?.name}</p>\n                            <span className='fs-10 text-muted'>{selectedWall?.totalPost ? `${selectedWall?.totalPost} Posts` : '0 Post'}</span>\n                        </div>\n                    </div>\n                </Dropdown.Toggle>\n                    :\n                    <Button variant='secondary' size='lg' className='w-100' onClick={() => window.location.href.includes('content/moderation') ? openAddModal(true) : navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`)}>\n                        <FontAwesomeIcon icon={'plus'} iconClass={'me-1'} />\n                        New Gallery\n                    </Button>\n            }\n\n            {allWalls ? <Dropdown.Menu className=\"w-100 p-0\">\n                <div className=\"dropdown-height\">\n                    {allWalls?.map((item, index) => {\n                        const data = iswebsite ? item?.wall?.Wall : item\n                        return <div key={index} className='position-relative'>\n                            <Dropdown.Item eventKey={data?.id} onClick={() => changeContent(data)} className={`mb-1 rounded-0 ${data?.id == localStorage.getItem('wallId') ? 'active' : ''}`}>\n                                <div className=\"d-flex align-items-center\">\n                                    <div className={`symbol symbol-${header ? '28' : '32'} radius-2 flex-shrink-0 me-2`}>\n                                        <span className=\"symbol-label fs-8\">{(data?.name)?.charAt(0).toUpperCase()}</span>\n                                    </div>\n                                    <div className=\"overflow-hidden w-100 text-start d-flex flex-column\" style={{ maxWidth: 130 }}>\n                                        <p className=\"fw-bold mb-0 text-ellipsis fs-9 lh-sm\">{data?.name}</p>\n                                        <span className='fs-10 text-muted lh-sm'>{data?.totalPost ? `${data?.totalPost} Posts` : '0 Post'}</span>\n                                    </div>\n                                    <div>\n                                    </div>\n                                </div>\n                            </Dropdown.Item>\n                            {!onlySwitcher && <div className='dropdown-action pe-2'>\n                                <Button variant='dropdown-icon' className='content_edit' onClick={() => editGallery(item)}>\n                                    <FontAwesomeIcon icon={'ellipsis-vertical'} iconClass={'me-0'} />\n                                </Button>\n                            </div>}\n                        </div>\n                    })}\n                    {!onlySwitcher && <div className='mt-2 p-2 border-top'>\n                        <Dropdown.Item id=\"add_web_btn\" onClick={() => openAddModal(true)} className='f-center'>\n                            <span className=\"svg-icon svg-icon-9\">\n                                <FontAwesomeIcon icon={'plus'} />\n                            </span>\n                            <span className='menu-title flex-grow-0'>New {title}</span>\n                        </Dropdown.Item>\n                    </div>}\n                </div>\n            </Dropdown.Menu> : null}\n        </Dropdown>\n        {selectedWall && Object.keys(selectedWall).length > 1 && /\\/(moderation|addfeed|managefeed|manual-upload)/.test(window.location.pathname) ?\n            <OverlayTrigger placement='bottom' overlay={<Tooltip>Add more contenting</Tooltip>} >\n                <Link style={{ cursor: 'pointer' }} to={`/content/addfeed/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`} className=\"btn btn-primary btn-sm ms-1\">\n                    <FontAwesomeIcon icon={'plus'} iconClass={'me-0'} />\n                </Link>\n            </OverlayTrigger>\n            : null}\n    </div>\n        <AddContentModal show={addGalleryNow} apiError={apiError} setApiError={setApiError} title=\"Gallery\" onCreate={onAddGallery} onUpdate={onUpdate} editContent={editContent} handleClose={() => { setEditContent([]); openAddModal(false); setApiError('') }} deleteContent={deleteContent} spinner={spinner} />\n    </>\n    )\n}\n\n\nexport default ContentSwitcher","import { toggleAddFeedsSection, togglePlanSection } from \"../actions/show_modal_Action\";\n\n\nexport const closePricingModal = (dispatch) => {\n   dispatch(togglePlanSection(false)) \n   dispatch(toggleAddFeedsSection(false))\n\n\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nconst AddWebsiteModal= ({ show, title, onCreate, onUpdate, editContent, handleClose, isStatus, contentList, spinner, onDelete }) => {\n    const [name, setName] = useState(editContent?.name);\n    const [sameName, setSameName] = useState(false)\n    const [autoUpdate, setAutoUpdate] = useState(editContent?.autoUpdate);\n    const [status, SetStatus] = useState(editContent?.status);\n    const [error, SetError] = useState(false);\n\n    const closePopup = () => {\n        setName('');\n        handleClose('');\n    };\n\n    const onSave = () => {\n        if (name && name.length > 0){\n            if(contentList && contentList.length > 0){\n                const exist = checkName(name)\n                if(exist.length > 0) setSameName(true)\n                else onCreate(name)\n            } \n            else onCreate(name);\n        } \n        else SetError(true);\n    };\n\n    const checkName = (name) => {\n        const exist = contentList.filter(list => String(title == 'Website' ? list.wall.Wall.name : list.name).toLowerCase().trim() == String(name).toLowerCase().trim())\n        return exist\n    }\n\n    const Update = (id) => {\n        if (name && name.length > 0){\n            if(contentList && contentList.length > 0){\n                const exist = checkName(name)\n                if(exist.length > 0) setSameName(true)\n                else onUpdate(id, name, status, autoUpdate);\n            }\n            else onUpdate(id, name, status, autoUpdate);\n        } \n        else SetError(true);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            if (editContent && Object.keys(editContent).length > 0) {\n                Update(editContent.id);\n            } else {\n                onSave();\n            }\n        }\n    };\n\n    useEffect(() => {\n        setName(editContent?.name);\n        setAutoUpdate(editContent?.autoUpdate);\n        SetStatus(editContent?.status);\n        SetError(false)\n        setSameName(false)\n    }, [editContent]);\n\n    return (\n        <Modal show={show} size='sm' onHide={handleClose} id=\"gallery_modal\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {editContent && Object.keys(editContent).length > 0 ? 'Edit' : 'Create'} {title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group className='mb-4'>\n                    <Form.Control id=\"g_name\" className={`fw-semibold  ${error || sameName ?'is-invalid':''}`} placeholder={`Enter ${title} Name`} value={name} onChange={(e) => setName(e.target.value)} onKeyPress={handleKeyPress} />\n                    {error || sameName ?<span className='invalid-feedback'>{sameName ? 'Name already exists.' : `${title} name is required`}</span>: ''}\n                </Form.Group>\n                {isStatus && editContent && Object.keys(editContent).length > 0 ? (\n                    <>\n                    <Form.Group className=\"f-between mb-4\">\n                        <Form.Label htmlFor='gallery_a_u'>Auto Update</Form.Label>\n                        <Form.Check type=\"switch\" id=\"gallery_a_u\" defaultChecked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)} />\n                    </Form.Group>\n                    <Form.Group className=\"f-between mb-4\">\n                        <Form.Label htmlFor='gallery_s'>Status</Form.Label>\n                        <Form.Check type=\"switch\" id=\"gallery_s\" defaultChecked={status} onClick={() => SetStatus(!status)} />\n                    </Form.Group>\n                    </>\n                ) : (\n                null\n                )}\n            </Modal.Body>\n            <Modal.Footer>\n                {editContent && Object.keys(editContent).length > 0 ? <>\n                    <Button variant='outline-danger' size='sm' id='web_close_btn' className=\"me-3\" onClick={()=>onDelete(editContent.id)}>Delete</Button>\n                    <Button size='sm' id='web_update_btn' className={spinner ? 'spinner' : ''} onClick={() => Update(editContent.id)}>Update</Button>\n                    </> : \n                    <Button size='sm' id='web_save_btn' className={spinner ? 'spinner' : ''} onClick={onSave}>Save</Button>\n                }\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AddWebsiteModal\n","import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport AddWebsiteModal from './AddWebsiteModal';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { CREATE_WEBSITE, DELETE_WEBSITE, UPDATE_WEBSITE } from '../../../../../actions/websiteAction';\nimport { CREATE_SHOPON, DELETE_SHOPON, UPDATE_SHOPON } from '../../../../../actions/shoponAction';\nimport { CREATE_EMAIL, DELETE_EMAIL, UPDATE_EMAIL } from '../../../../../actions/EmailCampaignAction';\nimport { TOGGLE_ADD_EMAIL, TOGGLE_ADD_SHOPON, TOGGLE_ADD_WEBSITE } from '../../../../../reducer/keys';\n\nconst WebsiteSwitcher = ({ contentList, changeWebsite, selectedContent, title, isWebsite, method, addNew, noList }) => {\n    const [addContent, setAddContent] = useState(false);\n    const [editContent, setEditContent] = useState([]);\n    const [spinner, setSpinner] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const editWebsite = (item) => {\n        setEditContent(item);\n        setAddContent(true)\n    }\n\n    useEffect(() => {\n        if (addNew) { setAddContent(true) }\n    }, [addNew])\n\n    const addWebsite = (name) => {\n        setSpinner(true)\n        if (title.includes('Website')) dispatch(CREATE_WEBSITE(name, getResponse, navigate))\n        if (title.includes('ShopOn')) dispatch(CREATE_SHOPON(name, getResponse, navigate))\n        if (title.includes('Email')) dispatch(CREATE_EMAIL(name, getResponse, navigate))\n    }\n\n    const updateWebsite = (id, name) => {\n        setSpinner(true)\n        if (title.includes('Website')) dispatch(UPDATE_WEBSITE(id, name, getResponse))\n        if (title.includes('ShopOn')) dispatch(UPDATE_SHOPON({ action: 1, id: id, name: name }, getResponse))\n        if (title.includes('Email')) dispatch(UPDATE_EMAIL(id, name, getResponse))\n    }\n\n\n    const getResponse = (res, message, type) => {\n        setAddContent(false)\n        setEditContent([])\n        if (title.includes('ShopOn') || title.includes('Email') || title.includes('Website')) {\n            if (method) method(type ? type : '')\n            handleClose()\n            setSpinner(false)\n        }\n        //    if (res == 200) this.setState({ error: message, gallery_popoverShow: false }, () => this.props.TOGGLE_ADD_WEBSITE())\n    }\n\n    const handleClose = () => {\n        setEditContent([]);\n        setAddContent(false);\n        if (title.includes('ShopOn')) dispatch({ type: TOGGLE_ADD_SHOPON, payload: false })\n        if (title.includes('Email')) dispatch({ type: TOGGLE_ADD_EMAIL, payload: false })\n        if (title.includes('Website')) dispatch({ type: TOGGLE_ADD_WEBSITE, payload: false })\n    }\n\n\n    const deleteWebsite = (id) => {\n        Swal.fire({\n            title: \"Are You Sure?\",\n            text: `Are you sure you want to permanently delete this ${title.toLowerCase()} template?`,\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n            confirmButtonText: \"Yes, Delete it\",\n\n        }).then((result) => {\n            if (result.value) {\n                if (title.includes('Website')) dispatch(DELETE_WEBSITE(id, getResponse, navigate))\n                if (title.includes('ShopOn')) dispatch(DELETE_SHOPON(id, getResponse, navigate))\n                if (title.includes('Email')) dispatch(DELETE_EMAIL(id, getResponse, navigate))\n            }\n        });\n    }\n\n\n\n    return (<>\n        {!noList ? <Dropdown className='w-100'>\n            {selectedContent ? <Dropdown.Toggle id=\"web_switcher_btn\" variant=\"secondary\" size={'sm'} className=\"d-flex align-items-center w-100 justify-content-between p-1\">\n                <div className=\"d-flex align-items-center flex-grow-1\">\n                    <div className=\"symbol symbol-24 radius-2 flex-shrink-0 me-1 fs-5\">\n                        <FontAwesomeIcon icon={'browser'} />\n                    </div>\n                    <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\n                        <p className=\"fw-semibold mb-0 text-ellipsis fs-9 text-start\">{selectedContent?.name}</p>\n                        {selectedContent?.totalPost && <p className='mb-0 fs-10 text-muted'>{selectedContent?.totalPost} Posts</p>}\n                    </div>\n                </div>\n            </Dropdown.Toggle> : <div className=\"w-100 sk_rect rounded-1 h-34px\"></div>}\n            {/* <div className=\"w-100 sk_rect rounded-1 h-34px\"></div> */}\n            <Dropdown.Menu className=\"w-100\">\n                <div className=\"dropdown-height\">\n                    {contentList?.map((item, index) => {\n                        const data = isWebsite ? item?.wall?.Wall : item\n                        return <div key={index} className='position-relative mb-1'>\n                            <Dropdown.Item eventKey={data?.id} onClick={() => changeWebsite(data)} className={data?.id == selectedContent?.id ? 'active' : ''}>\n                                <div className='menu-title'>{data?.name}</div>\n                            </Dropdown.Item>\n                            <div className='dropdown-action'>\n                                <Button variant='dropdown-icon' className='web_edit' onClick={() => editWebsite(isWebsite ? item?.wall?.Wall : item)}>\n                                    <FontAwesomeIcon icon={'ellipsis-vertical'} iconClass={'me-0'}/>\n                                </Button>\n                            </div>\n                        </div>\n                    })}\n                    <div className='mt-2 pt-2 border-top'>\n                        <Dropdown.Item id=\"add_web_btn\" onClick={() => setAddContent(true)} className='f-center'>\n                            <FontAwesomeIcon icon={'plus'} />\n                            <span className='menu-title flex-grow-0 ms-1'>New {title}</span>\n                        </Dropdown.Item>\n                    </div>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown> : null}\n        <AddWebsiteModal show={addContent} title={title} onCreate={addWebsite} onUpdate={updateWebsite} editContent={editContent} handleClose={handleClose} contentList={contentList} spinner={spinner} onDelete={deleteWebsite} />\n    </>\n    )\n}\n\n\nexport default WebsiteSwitcher"],"names":["CardAside","Component","constructor","props","super","handleClose","this","filterToggleCallback","state","width","window","innerWidth","isSavedList","handleWindowResize","bind","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","filterToggle","heading","redirectUrl","isHide","closeAside","_jsxs","className","concat","id","children","_jsx","Button","variant","size","onClick","FontAwesomeIcon","icon","iconClass","_ref","show","title","apiError","setApiError","onCreate","onUpdate","editContent","isStatus","deleteContent","spinner","name","setName","useState","autoUpdate","setAutoUpdate","status","setStatus","error","setError","onSave","length","Update","useEffect","Object","keys","Number","resetForm","Modal","onHide","centered","Header","closeButton","Title","Body","Form","Group","Control","placeholder","value","onChange","e","target","onKeyPress","key","Label","htmlFor","Check","type","checked","Footer","_Fragment","disabled","_selectedWall$name","contentList","selectedContent","iswebsite","onlySwitcher","modifyContent","selectLoader","header","allWalls","useSelector","_state$dashboardData","_state$dashboardData$","dashboardData","dashboarddata","user","_state$authorized","_state$authorized$use","authorized","userData","user_data","wallsLoader","addGalleryNow","selectedWall","setSelectedWall","addContent","setAddContent","setEditContent","loader","setLoader","setSpinner","dispatch","useDispatch","navigate","useNavigate","changeContent","item","_window$location$path","_window$location$path2","role","localStorage","setItem","wallId","includes","location","pathname","CHANGE_MODERATION_WALLID","payload","MODERATION_RESET","GET_FEEDS","removeAllFilterBody","activeTabActionFilter","togglePlanSection","toggleAddFeedsSection","closePricingModal","setTimeout","totalPost","callback","msg","openAddModal","TOGGLE_ADD_GALLERY","getSelectedWall","find","wall","getItem","Dropdown","Toggle","style","padding","charAt","toUpperCase","maxWidth","href","Menu","map","index","_item$wall","_data$name","data","Wall","Item","eventKey","editGallery","test","OverlayTrigger","placement","overlay","Tooltip","Link","cursor","to","AddContentModal","onAddGallery","galleryName","trim","some","_wall$name","toLowerCase","isGalleryNameExist","GALLERY_WALL_UPDATE","deleted","action","autoupdate","Swal","text","showCancelButton","cancelButtonText","confirmButtonText","then","result","dismiss","onDelete","sameName","setSameName","SetStatus","SetError","checkName","filter","list","String","defaultChecked","changeWebsite","isWebsite","method","addNew","noList","getResponse","res","message","TOGGLE_ADD_SHOPON","TOGGLE_ADD_EMAIL","TOGGLE_ADD_WEBSITE","_item$wall2","editWebsite","AddWebsiteModal","CREATE_WEBSITE","CREATE_SHOPON","CREATE_EMAIL","updateWebsite","UPDATE_WEBSITE","UPDATE_SHOPON","UPDATE_EMAIL","DELETE_WEBSITE","DELETE_SHOPON","DELETE_EMAIL"],"sourceRoot":""}