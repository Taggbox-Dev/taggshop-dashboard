{"version":3,"file":"static/js/3075.4c976aab.chunk.js","mappings":"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","sources":["app/Layout/Main/Feeds/ManageFeed/Components/SelectAccount.js","app/Layout/Main/Feeds/ManageFeed/Components/FeedsList.js","app/Layout/Main/Feeds/ManageFeed/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\n import Select from 'react-select'; \r\nimport { AUTHOR_IMAGE } from '../../../../../../utils';\r\n\r\nexport default class SelectAccount extends Component {\r\n\r\n    state = {selectedOption:null , allOptions:[] };\r\n     \r\n     componentDidMount(){\r\n         const {feed} = this.props \r\n         var option=[], fontDefault \r\n\r\n\r\n         feed && feed.accountList && feed.accountList.length && feed.accountList.map((account, index)=>{\r\n            if (account.id == feed.connectedAccount) {\r\n                fontDefault = { value: account.id, label: (<span  className=\"filter-option pull-left d-flex align-items-center\" key={account.id}><div  className=\"symbol symbol-30 random_color-2 symbol-circle mr-2 selectAcc\"style={{ backgroundImage: `url(${account.profilePicture.replace(/\\s/g, '')}),url(${AUTHOR_IMAGE(account.accountName, account.color)})` }}></div>{account.accountName}</span>) }\r\n              }\r\n\r\n              option.push({ value: account.id, label: (<span  className=\"filter-option pull-left d-flex align-items-center\"  key={index}><div  className=\"symbol symbol-30 random_color-2 symbol-circle mr-2 selectAcc\"style={{ backgroundImage: `url(${account.profilePicture.replace(/\\s/g, '')}),url(${AUTHOR_IMAGE(account.accountName, account.color)})` }}></div>{account.accountName}</span>) })\r\n         }) \r\n        this.setState({allOptions:option, selectedOption:fontDefault})\r\n     }\r\n\r\n    \r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { feed , changeAccount} = this.props\r\n         changeAccount(e.value, feed.id);\r\n         \r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedOption, allOptions } = this.state; \r\n        \r\n        return ( allOptions && allOptions.length && selectedOption && selectedOption.value ? \r\n        <Select  className=\"selectedOptionData\" defaultValue={selectedOption}  onChange={(e)=>this.handleChange(e)}  options={allOptions}  /> :'')\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Image, Table, Form, OverlayTrigger, Tooltip, Dropdown } from 'react-bootstrap';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { Link } from 'react-router-dom';\r\nimport SelectAccount from './SelectAccount'\r\nimport HTMLReactParser from 'react-html-parser';\r\nimport { connect } from 'react-redux'\r\nimport { GET_FEEDS } from '../../../../../../actions/manageFeedsAction'\r\nimport { GET_NETWORK_NAME, showAddAccounntAlert, switchWarning } from '../../../../../../utils'\r\nimport { GET_NETWORK_ICON } from '../../../../../../utils';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\r\n\r\nclass FeedsList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            moderation: this.props.feed.moderation,\r\n            status: this.props.feed.status,\r\n            connectedAccount: this.getConnectAccount(),\r\n        }\r\n    }\r\n\r\n    getConnectAccount = () => {\r\n        const { accountList, connectedAccount } = this.props.feed;\r\n        const connectedAcc = accountList.length > 0 ? accountList.filter((account) => account.id === connectedAccount) : [];\r\n        return connectedAcc.length > 0 ? connectedAcc[0] : accountList.length > 0 ? accountList[0] : {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feed } = this.props\r\n        this.setState({ status: feed.status, moderation: feed.moderation })\r\n    }\r\n\r\n    onModerationSwitch = (status) => {\r\n        const { feed, changeStatus } = this.props\r\n        changeStatus(feed.id, Number(status), 'moderation')\r\n        this.setState({ moderation: Number(status) })\r\n    }\r\n\r\n    onFeedStatusSwitch = (status) => {\r\n        const { feed, changeStatus } = this.props\r\n        changeStatus(feed.id, Number(status), 'status')\r\n        this.setState({ status: Number(status) })\r\n    }\r\n\r\n    connectAccount = (obj, status) => {\r\n        const item = {\r\n            id: obj.networkId,\r\n            name: (obj.networkName).toLowerCase()\r\n        }\r\n        localStorage.setItem(\"feedId\", obj.id);\r\n        if (status) localStorage.setItem(\"refresh\", true);\r\n        localStorage.setItem(\"connectionType\", 'manageFeed');\r\n        showAddAccounntAlert(item, status, true)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.accountChanged != this.props.accountChanged) {\r\n            this.setState({ connectedAccount: this.getConnectAccount() })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { feed, onFeedDelete, changeAccount } = this.props\r\n        const { status, moderation, connectedAccount } = this.state\r\n        const { filterId, networkId, accountList, isBtntext } = feed\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span className=\"h-34px w-34px me-2 d-flex flex-shrink-0\">\r\n                            <Image className=\"h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(feed.networkId)}.svg`)} height={43} width={43} title={GET_NETWORK_NAME(feed.networkId)} alt={GET_NETWORK_NAME(feed.networkId)} fluid/>\r\n                        </span>\r\n                        <div>\r\n                            <p className=\"mb-0 d-flex\">\r\n                                <span className=\"feed_name fw-semibold\">{HTMLReactParser(feed.name)}{\" \"}</span>\r\n                                {feed.socialLink ?\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{feed.tooltip}</Tooltip>}>\r\n                                        <Link className=\"ms-2 text-muted\" to={feed.networkId !== 8 ? feed.socialLink : `https://vimeo.com/user${feed.accountId}`} target=\"_blank\" title='support'>\r\n                                            <FontAwesomeIcon icon={'arrow-up-right-from-square'} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n                                    : null}\r\n                            </p>\r\n                            <small className=\"mb-0 text-gray-700\">{feed.networkName}</small>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        {[1, 2, 3, 4, 5, 8, 65, 67, 26, 23].includes(filterId) && networkId != 2 && accountList && accountList.length > 0 ?\r\n                            <Dropdown style={{ minWidth: 220 }}>\r\n                                <Dropdown.Toggle variant=\"secondary\" size={'sm'} className=\"d-flex align-items-center w-100 justify-content-between\">\r\n                                    <div className=\"d-flex align-items-center flex-grow-1\">\r\n                                        <Author className={'symbol symbol-26 symbol-circle flex-shrink-0 me-2'}\r\n                                            imageSize={26}\r\n                                            symbolClass={'symbol-label fs-8'}\r\n                                            name={connectedAccount.accountName} profileUrl={connectedAccount.profilePicture} networkId={networkId} />\r\n                                        <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                                            <p className=\"fw-medium mb-0 text-ellipsis fs-9\">{connectedAccount.accountName}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    {(isBtntext == \"Reconnect\" || isBtntext == \"Connect\") ?\r\n                                        <OverlayTrigger overlay={<Tooltip>Feed disconnected as the social media account's user name got changed since your last connection with Tagbox. Kindly click on the button below to connect.</Tooltip>}>\r\n                                            <span className='me-1 fs-5 text-danger h-14px w-14px'>\r\n                                                <FontAwesomeIcon icon={'circle-info'} />\r\n                                            </span>\r\n                                        </OverlayTrigger>\r\n                                        : null}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"w-100\">\r\n                                    {accountList.map(account => {\r\n                                        const { id, profilePicture, accountName } = account;\r\n                                        return <Dropdown.Item key={id} onClick={() => checkPermission('networkManager', 'manageFeed', true) ? changeAccount(id, feed.id) : {}}>\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <Author className={'symbol symbol-26 symbol-circle flex-shrink-0 me-2'}\r\n                                                    imageSize={26}\r\n                                                    symbolClass={'symbol-label fs-8'}\r\n                                                    name={accountName} profileUrl={profilePicture} networkId={networkId} />\r\n                                                <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                                                    <p className=\"fw-medium mb-0 text-ellipsis fs-9\">{accountName}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Dropdown.Item>\r\n                                    })}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            : '--'}\r\n                        <div className=\"d-flex ms-3\">\r\n                            {isBtntext == \"Reconnect\" ?\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Reconnect</Tooltip>}>\r\n                                    <Button variant='icon' size='sm' className='btn-active-primary' aria-label='Reconnect' onClick={() => checkPermission('networkManager', 'manageAccount', true) ? this.connectAccount(feed, true) : {}}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'rotate'} />\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                : ''}\r\n                            {isBtntext == \"Connect\" ?\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Connect</Tooltip>}>\r\n                                    <Button variant='icon' size='sm' className=\"btn-active-primary\" aria-label='Connect' onClick={() => checkPermission('networkManager', 'manageAccount', true) ? this.connectAccount(feed, false) : {}}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'rotate'} />\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                : ''}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                {/* <td>\r\n                    <div className=\"d-flex align-items-center\">\r\n\r\n                            {feed && feed.accountList && feed.accountList.length ?\r\n                            feed.filterId && [1, 2, 3, 4, 5, 8, 65, 67, 26].includes(feed.filterId) && feed.networkId != 2 ?\r\n                                feed.accountList.filter(x => x.id == feed.connectedAccount) ? <>\r\n\r\n                                    <SelectAccount changeAccount={changeAccount} feed={feed} key={feed.id} />\r\n                                </>\r\n                                    : ''\r\n                                : ''\r\n                            : ''}\r\n                        \r\n                        <div className=\"d-flex ms-3\">\r\n                            {feed.isBtntext == \"Reconnect\" ?\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Reconnect</Tooltip>}>\r\n                                    <button type=\"button\" className=\"btn btn-icon btn-active-primary p-0 w-32px h-32px\" onClick={() => this.connectAccount(feed, true)}>\r\n                                        <FontAwesomeIcon icon={'arrow-rotate'} />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n                                : ''}\r\n                            {feed.isBtntext == \"Connect\" ?\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Connect</Tooltip>}>\r\n                                    <button type=\"button\" className=\"btn btn-icon btn-active-primary p-0 w-32px h-32px\" onClick={() => this.connectAccount(feed, false)}>\r\n                                        <FontAwesomeIcon icon={'arrow-rotate'} />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n                                : ''}\r\n                        </div>\r\n                    </div>\r\n                </td> */}\r\n                <td>\r\n                    <p className=\"fs-8 fw-semibold mb-0\" data-id=\"post\">{feed.postCount ? feed.postCount : 0}</p>\r\n                    <span className=\"fs-8 text-gray-700\">Approved {feed.postCount > 1 ? 'Posts' : 'Post'}</span>\r\n                </td>\r\n                <td>\r\n                    <Form.Check type=\"switch\" checked={moderation} data-id=\"moderation\" onChange={() => checkPermission('networkManager', 'manageFeed', true) ? moderation ? this.onModerationSwitch(!moderation) : switchWarning('Enabling moderation will make all newly received posts private until they are reviewed and approved.',this.onModerationSwitch,!moderation) : {}} />\r\n                </td>\r\n                <td>\r\n                    <Form.Check type=\"switch\" checked={status} data-id=\"status\" onChange={() => checkPermission('networkManager', 'manageFeed', true) ? !status ? this.onFeedStatusSwitch(!status) : switchWarning('Disabling this status will hide all collected posts from this feed, affecting visibility and content access.',this.onFeedStatusSwitch,!status) : {}} />\r\n                </td>\r\n                <td className=\"pr-0 text-end\">\r\n                    <div className=\"d-flex align-items-center justify-content-end\" onClick={() => checkPermission('networkManager', 'manageFeed', true) ? onFeedDelete(feed.id, feed.networkId) : {}}>\r\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\r\n                            <Button variant='icon' size='sm' data-id=\"delete\" className=\"btn-active-primary\" aria-label=\"delete\">\r\n                                <FontAwesomeIcon type=\"solid\" icon={'trash-can'} />\r\n                            </Button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        GET_FEEDS: () => dispatch(GET_FEEDS()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(FeedsList);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Table, Card, Button } from 'react-bootstrap';\r\nimport { ACTION_DELETE_FEED, ACTION_FEED_STATUS, ACTION_UPDATE_SOCIAL_ACCOUNT, GET_FEEDS } from '../../../../../actions/manageFeedsAction';\r\nimport FeedsList from './Components/FeedsList';\r\nimport { Loader } from '../../CommonComponents/Loader';\r\nimport Swal from 'sweetalert2'\r\nimport { addAccountFromId } from '../../../../../utils/addAccount';\r\nimport { getModeration } from '../../../../../actions/moderationActions';\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Link } from 'react-router-dom';\r\nimport withRouter from '../../../../routes/WithRouter';\r\nimport EmptyWithIcon from '../../CommonComponents/Empty/EmptyWithIcon';\r\nimport { TOGGLE_ADD_GALLERY } from '../../../../../reducer/keys';\r\nimport { SNAPUP_DETAILS_ACTION } from '../../../../../actions/addFeedActions';\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nconst tableHeaders = [\r\n    { name: \"Name\", minWidth: 150 },\r\n    { name: \"Account\", minWidth: 150 },\r\n    { name: \"Posts\", minWidth: 120 },\r\n    { name: \"Moderation\", minWidth: 50 },\r\n    { name: \"Status\", minWidth: 50 },\r\n    { name: \"Actions\", minWidth: 70, align: 'text-end' }\r\n];\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass Managefeeds extends Component {\r\n    controller = new AbortController();\r\n    state = { currentPage: 1, showPost: 30, totalPage: 1, allFeeds: [], currentPageFeeds: null, accountChanged: false }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"message\", this.handleMessage, { signal: this.controller.signal });\r\n        channel.addEventListener(\"message\", this.handleMessage);\r\n        this.props.GET_FEEDS();\r\n        this.countAllPage()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (!this.props.manageFeeds?.loading && !this.props.wallsLoader && !this.props.manageFeeds?.feeds?.length) {\r\n            const wallId = localStorage.getItem('wallId');\r\n            if (wallId) {\r\n                this.props.navigate(`/content/addfeed/${wallId}`);\r\n            }\r\n        }\r\n        else if (this.props.manageFeeds?.feeds?.length == 1) {\r\n            const { id, networkId } = this.props.manageFeeds?.feeds[0]\r\n            if (id == 0 && networkId == 0) {\r\n                const wallId = localStorage.getItem('wallId');\r\n                if (wallId) this.props.navigate(`/content/addfeed/${wallId}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    changeTotalPost = (e) => { this.setState({ showPost: parseInt(e.target.value), currentPage: 1 }, () => this.countAllPage()) }\r\n\r\n    nextPrev = (no) => { this.setState({ currentPage: no }, () => this.countAllPage()) }\r\n\r\n    countAllPage = () => {\r\n        const { manageFeeds } = this.props;\r\n        const feeds = manageFeeds?.feeds\r\n        this.setState({ allFeeds: feeds, totalPage: Math.ceil((feeds && feeds.length > 0 ? feeds.length : 0) / this.state.showPost) });\r\n    }\r\n\r\n\r\n    changeStatus = (feedId, status, action) => {\r\n        this.props.ACTION_FEED_STATUS(feedId, status, action, this.onSuccessUpdateRedux)\r\n    }\r\n\r\n\r\n    changeAccount = (id, feedId) => {\r\n        this.props.ACTION_UPDATE_SOCIAL_ACCOUNT(id, feedId, this.onSuccessUpdateRedux)\r\n    }\r\n    onSuccessUpdateRedux = (val) => {\r\n        this.props.getModeration();\r\n        this.countAllPage()\r\n        if (val == 'account') this.setState({ accountChanged: !this.state.accountChanged })\r\n    }\r\n\r\n    onFeedDelete = (feedId, networkId) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            title: 'Are you sure?',\r\n            showCloseButton: true,\r\n            showCancelButton: true,\r\n            focusConfirm: true,\r\n            confirmButtonText: 'Yes',\r\n            confirmButtonAriaLabel: 'Yes',\r\n            cancelButtonText: 'No',\r\n            cancelButtonAriaLabel: 'Thumbs down'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.props.ACTION_DELETE_FEED(feedId, networkId, this.onDeleteUpdateRedux(networkId))\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteUpdateRedux = (networkId) => {\r\n        this.props.getModeration();\r\n        this.countAllPage()\r\n    }\r\n\r\n    handleMessage = async (event) => {\r\n        try {\r\n            const { GET_FEEDS } = this.props;\r\n            const response = JSON.parse(event.data);\r\n            const { code } = response;\r\n            const networkId = localStorage.getItem('networkId');\r\n            const type = localStorage.getItem('connectionType');\r\n            if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\r\n                if (type == 'manageFeed') {\r\n                    if (code) await addAccountFromId(parseInt(networkId), code, GET_FEEDS);\r\n                }\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"message\", this.handleMessage, { signal: this.controller.signal });\r\n        channel.removeEventListener(\"message\", this.handleMessage);\r\n        this.controller.abort()\r\n    }\r\n\r\n    getPagination = () => {\r\n        const { currentPage, totalPage } = this.state;\r\n        const pagination = [];\r\n\r\n        if (totalPage <= 5) {\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                pagination.push(i);\r\n            }\r\n        } else {\r\n            if (currentPage <= 3) {\r\n                pagination.push(1, 2, 3, 4, '...', totalPage);\r\n            } else if (currentPage > totalPage - 3) {\r\n                pagination.push(1, '...', totalPage - 3, totalPage - 2, totalPage - 1, totalPage);\r\n            } else {\r\n                pagination.push(1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPage);\r\n            }\r\n        }\r\n\r\n        return pagination;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { currentPage, showPost, totalPage, allFeeds, accountChanged } = this.state;\r\n        const { manageFeeds, wallsLoader, allWalls, navigate } = this.props;\r\n        const pagination = this.getPagination();\r\n\r\n        const startIdx = (currentPage - 1) * showPost;\r\n        const currentFeeds = allFeeds > 0 ? allFeeds.slice(startIdx, startIdx + showPost) : [];\r\n\r\n        return <div className='d-flex flex-column flex-column-fluid full-content'>\r\n                    <div className=\"subheader\">\r\n                        <Container fluid>\r\n                            <div className='f-between'>\r\n                                <h1 className=\"me-2 h4 my-3\">Feeds</h1>\r\n                            </div>\r\n                        </Container>\r\n                </div>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <Card.Header className='f-between d-flex'>\r\n                            <h2 className=\"me-2 h4 my-3\">Manage Feeds</h2>\r\n                            <div className=\"f-center\">\r\n                            {!manageFeeds.loading && !wallsLoader ?\r\n                                allWalls && allWalls.length > 0 ?\r\n                                <button onClick={() => checkPermission('networkManager', 'manageFeed', true) ? navigate(`/content/addfeed/${localStorage.getItem('wallId')}`) : {}} className=\"btn btn-primary btn-sm text-nowrap btn-min-w\">\r\n                                    <FontAwesomeIcon icon={'plus'} iconClass=\"me-1\" />\r\n                                    Add Feed\r\n                                </button>\r\n                                :\r\n                                <Button size='sm' className='text-nowrap btn-min-w' onClick={() => checkPermission('contentGallery', 'createGallery', true) ? this.props.TOGGLE_ADD_GALLERY(true) : {}}>\r\n                                    <FontAwesomeIcon icon={'plus'} iconClass=\"me-1\" />\r\n                                    Add Gallery</Button> : null}\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"mb-xl-5 mb-4 d-flex flex-column justify-content-between p-3 position-relative\" style={{ minHeight: 'calc(100vh - 260px)' }}>\r\n                                {!manageFeeds.loading && !wallsLoader ?\r\n                                    allWalls && allWalls.length > 0 ?\r\n                                        <div className='table-responsive' style={{ minHeight: 'calc(100vh - 285px)' }}>\r\n                                            <Table size='lg' className='pb-10'>\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                        {\r\n                                                            tableHeaders.map((header, i) => <th key={i} className={`fw-bold text-nowrap ${header?.align || ''}`} style={{ minWidth: header.minWidth }}>{header.name}</th>)\r\n                                                        }\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {manageFeeds?.feeds && manageFeeds?.feeds.length ? manageFeeds?.feeds.map((feed) => {\r\n                                                        return !(feed?.id == 0 && feed?.networkId == 0) ? <FeedsList feed={feed} changeStatus={this.changeStatus} onFeedDelete={this.onFeedDelete} changeAccount={this.changeAccount} key={`tr_${feed.id}`} accountChanged={accountChanged} /> : null\r\n                                                    }) : null}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 225px)' }}>\r\n                                            <EmptyWithIcon title={'Create a Gallery, to add feed! ⌛'} desc={'Oops! Looks like you have deleted your gallery, create one by simply clicking on the button below.'} icon={'media'} button={{ action: () => checkPermission('contentGallery', 'createGallery', true)  ? this.props.TOGGLE_ADD_GALLERY(true) : {}, text: 'Create Gallery' }} isFullScreen={false} />\r\n                                        </div>\r\n                                    :\r\n                                    <div style={{ minHeight: 'calc(100vh - 500px)' }}>\r\n                                        <Loader />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Card.Body>\r\n                        {/* <Card.Footer>\r\n                            <div className='d-flex justify-content-between align-items-center'>\r\n                                <div className=\"my-2 text-muted\">\r\n                                    Showing {startIdx + 1} to {startIdx + currentFeeds.length} of {manageFeeds?.feeds ? manageFeeds?.feeds.length : 0} entries\r\n                                </div>\r\n                                <div className=\"f-center\">\r\n                                    <span className='f-center text-muted fw-medium my-1'>Show\r\n                                        <Form.Select className='mx-2' onChange={e => this.changeTotalPost(e)}>\r\n                                            <option value=\"5\" selected={showPost === 5}>5</option>\r\n                                            <option value=\"10\" selected={showPost === 10}>10</option>\r\n                                            <option value=\"15\" selected={showPost === 15}>15</option>\r\n                                            <option value=\"20\" selected={showPost === 20}>20</option>\r\n                                            <option value=\"30\" selected={showPost === 30}>30</option>\r\n                                            <option value=\"40\" selected={showPost === 40}>40</option>\r\n                                        </Form.Select>\r\n                                        entries\r\n                                    </span>\r\n                                    \r\n                                    {totalPage > 1 && (\r\n                                        <ul className=\"pagination pagination-sm my-1 ms-2\">\r\n                                            <li className=\"page-item\">\r\n                                                <span className={`page-link ${currentPage == 1 ? ' disabled' : ' cursor-pointer'}`} onClick={() => { this.nextPrev(currentPage - 1) }}>\r\n                                                    <FontAwesomeIcon icon={'angle-left'} />\r\n                                                </span>\r\n                                            </li>\r\n                                            {pagination.map((page, i) => (\r\n                                                page === '...' ? (\r\n                                                    <li className=\"page-item\" key={i}>\r\n                                                        <span className=\"page-link\">...</span>\r\n                                                    </li>\r\n                                                    ) : (\r\n                                                    <li key={i} className={`page-item ${currentPage === page ? 'active' : ''}`} onClick={() => this.setState({ currentPage: page }, () => this.countAllPage())}>\r\n                                                        <span className=\"page-link\">{page}</span>\r\n                                                    </li>\r\n                                                    )\r\n                                            ))}\r\n                                            <li className=\"page-item\">\r\n                                                <span className={`page-link ${currentPage === totalPage ? ' disabled' : ' cursor-pointer'}`} onClick={() => { this.nextPrev(currentPage + 1) }}>\r\n                                                    <FontAwesomeIcon icon={'angle-right'} />\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Card.Footer> */}\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        manageFeeds: state.manageFeeds,\r\n        wallsLoader: state?.dashboardData?.wallsLoader,\r\n        allWalls: state?.dashboardData?.dashboarddata?.allWalls,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        GET_FEEDS: () => dispatch(GET_FEEDS()),\r\n        ACTION_DELETE_FEED: (feedId, networkId, callback) => dispatch(ACTION_DELETE_FEED(feedId, networkId, callback)),\r\n        ACTION_FEED_STATUS: (feedId, status, action, callback) => dispatch(ACTION_FEED_STATUS(feedId, status, action, callback)),\r\n        ACTION_UPDATE_SOCIAL_ACCOUNT: (accountId, feedId, callback) => dispatch(ACTION_UPDATE_SOCIAL_ACCOUNT(accountId, feedId, callback)),\r\n        getModeration: () => dispatch(getModeration()),\r\n        TOGGLE_ADD_GALLERY: (status) => dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }),\r\n        SNAPUP_DETAILS_ACTION: (callback) => dispatch(SNAPUP_DETAILS_ACTION(callback)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Managefeeds))"],"names":["Component","FeedsList","constructor","props","super","getConnectAccount","accountList","connectedAccount","this","feed","connectedAcc","length","filter","account","id","onModerationSwitch","status","changeStatus","Number","setState","moderation","onFeedStatusSwitch","connectAccount","obj","item","networkId","name","networkName","toLowerCase","localStorage","setItem","showAddAccounntAlert","state","componentDidMount","componentDidUpdate","prevProps","accountChanged","render","onFeedDelete","changeAccount","filterId","isBtntext","_jsxs","children","_jsx","className","Image","src","baseUrl","GET_NETWORK_ICON","height","width","title","GET_NETWORK_NAME","alt","fluid","HTMLReactParser","socialLink","OverlayTrigger","placement","overlay","Tooltip","tooltip","Link","to","accountId","target","FontAwesomeIcon","icon","includes","Dropdown","style","minWidth","Toggle","variant","size","Author","imageSize","symbolClass","accountName","profileUrl","profilePicture","maxWidth","Menu","map","Item","onClick","checkPermission","Button","type","postCount","Form","Check","checked","onChange","switchWarning","connect","dispatch","GET_FEEDS","tableHeaders","align","channel","BroadcastChannel","Managefeeds","arguments","controller","AbortController","currentPage","showPost","totalPage","allFeeds","currentPageFeeds","changeTotalPost","e","parseInt","value","countAllPage","nextPrev","no","manageFeeds","feeds","Math","ceil","feedId","action","ACTION_FEED_STATUS","onSuccessUpdateRedux","ACTION_UPDATE_SOCIAL_ACCOUNT","val","getModeration","Swal","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","then","result","ACTION_DELETE_FEED","onDeleteUpdateRedux","handleMessage","async","response","JSON","parse","event","data","code","getItem","origin","addAccountFromId","error","getPagination","pagination","i","push","window","addEventListener","signal","prevState","_this$props$manageFee","_this$props$manageFee2","_this$props$manageFee3","_this$props$manageFee4","_this$props$manageFee5","loading","wallsLoader","_this$props$manageFee6","wallId","navigate","componentWillUnmount","removeEventListener","abort","allWalls","startIdx","slice","Container","Card","Header","iconClass","TOGGLE_ADD_GALLERY","Body","minHeight","Loader","Table","header","EmptyWithIcon","desc","button","text","isFullScreen","_state$dashboardData","_state$dashboardData2","_state$dashboardData3","dashboardData","dashboarddata","callback","payload","SNAPUP_DETAILS_ACTION","withRouter"],"sourceRoot":""}