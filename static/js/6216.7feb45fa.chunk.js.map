{"version":3,"file":"static/js/6216.7feb45fa.chunk.js","mappings":"2NAQA,MAAMA,EAAa,IAAIC,gBACjBC,EAAU,IAAIC,iBAAiB,WA2CrC,EA1CqBC,KACjB,MAAMC,GAASC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAcC,EAAAA,EAAAA,WAAS,GAEhCC,EAAgBC,UAClB,IACI,MAAMC,EAAWC,KAAKC,MAAMC,EAAMC,OAC5B,KAAEC,GAASL,EACXM,EAAYC,aAAaC,QAAQ,aACjCC,EAAOF,aAAaC,QAAQ,mBAC9BL,EAAMO,OAAOC,SAAS,eAAiBR,EAAMO,OAAOC,SAAS,eAClD,kBAARF,GACKJ,SAAYO,EAAAA,EAAAA,IAAiBC,SAASP,GAAYD,GAAM,IAAMZ,GAASqB,EAAAA,EAAAA,IAA6BvB,EAAOwB,GAAInB,MAAc,EAG7I,CAAE,MAAOoB,GAET,GAoBJ,OAjBAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAShC,EAAWgC,OAQ1B,OAPAC,OAAOC,iBAAiB,UAAWtB,EAAe,CAAEoB,WACpD9B,EAAQgC,iBAAiB,UAAWtB,GACpCL,GAASqB,EAAAA,EAAAA,IAA6BvB,EAAOwB,GAAInB,IACjDW,aAAac,QAAQ,eAAgB9B,EAAOwB,IAC5CR,aAAac,QAAQ,UAAW9B,EAAOwB,IACvCR,aAAac,QAAQ,gBAAgB,GACrCd,aAAac,QAAQ,eAAgBF,OAAOG,SAASC,SAASC,QAAQ,MAAO,KACtE,KACHL,OAAOM,oBAAoB,UAAW3B,EAAe,CAAEoB,WACvD9B,EAAQqC,oBAAoB,UAAW3B,GACvCZ,EAAWwC,QACXtC,EAAQuC,OAAO,CAClB,GACF,IAEIhC,GAAUiC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAAKD,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAACC,WAAW,GAAO,C","sources":["app/Layout/Main/SocialAccount/ShareAccount.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../actions/sceneActions\";\nimport { addAccountFromId } from \"../../../../utils/addAccount\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport SocialAccount from \"./SocialAccount\";\n\nconst controller = new AbortController();\nconst channel = new BroadcastChannel('connect');\nconst ShareAccount = () => {\n    const params = useParams();\n    const dispatch = useDispatch();\n    const [loading,setLoading] = useState(true);\n\n    const handleMessage = async(event) => {\n        try {\n            const response = JSON.parse(event.data);\n            const { code } = response;\n            const networkId = localStorage.getItem('networkId');\n            const type = localStorage.getItem('connectionType');\n            if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\n                if(type == 'connectAccount'){\n                    if (code) await addAccountFromId(parseInt(networkId), code, () => dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(params.id, setLoading)), true);\n                }\n            }\n        } catch (error) {\n            \n        }\n    };\n\n    useEffect(() => {\n        const signal = controller.signal;\n        window.addEventListener(\"message\", handleMessage, { signal });\n        channel.addEventListener(\"message\", handleMessage);\n        dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(params.id, setLoading))\n        localStorage.setItem('shared_token', params.id)\n        localStorage.setItem('ownerId', params.id)\n        localStorage.setItem('shareAccount', true)\n        localStorage.setItem('url_redirect', window.location.pathname.replace('/v2', ''))\n        return () => {\n            window.removeEventListener(\"message\", handleMessage, { signal });\n            channel.removeEventListener(\"message\", handleMessage);\n            controller.abort();\n            channel.close();\n        }\n    }, [])\n\n    return loading ? <Loader/> : <SocialAccount isSharing={true}/>\n    \n}\n\nexport default ShareAccount"],"names":["controller","AbortController","channel","BroadcastChannel","ShareAccount","params","useParams","dispatch","useDispatch","loading","setLoading","useState","handleMessage","async","response","JSON","parse","event","data","code","networkId","localStorage","getItem","type","origin","includes","addAccountFromId","parseInt","TAGGSHOP_SOCIAL_ACCOUNT_DATA","id","error","useEffect","signal","window","addEventListener","setItem","location","pathname","replace","removeEventListener","abort","close","_jsx","Loader","SocialAccount","isSharing"],"sourceRoot":""}