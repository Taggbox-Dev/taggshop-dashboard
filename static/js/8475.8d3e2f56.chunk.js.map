{"version":3,"file":"static/js/8475.8d3e2f56.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null ? void 0 : onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","Component","className","props","_jsx","classNames","concat","displayName","FormCheckLabel","bsPrefix","htmlFor","controlId","useContext","FormContext","useBootstrapPrefix","FormCheck","id","bsSwitchPrefix","inline","reverse","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","hasChildOfType","input","FormCheckInput","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","FormGroup","validated","Form","Group","Control","Floating","Check","Text","Range","Select","context","NavbarBrand","href","NavbarCollapse","NavbarContext","Collapse","in","expanded","NavbarToggle","onClick","onToggle","handleClick","useEventCallback","e","NavbarOffcanvas","Offcanvas","show","renderStaticNode","NavbarText","Navbar","initialBsPrefix","expand","variant","bg","fixed","sticky","onSelect","collapseOnSelect","controlledProps","useUncontrolled","handleCollapse","useCallback","arguments","undefined","role","expandClass","navbarContext","SelectableContext","Brand","Toggle","matchersByWindow","WeakMap","getMatcher","query","targetWindow","matchers","get","Map","set","mql","matchMedia","refCount","media","useMediaQuery","length","window","matches","setMatches","useState","useEffect","handleChange","addListener","removeListener","delete","breakpointValues","names","keys","and","next","getMaxQuery","breakpoint","Math","min","indexOf","getNext","breakpointOrMap","direction","breakpointMap","entries","reduce","key","getMinQuery","JSON","stringify","createBreakpointHook","xs","sm","md","lg","xl","xxl","OffcanvasBody","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","inProp","mountOnEnter","unmountOnExit","appear","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","EXITING","OffcanvasHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH5","divWithClassName","OffcanvasTitle","DialogTransition","BackdropTransition","Fade","ariaLabelledby","placement","responsive","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalManager","useRef","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","handleHide","modalContext","renderBackdrop","backdropProps","renderDialog","dialogProps","ModalContext","BaseModal","node","visibility","_len","args","Array","_key","_len2","_key2","current","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","Body","Header","Title"],"sourceRoot":""}