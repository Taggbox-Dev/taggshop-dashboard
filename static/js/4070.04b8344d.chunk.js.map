{"version":3,"file":"static/js/4070.04b8344d.chunk.js","mappings":"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","sources":["app/Layout/Main/Home/Dashboard/index.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport withRouter from '../../../../routes/WithRouter';\r\nimport { Container, Button, Row, Col } from 'react-bootstrap';\r\nimport { GET_WEBSITE_LIST } from '../../../../../actions/websiteAction';\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { GET_ALL_SHOPON_LIST } from '../../../../../actions/shoponAction';\r\nimport { GET_DASHBOARD_DATA } from '../../../../../actions/sceneActions';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport ErrorFound from '../../../../ErrorFound';\r\nimport \"../home.scss\"\r\nimport { GET_IFRAM } from '../../../../../utils';\r\nimport { DASHBOARD_LOAD } from '../../../../../reducer/keys';\r\n\r\nconst CaseStudy = React.lazy(() => import(\"./CaseStudy\"));\r\nconst Overview = React.lazy(() => import(\"./Overview\"));\r\nconst SocialAccount = React.lazy(() => import(\"./SocialAccount\"));\r\nconst OverallCount = React.lazy(() => import(\"./OverallCount\"));\r\nconst PublishAssets = React.lazy(() => import(\"./PublishAssets\"));\r\nconst TrustedApps = React.lazy(() => import(\"./TrustedApps\"));\r\nconst ChannelPerfomance = React.lazy(() => import(\"./ChannelPerfomance\"));\r\nconst ContentChart = React.lazy(() => import(\"./ContentChart\"));\r\nconst ActiveUsers = React.lazy(() => import(\"./ActiveUsers\"));\r\nconst TopPosts = React.lazy(() => import(\"./TopPosts\"));\r\nconst TopProducts = React.lazy(() => import(\"./TopProducts\"));\r\n\r\n\r\n\r\nconst dateRanges = {\r\n    \"Today\": [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\")],\r\n    \"Yesterday\": [moment().subtract(1, 'days').format(\"DD-MM-YYYY\"), moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),],\r\n    'Last 7 Days': [moment().subtract(6, 'days').format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\r\n    'Last 30 Days': [moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month').format(\"DD-MM-YYYY\"), moment().subtract(1, 'month').endOf('month').format(\"DD-MM-YYYY\"),],\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state = {  startDate: moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), endDate: moment().format(\"DD-MM-YYYY\"), maxDate: moment().endOf('month').format(\"DD-MM-YYYY\") }\r\n\r\n    componentDidMount() {\r\n        const { getDashboard, websiteList, getWebistes, shopOnList, getShopOn, dashboardLoad } = this.props\r\n        const { startDate, endDate } = this.state\r\n        getDashboard(startDate, endDate);\r\n        if (!(websiteList && websiteList.length)) getWebistes()\r\n        if (!(shopOnList && shopOnList.length)) getShopOn()\r\n        \r\n        GET_IFRAM() && setTimeout(() => { dashboardLoad()}, 2000);\r\n        //GET_IFRAM() && window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    // componentWillUnmount(){\r\n    //     GET_IFRAM() && window.removeEventListener('scroll', this.handleScroll);\r\n    // }\r\n\r\n   // handleScroll=()=> this.setState({loadDelay : true})\r\n\r\n    handleOnApply = (event, picker) => this.setState({ startDate: picker.startDate.format(\"DD-MM-YYYY\"), endDate: picker.endDate.format(\"DD-MM-YYYY\") })\r\n\r\n    handleCallback = (start, end) => {\r\n        this.props.getDashboard(start, end)\r\n        this.setState({ startDate: start.format(\"DD-MM-YYYY\"), endDate: end.format(\"DD-MM-YYYY\") })\r\n    }\r\n\r\n    render() {\r\n        const { startDate, endDate, maxDate} = this.state\r\n        const { loadDelay }= this.props\r\n\r\n        console.log(loadDelay,'loadDelayjklldsflsdlfkj')\r\n\r\n\r\n        return <Container>\r\n            <div className=\"text-end w-100\">\r\n                <ErrorFound>\r\n                    <DateRangePicker onApply={this.handleOnApply} startDate={startDate} endDate={endDate}\r\n                        initialSettings={{\r\n                            locale: { format: 'DD-MM-YYYY', separator: '-' },\r\n                            maxDate: maxDate,\r\n                            showDropdowns: true,\r\n                            startDate: startDate, endDate: endDate,\r\n                            ranges: dateRanges,\r\n                        }} onCallback={this.handleCallback}>\r\n                        <Button variant='secondary' className='mb-5 f-center flex-grow-1' style={{minWidth:190}}>\r\n                            <FontAwesomeIcon icon={'calendar-range'} iconClass={'me-1'}/>\r\n                            {moment(startDate, \"DD-MM-YYYY\").format(\"ll\")}\r\n                            -\r\n                            {moment(endDate, \"DD-MM-YYYY\").format(\"ll\")}\r\n                        </Button>\r\n                    </DateRangePicker>\r\n                </ErrorFound>\r\n            </div>\r\n            <Suspense fallback={null}><CaseStudy /></Suspense>\r\n\r\n            { loadDelay || !GET_IFRAM() ? <>\r\n            <Suspense fallback={null}><Overview /></Suspense>\r\n            <Row>\r\n                <ErrorFound>\r\n                <Suspense fallback={null}><SocialAccount /></Suspense>\r\n                </ErrorFound>\r\n                <Col sm={6}>\r\n                <Suspense fallback={null}><OverallCount title={'Gallery Count'} tooltip={'No. of galleries created vs the total no. of galleries available in your plan.'} gallery={true} /></Suspense>\r\n                <Suspense fallback={null}><OverallCount title={'Feed count'} tooltip={'No. of feeds created vs the total no. of feeds available in your plan.'} /></Suspense>\r\n                </Col>\r\n            </Row>\r\n            \r\n                <Suspense fallback={null}><PublishAssets /></Suspense>\r\n                <Suspense fallback={null}><TrustedApps /></Suspense>  \r\n                 <Suspense fallback={null}><ChannelPerfomance startDate={startDate} endDate={endDate} /></Suspense> \r\n                <Row> \r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><ContentChart/></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><ActiveUsers /></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><TopPosts /></Suspense></ErrorFound>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <ErrorFound> <Suspense fallback={null}><TopProducts /></Suspense></ErrorFound>\r\n                    </Col>\r\n                </Row> </>  : null \r\n              }\r\n        </Container>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n    return {\r\n        websiteList: state.websiteList?.websiteList,\r\n        shopOnList: state.shopOnList?.shopOnList,\r\n        loadDelay: state.dashboardData?.loadDelay,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDashboard: (start, end) => dispatch(GET_DASHBOARD_DATA(start, end)),\r\n        getWebistes: () => dispatch(GET_WEBSITE_LIST()),\r\n        getShopOn: () => dispatch(GET_ALL_SHOPON_LIST()),\r\n        dashboardLoad: () => dispatch({ type: DASHBOARD_LOAD}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(React.memo(Dashboard)))"],"names":["CaseStudy","React","Overview","SocialAccount","OverallCount","PublishAssets","TrustedApps","ChannelPerfomance","ContentChart","ActiveUsers","TopPosts","TopProducts","dateRanges","moment","format","subtract","startOf","endOf","Dashboard","Component","constructor","arguments","state","startDate","endDate","maxDate","handleOnApply","event","picker","this","setState","handleCallback","start","end","props","getDashboard","componentDidMount","websiteList","getWebistes","shopOnList","getShopOn","dashboardLoad","length","GET_IFRAM","setTimeout","render","loadDelay","console","log","_jsxs","Container","children","_jsx","className","ErrorFound","DateRangePicker","onApply","initialSettings","locale","separator","showDropdowns","ranges","onCallback","Button","variant","style","minWidth","FontAwesomeIcon","icon","iconClass","Suspense","fallback","_Fragment","Row","Col","sm","title","tooltip","gallery","lg","connect","_state$websiteList","_state$shopOnList","_state$dashboardData","dashboardData","dispatch","GET_DASHBOARD_DATA","GET_WEBSITE_LIST","GET_ALL_SHOPON_LIST","type","DASHBOARD_LOAD","withRouter"],"sourceRoot":""}