{"version":3,"file":"static/js/1978.1ffec87f.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;"],"names":["ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","activeElement","doc","ownerDocument","active","nodeName","e","body","_excluded","manager","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","useRef","dialog","backdrop","Object","assign","current","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","ownerWindow","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","useState","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","currentTarget","isEscKey","defaultPrevented","dialogProps","undefined","tabIndex","React","renderTransition","unmountOnExit","mountOnEnter","appear","in","arguments","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","value","super","classList","hasClass","baseVal","marginProp","el","sharedManager","getSharedManager","options","map","func","index","child","hasChildOfType","type","some","PropTypes","Image","bsPrefix","fluid","rounded","roundedCircle","thumbnail","useBootstrapPrefix","classNames","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","ModalBody","as","Component","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}