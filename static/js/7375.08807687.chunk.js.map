{"version":3,"file":"static/js/7375.08807687.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/NotFound/NoCardData.js","app/Layout/Main/Home/Dashboard/ContentChart.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nclass NoCardData extends Component {\n\n       render() {\n              const { title, desc, method, methodTitle, subTitle, subMethod } = this.props\n              return <div className={`f-center py-4 h-100 w-100 flex-column`} style={{minHeight:200}}>\n                            <div className=\"d-flex flex-column align-items-center w-100\">\n                                   <Row  className=\"mb-2 text-center justify-content-center gx-0 w-100\">\n                                          <Col xxl={8} xl={10}>\n                                          <h4 className={`text-gray-dark fw-semibold text-center`}>{title}</h4>\n                                          {desc ? <p>{desc}</p> : null}\n                                          </Col>\n                                   </Row>\n                            </div>\n                            {method ?\n                            <div className=\"d-flex\">\n                                   <Button variant='primary' className=\"m-2 btn-min-w\" onClick={method}>\n                                          {methodTitle}\n                                   </Button>\n                                   {subTitle ? <Button variant='secondary' className=\"m-2 btn-min-w\" onClick={subMethod}>\n                                          {subTitle}\n                                   </Button> : null}\n                            </div> \n                            : null}\n                     </div>\n       }\n}\n\nexport default NoCardData;","import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport NoCardData from \"../../CommonComponents/NotFound/NoCardData\";\nimport withRouter from \"../../../../routes/WithRouter\";\n\nclass ContentChart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            series: [1, 1],\n            options: {\n                dataLabels: { enabled: false },\n                legend: { show: false },\n                colors: ['#4e69ed', '#00e396'],\n                chart: { type: 'donut' },\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            stroke: 0,\n                            legend: { show: false },\n                            labels: {\n                                show: true,\n                                total: { label: 'Loading...', showAlways: true, show: true },\n                                value: { show: false }\n                            }\n                        }\n                    }\n                },\n                chart: {\n                    animations: {\n                        enabled: true,\n                        easing: 'easeinout',\n                        speed: 800,\n                        animateGradually: { enabled: true, delay: 2000 },\n                        dynamicAnimation: { enabled: true, speed: 350 }\n                    }\n                },\n                tooltip: { enabled: false },\n                labels: ['UGC', 'Branded']\n            },\n            brand: 0,\n            ugcContent: 0,\n            loader: true\n        }\n    };\n\n    componentDidMount() {\n        const { ugc } = this.props\n        if (ugc) this.onLoadBrandUGC(ugc[0].data);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.ugc != this.props.ugc)\n            this.onLoadBrandUGC(nextProps.ugc[0].data)\n    }\n\n    onLoadBrandUGC = (data) => {\n        this.setState(prevState => ({\n            ugcContent: data[0],\n            brand: data[1],\n            series: data,\n            options: {\n                ...prevState.options,\n                plotOptions: {\n                    ...prevState.options.plotOptions,\n                    pie: {\n                        ...prevState.options.plotOptions.pie,\n                        donut: {\n                            ...prevState.options.plotOptions.pie.donut,\n                            labels: {\n                                show: true,\n                                total: { label: 'UGC vs Branded', showAlways: true, show: true },\n                                value: { show: true }\n                            }\n                        }\n                    }\n                },\n                tooltip: { enabled: true }\n            },\n            loader: data[0] == 0 && data[1] == 0 ? false : true\n        }))\n    }\n    render() {\n        const { options, series, brand, ugcContent, loader, wallId } = this.state\n        return <Card className=\"card-stretch gutter-b\">\n                    <div className=\"f-between p-3 py-2 py-sm-3 p-sm-5 border-bottom\">\n                        <span className=\"h5 mb-0\">UGC V/S Branded content</span>\n                    </div>\n                    <Card.Body>\n                        <div style={{minHeight:300}}>\n                            {loader ? <Row className=\"justify-content-center\">\n                                    <Col lg={9} xl={7}>\n                                        <ReactApexChart options={options} series={series} type=\"donut\" className=\"assetsType w-100 m-auto\" style={{maxWidth:350}}/>\n                                    </Col>\n                                    <Col lg={12} xl={5} className=\"f-center justify-content-xl-start\">\n                                        <div className=\"px-3 w-100\" style={{maxWidth:200}}>\n                                            <div className=\"f-between py-2\">\n                                                <p className=\"fs-9 fw-medium d-flex align-items-center mb-0\"><span className=\"h-16px w-16px rounded-1 me-2\" style={{backgroundColor:'#4e69ed'}}></span>UGC posts</p>\n                                                <span className=\"fw-bolder fs-8\">{ugcContent}</span>\n                                            </div>\n                                            <div className=\"f-between py-2\">\n                                                <p className=\"fs-9 fw-medium d-flex align-items-center mb-0\"><span className=\"h-16px w-16px rounded-1 me-2\" style={{backgroundColor:'#00e396'}}></span>Branded content</p>\n                                                <span className=\"fw-bolder fs-8\">{brand}</span>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row> : \n                                <NoCardData title=\"Need More UGC\" desc=\"UGC performs 56% better than branded content on-site. Leverage Snapup to collect reviews & ratings.\" methodTitle=\"Add content\" method={()=>this.props.navigate(`/content/addfeed/${localStorage.getItem('wallId')}`)} />\n                            }\n                        </div>\n                    </Card.Body>\n                </Card>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ugc: state.dashboardData.ugc\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(ContentChart))"],"names":["NoCardData","Component","render","title","desc","method","methodTitle","subTitle","subMethod","this","props","_jsxs","className","style","minHeight","children","_jsx","Row","Col","xxl","xl","Button","variant","onClick","ContentChart","constructor","super","onLoadBrandUGC","data","setState","prevState","ugcContent","brand","series","options","plotOptions","pie","donut","labels","show","total","label","showAlways","value","tooltip","enabled","loader","state","dataLabels","legend","colors","chart","type","stroke","animations","easing","speed","animateGradually","delay","dynamicAnimation","componentDidMount","ugc","componentWillReceiveProps","nextProps","wallId","Card","Body","lg","ReactApexChart","maxWidth","backgroundColor","navigate","concat","localStorage","getItem","connect","dashboardData","withRouter"],"sourceRoot":""}