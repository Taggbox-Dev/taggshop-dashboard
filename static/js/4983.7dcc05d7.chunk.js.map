{"version":3,"file":"static/js/4983.7dcc05d7.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/hasClass.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : children.ref);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","_excluded","useRTGTransitionProps","_ref","onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","nodeRef","mergedRef","useMergedRefs","ref","normalize","callback","param","handleEnter","useCallback","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","assign","status","innerProps","cloneElement","React","component","Component","transitionProps","_jsx","ImperativeTransition","_ref2","in","inProp","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","renderTransition","runTransition","RTGTransition","NoopTransition","resolveContainerRef","document","canUseDOM","ownerDocument","body","getBoundingClientRect","useWaitForDOMRef","onResolved","window","useWindow","resolvedRef","setRef","earlyRef","nextRef","isEscKey","e","code","keyCode","hasClass","className","classList","contains","baseVal"],"sourceRoot":""}