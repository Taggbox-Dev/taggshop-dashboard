{"version":3,"file":"static/js/8372.eb9b0ed9.chunk.js","mappings":"sJACA,MAcA,EAdsBA,IACRC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,KAAK,KAAKC,UAAU,wBAAwBC,KAAML,EAAMK,KAAMC,OAAQN,EAAMO,QAASC,UAAQ,EAAAC,SAAA,EACpGC,EAAAA,EAAAA,KAACR,EAAAA,EAAMS,OAAM,CAACP,UAAU,kBAAkBQ,aAAW,KAErDF,EAAAA,EAAAA,KAACR,EAAAA,EAAMW,KAAI,CAACT,UAAU,MAAKK,UACpBC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,oBAAoBU,MAAO,CAAEC,cAAe,OAAQN,UAC5DC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,yDAAwDK,UAChEC,EAAAA,EAAAA,KAAA,UAAQN,UAAU,cAAcY,IAAKhB,EAAMiB,KAAMC,MAAM,MAAMC,OAAO,MAAMC,YAAY,IAAIC,MAAM,2CAA2CC,iBAAe,Y,0ICHtL,MAAMC,EAAqB,SAACC,EAAUC,GAA4B,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7D,OAAiB,GAAbF,GAA+B,GAAbA,GAAgC,IAAbA,KAAoBK,EAAAA,EAAAA,IAAeC,SAASL,KAClE,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,QAAO,CAACC,EAAKC,KACtBA,EAAQC,kBAAkBC,QAC1BH,EAAM,IAAIA,KAAQC,EAAQC,kBAAkBC,QAEzCH,IACR,MAAO,GAEPT,CACX,EAEaa,EAAqB,SAACC,EAAOb,GAAS,IAAEC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAMY,IAClE,OAAQR,SAASN,IACb,KAAK,EACDc,EAASC,EAAgBF,IACzB,MAEJ,KAAK,EACDC,EAASE,EAAqBH,IAC9B,MAEJ,KAAK,EACDC,EAASG,EAAwBJ,EAAOZ,IAKhD,CACH,EAEKc,EAAmBF,GAAWC,IAChC,MAAMI,EAAM,CAAElB,UAAW,EAAGmB,OAAQN,EAAOO,WAAY,EAAGC,YAAY,IACtEC,EAAAA,EAAAA,IAAaJ,GAAKK,MAAKC,IAAe,IAAd,KAAEC,GAAMD,EAC5BV,GAASY,EAAAA,EAAAA,IAA8C,MAAtBD,EAAKE,aAAuBF,EAAKG,SAASH,KAAO,IAAI,IACvFI,OAAOC,IACNhB,GAASY,EAAAA,EAAAA,IAAwB,IAAI,GACvC,EAGAV,EAAwBH,GAAWC,IACrC,MAAMI,EAAM,CAAElB,UAAW,EAAGmB,OAAQN,IACpCS,EAAAA,EAAAA,IAAaJ,GAAKK,MAAKQ,IAAe,IAAd,KAAEN,GAAMM,EAC5B,GAA0B,MAAtBN,EAAKE,aAAsB,CAC3B,MAAM,aAAEK,EAAY,qBAAEC,GAAyBR,EAC/CX,GAASY,EAAAA,EAAAA,IAAwBM,EAAaP,OAC9CX,GAASoB,EAAAA,EAAAA,IAA0C,OAApBD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBR,MACzD,MACIX,GAASY,EAAAA,EAAAA,IAAwB,KACjCZ,GAASoB,EAAAA,EAAAA,IAAsB,IACnC,GACF,EAGAjB,EAA0BA,CAACJ,EAAOZ,IAAYa,IAChD,GAAI,CAAC,GAAI,EAAG,IAAIqB,SAAS7B,SAASL,IAAU,CACxC,MAAMmC,EAAiB,IAAVnC,EAAe,WAAa,WACzCoC,EAAAA,EAAAA,IAAqBxB,EAAOuB,GAAMb,MAAKe,IACnC,MAAM,KAAEb,EAAI,OAAEc,GAAWD,EACzBxB,GAASY,EAAAA,EAAAA,IAAmC,MAAXa,EAAiBd,EAAKe,MAAQ,IAAI,GAE3E,CACK,EAGIC,EAAqBA,IAAO3B,IACrCA,GAASY,EAAAA,EAAAA,IAAwB,KACjCZ,GAASoB,EAAAA,EAAAA,IAAsB,IAAI,EAG1BQ,EAAiBzC,IAAY,IAAD0C,EACrC,MAAM,WAAEC,GAAeC,EAAAA,EAAMC,WAAWC,eAAeC,eACvD,GAAKJ,EACL,OAAmD,QAA5CD,EAAAC,EAAWK,MAAKC,GAAOA,EAAIjD,QAAUA,WAAO,IAAA0C,OAAA,EAA5CA,EAA8CQ,WAAY,EAAE,EAI1DC,EAAoBpD,GAAc,CAACc,EAAUgC,KACtD,MAAM,OAAE7C,GAAW6C,IAAWC,eAAeM,QAE7C,OAAQ/C,SAASL,IACb,KAAK,GACD,MAAO,mRAEX,KAAK,GACD,MAAO,8GAEX,KAAK,GACD,MAAO,kHAEX,KAAK,GACD,MAAO,iEAEX,KAAK,GACD,MAAO,qIAEX,KAAK,GACD,MAAO,gHAEX,KAAK,EACD,OAAoB,GAAbD,EAAiB,iIAAmI,6HAE/J,KAAK,EACD,MAAO,0HAEX,KAAK,EACD,MAAO,qHAEX,KAAK,GACD,MAAO,2HAEX,KAAK,GACD,MAAO,+GAKX,QACI,MAAO,GACf,EAGSsD,EAA4BtD,GAAc,CAACc,EAAUgC,KAC9D,MAAM,SAAES,EAAQ,OAAEtD,EAAM,eAAEuD,EAAc,OAAEC,EAAM,iBAAEC,GAAqBZ,IAAWC,eAAeM,QACjG,IAAIM,EAAW,CAAE/E,MAAM,EAAOgF,QAAS,IACvC,OAAQtD,SAASN,IACb,KAAK,GACG,CAAC,GAAI,IAAImC,SAAS7B,SAASL,MACX,IAAZsD,GAAmBA,IAAUI,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,4BAC9B,KAAjCL,EAASA,EAASpD,OAAS,IAA8C,KAAjCoD,EAASA,EAASpD,OAAS,IAAaoD,EAASpB,SAAS,MAAQoB,EAASpB,SAAS,QAAMwB,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,yBAE5K,MAEJ,KAAK,GACe,IAAZL,GAAmBA,IAAUI,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,2BACnE,MAEJ,KAAK,EACe,IAAZL,GAAmBA,IAAUI,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,4BAC9B,KAAjCL,EAASA,EAASpD,OAAS,IAA8C,KAAjCoD,EAASA,EAASpD,OAAS,IAAaoD,EAASpB,SAAS,MAAQoB,EAASpB,SAAS,QAAMwB,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,wBACxK,MAEJ,KAAK,EACD,GAAc,IAAV3D,EAAc,OACRwD,GAAWD,GAAmBE,IAAkBC,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,2BAC5F,MACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,EACD,GAAiB,GAAb5D,IAA6B,GAAVC,GAAyB,IAAVA,GAA0B,IAAVA,GAAe,OACrD,IAAZsD,GAAmBA,IAAUI,EAAW,CAAE/E,MAAM,EAAMgF,QAAS,2BAQ3E,QAAID,EAAS/E,OACTkC,GAAS+C,EAAAA,EAAAA,IAAyBF,KAC3B,EAEC,EAGHG,EAAeA,CAACC,EAAU/D,KACnC,OAAQM,SAASyD,IACb,KAAK,GACL,KAAK,GACL,KAAK,EACD,MAAO,UAEX,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,EACL,KAAK,EACD,OAAsB,IAAd/D,GAAgC,IAAb+D,EAAkB,OAAS,KAE1D,KAAK,GACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,mBACX,KAAK,GACD,MAAO,QACX,KAAK,GACL,KAAK,GACD,MAAO,OACX,KAAK,GACD,MAAO,OACX,KAAK,GACD,MAAO,eAEX,QACI,OACR,C,mMCvMJ,MAAMC,UAAmBC,EAAAA,UAASC,WAAAA,GAAA,SAAAhE,WAAA,KAC9BiE,MAAM,CACFC,YAAY,CAAC,CAACC,GAAG,IAAK,CAACA,GAAG,KAC1BC,QAAO,EACV,CASDC,MAAAA,GACI,MAAM,OAACD,EAAM,YAAEF,GAAeI,KAAKL,OAC7B,WAAEM,EAAU,WAAEC,EAAU,SAAEC,GAAaH,KAAKjG,MAClD,OAAOC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iEAAgEK,SAAA,CAChFyF,EAOO,MAPMxF,EAAAA,EAAAA,KAAA,OAAKN,UAAU,YAAWK,UACrCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAACC,OAAK,EAAA7F,UACZR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,4BAA2BK,SAAA,EACtCC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAI,CAACC,GAAI,oBAAoBC,aAAaC,QAAQ,YAAatG,UAAU,uCAAuCuG,MAAM,cAAalG,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,aAAcC,UAAW,YACrLpG,EAAAA,EAAAA,KAAA,MAAIN,UAAU,eAAcK,SAAC,wBAIzCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAACC,OAAK,EAAA7F,UACZC,EAAAA,EAAAA,KAACqG,EAAAA,EAAI,CAAC3G,UAAW,IAAG8F,EAAW,uBAAuB,IAAKzF,UACvDR,EAAAA,EAAAA,MAAC8G,EAAAA,EAAKlG,KAAI,CAACT,UAAU,0CAAyCK,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,mBAAkBK,SAAC,oBACjCC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,mBAAkBK,SAAC,sGAChCR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uCAAsCK,SAAA,CAC/CsF,GAqBFrF,EAAAA,EAAAA,KAACsG,EAAAA,EAAG,CAAC5G,UAAU,QAAQU,MAAO,CAACmG,SAAS,KAAKxG,UAC5CyG,EAAAA,EAAAA,IAAoB,GAAGC,KAAI,CAACC,EAAGC,KAAU3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAAA7G,UAC1CR,EAAAA,EAAAA,MAAA,OAAiBG,UAAU,iFAAgFK,SAAA,EACvGC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,gCACfM,EAAAA,EAAAA,KAAA,OAAKN,UAAU,+BAFTiH,UAtBdpH,EAAAA,EAAAA,MAAC+G,EAAAA,EAAG,CAAC5G,UAAU,QAAQU,MAAO,CAACmG,SAAS,KAAKxG,SAAA,EACzCC,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAAA7G,UACAR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACC,QAASA,IAAMtB,EAAaC,EAAW,GAAKC,EAAS,iCAAkChG,UAAU,0EAAyEK,SAAA,EAC9KC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,iBAAgBK,UACzBC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAAC/C,KAAM,QAASgD,KAAM,SAAUC,UAAW,YAE/DpG,EAAAA,EAAAA,KAAA,KAAGN,UAAU,uBAAsBK,SAAC,mBAI3CoF,EAAYjE,OAAS,EAAIiE,EAAYsB,KAAIM,IAAU/G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAAA7G,UACpDR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACC,QAASA,IAAMtB,EAAaC,EAAWsB,EAAQ3B,IAAMM,EAAS,+BAA+BqB,EAAQ3B,MAAO1F,UAAU,0EAAyEK,SAAA,EACnMC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,iBAAgBK,UACzBC,EAAAA,EAAAA,KAACgH,EAAAA,EAAK,CAAC1G,KAAK2G,EAAAA,EAAAA,IAAQ,oCAAmCC,EAAAA,EAAAA,IAAiBH,EAAQ3B,WAAY3E,OAAQ,GAAID,MAAO,GAAIoF,OAAK,OAE5H5F,EAAAA,EAAAA,KAAA,KAAGN,UAAU,uBAAsBK,UAAEoH,EAAAA,EAAAA,IAAiBJ,EAAQ3B,aAE5D,QAYbI,GACGxF,EAAAA,EAAAA,KAAA,OAAKN,UAAU,WAAUK,UACrBC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACO,QAAQ,OAAO1H,UAAU,4BAA4BoH,QAASA,IAAMvB,KAAKjG,MAAM+H,OAAO,OAAOtH,SAAC,6BAGlG,iBAMpC,EAGJ,SAAeuH,EAAAA,EAAAA,GAAWvC,E,wPC5E1B,MAAMwC,EAAc,CACb,CACOnC,GAAI,EACJa,MAAO,mBACPuB,KAAM,sFACNC,MAAO,gBAEd,CACOrC,GAAI,EACJa,MAAO,uBACPuB,KAAM,wFACNC,MAAO,mBAEd,CACOrC,GAAI,EACJa,MAAO,mBACPuB,KAAM,wGACNC,MAAO,kBAGrB,MAAMC,UAAsB1C,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KAC/BiE,MAAQ,CAAEyC,UAAU,EAAO,CAE3BrC,MAAAA,GACO,MAAM,SAAEqC,GAAapC,KAAKL,MAC1B,OAAOlF,EAAAA,EAAAA,KAAA,OAAKN,UAAU,6CAA4CK,UAC3DR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uBAAsBK,SAAA,EAC9BR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBK,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mDACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oDAEVC,EAAAA,EAAAA,KAACsG,EAAAA,EAAG,CAAClG,MAAO,CAACmG,SAAS,KAAKxG,SACnBwH,EAAYd,KAAI,CAACmB,EAAMjB,KACjB3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAACiB,GAAI,EAAenI,UAAU,OAAMK,UACjCR,EAAAA,EAAAA,MAAC8G,EAAAA,EAAI,CAAC3G,UAAU,oEAAoEoH,QAASvB,KAAKjG,MAAMwI,WAAW/H,SAAA,EAC5GC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kDAAkDU,MAAO,CAACC,cAAc,UAAUN,UAC1FC,EAAAA,EAAAA,KAAA,SAAON,UAAU,wCAAwCc,MAAM,MAAMC,OAAO,MAAMsH,QAAQd,EAAAA,EAAAA,IAAQ,eAAeW,EAAKH,aAAcO,UAAU,EAAOC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAKpI,UACtLC,EAAAA,EAAAA,KAAA,UAAQM,KAAK2G,EAAAA,EAAAA,IAAQ,eAAeW,EAAKH,aAActE,KAAK,mBAG1E5D,EAAAA,EAAAA,MAAC8G,EAAAA,EAAKlG,KAAI,CAACC,MAAO,CAACgI,UAAU,KAAKrI,SAAA,EAC3BC,EAAAA,EAAAA,KAACqG,EAAAA,EAAKgC,MAAK,CAAC3I,UAAU,iBAAgBK,SAAE6H,EAAK3B,SAC7CjG,EAAAA,EAAAA,KAACqG,EAAAA,EAAKiC,KAAI,CAAAvI,SACF6H,EAAKJ,cAVjBb,WAmBpD,EAGP,U,eCxDA,MAAM4B,UAAsBvD,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KAClCiE,MAAQ,CAAEyC,UAAU,EAAO,CAE3BrC,MAAAA,GACI,MAAM,YAAEkD,EAAW,gBAAEC,GAAoBlD,KAAKjG,OACxC,SAAEqI,GAAapC,KAAKL,MAC1B,OAAOlF,EAAAA,EAAAA,KAAA,OAAKN,UAAU,4BAA2BK,SAC5CyI,GAAeE,OAAOC,KAAKH,GAAatH,OAAS,GAC9C3B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,4BAA2BK,SAAA,EACtCR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBK,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wEAEPC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,qBAAoBK,SAC9ByI,EAAYI,SAASC,MAAM,EAAGlB,EAAW,EAAIa,EAAYI,SAAS1H,QAAQuF,KAAI,CAACM,EAASJ,IAAyB,IAAdI,EAAQ3B,IAA0B,IAAd2B,EAAQ3B,IAAwB,IAAZ2B,EAAQ3B,IAAsB,IAAZ2B,EAAQ3B,IAClKpF,EAAAA,EAAAA,KAAA,OAAiBN,UAAU,YAAWK,UAClCR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACO,QAAQ,YAAYN,QAASA,IAAM2B,EAAgB1B,EAAQ3B,IAAIrF,SAAA,CACpD,IAAdgH,EAAQ3B,IACTpF,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAAC/C,KAAM,QAASgD,KAAM,OAAQC,UAAW,uBAEzDpG,EAAAA,EAAAA,KAACgH,EAAAA,EAAK,CAACvG,OAAQ,GAAID,MAAO,GAAId,UAAU,OAAOY,KAAK2G,EAAAA,EAAAA,IAAQ,oCAAmCC,EAAAA,EAAAA,IAAiBH,EAAQ3B,WAAY0D,KAAK3B,EAAAA,EAAAA,IAAiBJ,EAAQ3B,IAAKQ,OAAK,IAE3KmB,EAAQgC,SAPPpC,GASD,SAGhB6B,EAAYI,SAAS1H,QAAU,GAAKyG,GACjC3H,EAAAA,EAAAA,KAAA,OAAKN,UAAU,YAAWK,UACtBR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACO,QAAQ,OAAO1H,UAAU,WAAWoH,QAASA,IAAMvB,KAAKyD,SAAS,CAAErB,UAAWA,IAAY5H,SAAA,EAC9FC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAAC/C,KAAM,QAASgD,KAAM,gBAAiB,gDAI7D,SAGVnG,EAAAA,EAAAA,KAAA,OAAKN,UAAU,4BAA2BK,UACrCyG,EAAAA,EAAAA,IAAoB,IAAIC,KAAI,CAACwC,EAAQtC,KAAU3G,EAAAA,EAAAA,KAAA,OAAiBN,UAAU,YAAWK,UAACC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,yCAA5CiH,QAG1E,EAGJ,MAMA,GAAeuC,EAAAA,EAAAA,KANUhE,IAAW,IAADiE,EAC/B,MAAO,CACHX,YAAiC,QAAtBW,EAAEjE,EAAMpB,sBAAc,IAAAqF,OAAA,EAApBA,EAAsBC,gBACtC,GAGL,CAAwCb,G,0FClDzB,SAASc,EAAO/J,GAC3B,MAAOgK,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAMC,IAAWF,EAAAA,EAAAA,WAAS,GAWjC,OAAOjK,EAAAA,EAAAA,MAACoK,EAAAA,EAAU,CAACjK,UAAU,OAAMK,SAAA,EAC/BC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAa,GAAI,QACtF7E,EAAAA,EAAAA,KAAC4J,EAAAA,GAAkB,CAAChI,MAAO0H,EAASO,SAVlBC,IAAQP,EAAWO,GAAIJ,GAAQ,GAAOpK,EAAMyK,kBAAkB,GAAI,GAAG,EAU5BhK,SACtDwC,IAAsE,IAArE,cAAEyH,EAAa,YAAEC,EAAW,uBAAEC,EAAsB,QAAEC,GAAS5H,EAC7D,OAAOhD,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAACC,UAAU,UAAStK,SAAA,EAChCR,EAAAA,EAAAA,MAAC6K,EAAAA,EAASE,OAAM,CAAClD,QAAQ,QAAQ1H,UAAW,2DAA0DJ,EAAMuD,MAAQ,aAAe,IAAK9C,SAAA,EACpIC,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC9K,UAAW,gBAAeJ,EAAMuD,MAAQ,aAAe,IAAMpD,KAAK,QAASuK,EAAc,CAAES,YAAa,iBAAmBC,UAAQ,IAChJP,GAAUnK,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAyB,QAEtD+J,GAAQH,EAAQpI,OAAS,GACtBlB,EAAAA,EAAAA,KAACoK,EAAAA,EAASO,KAAI,CAACjL,UAAU,iBAAgBK,UACrCC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAiBK,SAC3BkK,EAAYxD,KAAI,CAACmE,EAAYC,KAC1B,MAAMzK,EAAQ,CACV0K,iBAAiBF,EAAWG,OAAS,KAEzC,OAAOC,EAAAA,EAAAA,eAACZ,EAAAA,EAASxC,KAAI,IAAKsC,EAAuBU,EAAY,CAAExK,UAAU0G,QAASA,KAAMmE,OAtBlGC,EAsB+GN,EAAWO,YAtBtHC,EAsBmIR,EAAWS,QAtB1IC,EAsBmJV,EAAWW,oBAAoBC,SArB5MlM,EAAMyK,kBAAkBmB,EAAIE,EAAIE,GAChC/B,EAAW2B,QACXxB,GAAQ,GAHSuB,IAACC,EAAIE,EAAIE,CAsB4L,EAACG,IAAKZ,IAC5L7K,EAAAA,EAAAA,KAAA,OAAKN,UAAU,2CAA0CK,UACrDC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oBAAmBK,SAAE6K,EAAWO,gBAErC,QAI1B,OACC,IAGlB7L,EAAMuD,OAAQ7C,EAAAA,EAAAA,KAAA,QAAMoF,GAAG,GAAG1F,UAAU,mBAAkBK,SAAC,2BAAgC,OAEhG,C,eC1Ce,SAAS2L,EAASpM,GAC7B,MAAOqM,EAASC,IAAcpC,EAAAA,EAAAA,UAAS,KAChCpH,EAAYyJ,IAAiBrC,EAAAA,EAAAA,WAAS,GASvCsC,EAAeA,CAACC,EAAQnK,KAC1B,MAAMK,EAAM,CAAElB,UAAW,EAAGmB,OAAQN,EAAOO,WAAY,EAAGC,YAAY,IACtEC,EAAAA,EAAAA,IAAaJ,GAAKK,MAAKe,IACnB,MAAM,KAAEb,GAASa,EACQ,KAArBb,EAAKE,aAAuBkJ,EAAWpJ,EAAKG,SAASH,MACpDoJ,EAAW,GAAG,IACpBhJ,OAAMoJ,OAAU,EAUvB,OAAOzM,EAAAA,EAAAA,MAACoK,EAAAA,EAAU,CAACjK,UAAU,OAAMK,SAAA,EAC/BC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAa,GAAI,QACtF7E,EAAAA,EAAAA,KAAC4J,EAAAA,GAAkB,CAAClK,UAAU,oBAAoBkC,MAAOtC,EAAM2M,KAAMpC,SAzBhDC,IACrB,MAAMlI,EAAQkI,EACdgC,EAAa,EAAGlK,GAChBtC,EAAM4M,aAAatK,GACnBiK,GAAc,EAAK,EAqB6E9L,SAC3FwC,IAAA,IAAC,cAAEyH,EAAa,YAAEC,EAAW,uBAAEC,EAAsB,QAAEC,GAAS5H,EAAA,OAAMvC,EAAAA,EAAAA,KAAAmM,EAAAA,SAAA,CAAApM,UACnER,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAACC,UAAU,UAAU1K,KAAMyC,EAAWrC,SAAA,EAC3CR,EAAAA,EAAAA,MAAC6K,EAAAA,EAASE,OAAM,CAAClD,QAAQ,QAAQ1H,UAAW,2DAA0DJ,EAAMuD,MAAQ,aAAe,IAAK9C,SAAA,EACpIC,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC9K,UAAW,gBAAeJ,EAAMuD,MAAQ,aAAe,IAAMpD,KAAK,QAASuK,EAAc,CAAES,YAAa,oBAAsBC,UAAQ,EAACtF,GAAG,YACvJ+E,GAAUnK,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAyB,QAEtDiM,GAAWA,EAAQzK,OAAS,GACzBlB,EAAAA,EAAAA,KAACoK,EAAAA,EAASO,KAAI,CAACjL,UAAU,iBAAgBK,UACrCC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAiBK,SAC3B4L,EAAQlF,KAAI,CAACmE,EAAYC,KACf7K,EAAAA,EAAAA,KAACoK,EAAAA,EAASxC,KAAI,CAAClI,UAAU,0BAA0BoH,QAASA,KAAMsF,OApBjFC,EAoBgGzB,EAnBpHtL,EAAM4M,aAAaG,EAAK9L,MACxB+L,SAASC,cAAc,YAAY3K,MAAQyK,EAAK9L,KAChDsL,GAAc,QACdD,EAAW,IAJSS,KAoB4G,EAAAtM,UAChGR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2CAA0CK,SAAA,EACrDC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oBAAmBK,SAAE6K,EAAW7B,QAC7C/I,EAAAA,EAAAA,KAAA,QAAMN,UAAU,aAAYK,SAAE6K,EAAWrK,WAHyDsK,SAS5H,SACQ,IAGjBvL,EAAMuD,OAAQ7C,EAAAA,EAAAA,KAAA,QAAMoF,GAAG,GAAG1F,UAAU,mBAAkBK,SAAC,2BAAgC,OAGhG,C,0BCvDe,MAAMyM,UAAgBxH,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KAC3CiE,MAAQ,CAAEuE,KAAM,GAAI5G,OAAO,EAAOyG,QAAQ,GAAImD,YAAW,GAAO,KAEhEC,gBAAkBC,IACd,MAAM,cAAEC,EAAa,IAAE3I,GAAQsB,KAAKjG,MACpC,GAAI,CAAC,EAAG,GAAI,IAAI4D,SAASe,GACrB,IACI,MAAMd,EAAc,IAAPc,EAAY,WAAa,UACtC2I,EAAcD,IACdvJ,EAAAA,EAAAA,IAAqBuJ,EAAOxJ,GAAMb,MAAKe,IACnC,MAAM,KAAEb,EAAI,OAAEc,GAAWD,EACX,KAAVC,GACAiC,KAAKyD,SAAS,CAAES,KAAMjH,EAAKe,OAC/B,GAER,CAAE,MAAOV,GACLgK,QAAQC,IAAIjK,EAChB,MAEC+J,EAAcD,EAAM,EAC5B,KAEDI,YAAeV,IACX,IACI,MAAM,cAAEO,EAAa,IAAE3I,EAAG,YAAE+I,GAAiBzH,KAAKjG,MAClDsN,EAAqB,IAAP3I,EAAYoI,EAAKY,QAAQhH,MAAQoG,EAAKY,QAAQC,cAC5DF,EAAY,GAAU,IAAP/I,EAAYoI,EAAKjH,GAAG+H,WAAoB,IAAPlJ,EAAYoI,EAAKjH,GAAGgI,UAAUC,QAAQ,KAAM,QAAUhB,EAAKjH,GAAGgI,aAC9Gd,SAASgB,eAAe,cAAcrJ,KAAOrC,MAAQ,2BAAkC,IAAPqC,EAAY,iBAAmB,aAAoB,IAAPA,EAAYoI,EAAKjH,GAAG+H,WAAoB,IAAPlJ,EAAYoI,EAAKjH,GAAGgI,UAAUC,QAAQ,KAAM,QAAUhB,EAAKjH,GAAGgI,YAC3N7H,KAAKyD,SAAS,CAAES,KAAM,IAC1B,CAAE,MAAO5G,GACLgK,QAAQC,IAAI,gCAAiCjK,EACjD,GACH,KAED0K,aAAgBzD,IAAQvE,KAAKyD,SAAS,CAACM,QAAQQ,EAAG2C,YAAW,IAAM,IAAMlH,KAAKjG,MAAMsN,cAAc,GAAG,KAAI,EAAE,KAE3G3B,aAAe3B,KACXkE,EAAAA,EAAAA,IAAiBlE,GACdhH,MAAKmL,IAAWC,EAAAA,EAAAA,IAAUD,EAAQ,MAClCnL,MAAKqL,IACJpI,KAAKjG,MAAMsO,eAAe,GAAGD,EAAOE,OAAOF,EAAOG,MAAM,IAEzDlL,OAAMC,GAASgK,QAAQhK,MAAM,QAASA,IAAO,EAClD,KAEFkL,SAAW,CAAC7C,EAAIE,KACZ7F,KAAKjG,MAAMsN,cAAc1B,EAAIE,GAC7B7F,KAAKyD,SAAS,CAACM,QAAQ4B,EAAIuB,YAAW,GAAO,CAC/C,CAEFnH,MAAAA,GACI,MAAM,IAAErB,EAAG,cAAE2I,EAAa,eAAEgB,EAAc,gBAAEI,EAAe,QAAEC,EAAO,MAAEpL,EAAK,SAAEyB,GAAaiB,KAAKjG,OACzF,KAAEmK,EAAI,QAAGH,EAAO,WAAEmD,GAAiBlH,KAAKL,MAC9C,OAAO3F,EAAAA,EAAAA,MAAA,OAAKG,UAAU,MAAKK,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKN,UAAW,WAAiB,IAAPuE,EAAY,IAAM,MAAOlE,UAC/CC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,aAAYK,SACf,IAAPkE,GAAY1E,EAAAA,EAAAA,MAACoK,EAAAA,EAAU,CAACjK,UAAU,OAAMK,SAAA,EACjCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAa,GAAI,QACtF7E,EAAAA,EAAAA,KAACoK,EAAAA,EAAQ,CAACC,UAAU,UAAStK,UACzBC,EAAAA,EAAAA,KAAC4J,EAAAA,GAAkB,CAAChI,MAAO0H,EAASO,SAAUtE,KAAKgI,aAAcW,SAAU3I,KAAK0F,aAAalL,SACxFwC,IAAA,IAAC,cAAEyH,EAAa,YAAEC,EAAW,uBAAEC,EAAsB,QAAEC,GAAS5H,EAAA,OAAKhD,EAAAA,EAAAA,MAAA4M,EAAAA,SAAA,CAAApM,SAAA,EAClER,EAAAA,EAAAA,MAAC6K,EAAAA,EAASE,OAAM,CAAClD,QAAQ,QAAQ1H,UAAW,2DAA0DmD,EAAQ,aAAe,IAAK9C,SAAA,EAClIC,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC9K,UAAW,gBAAemD,EAAQ,aAAe,IAAMpD,KAAK,QAASuK,EAAc,CAAES,YAAa,iBAAmBC,UAAQ,IAC1IP,GAAUnK,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAyB,QAElD+J,GAAQH,EAAQpI,OAAS,GAClBlB,EAAAA,EAAAA,KAACoK,EAAAA,EAASO,KAAI,CAACjL,UAAU,iBAAgBK,UACrCC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAiBK,SAC/BkK,EAAYxD,KAAI,CAACmE,EAAYC,KACtB,MAAMzK,EAAQ,CACV0K,iBAAiBF,EAAWG,OAAS,KAEzC,OAAO/K,EAAAA,EAAAA,KAACoK,EAAAA,EAASxC,KAAI,IAAKsC,EAAuBU,EAAY,CAAExK,UAAU0G,QAASA,KAAQvB,KAAKwI,SAASnD,EAAWO,YAAaP,EAAWS,SAAU9F,KAAK0F,aAAaL,EAAWO,YAAY,EAAGpL,UAC7LC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,2CAA0CK,UACrDC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oBAAmBK,SAAE6K,EAAWO,iBAErC,QAIlC,OACH,MAGVtI,GAAQ7C,EAAAA,EAAAA,KAAA,QAAMN,UAAU,mBAAkBK,SAAC,2BAAgC,SAGhFR,EAAAA,EAAAA,MAACoK,EAAAA,EAAU,CAACjK,UAAU,OAAMK,SAAA,EACxBC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAoB,IAAPZ,GAAoB,GAAPA,EAAW,EAAW,IAAPA,EAAY,GAAY,GAAPA,EAAW,EAAW,IAAPA,EAAY,GAAK,GAAI,QACnKjE,EAAAA,EAAAA,KAAC4J,EAAAA,GAAkB,CAACC,SAAUtE,KAAKmH,gBAAiB9K,MAAO0C,EAAUmG,YAAY,OAAM1K,SACtF+C,IAAA,IAAC,cAAEkH,EAAa,YAAEC,EAAW,uBAAEC,EAAsB,QAAEC,GAASrH,EAAA,OAAKvD,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAArK,SAAA,EACvEC,EAAAA,EAAAA,KAACoK,EAAAA,EAASE,OAAM,CAAClD,QAAQ,QAAQ1H,UAAW,2DAA0DmD,EAAQ,aAAe,IAAK9C,UAC9HC,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC9K,UAAW,gBAAemD,EAAQ,aAAe,IAAMpD,KAAK,QAASuK,EAAc,CAAES,YAAa,GAAU,IAAPxG,EAAY,GAAK,WAAkB,IAAPA,GAAoB,GAAPA,EAAW,cAAuB,IAAPA,EAAY,eAAwB,GAAPA,EAAW,UAAY,WAE9OwF,GAAQA,EAAKvI,OAAS,GACvBlB,EAAAA,EAAAA,KAACoK,EAAAA,EAASO,KAAI,CAACjL,UAAU,iBAAgBK,UACrCC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kBAAiBK,SAC/B0J,EAAKhD,KAAI,CAAC4F,EAAMxB,KAAMG,EAAAA,EAAAA,eAACZ,EAAAA,EAASxC,KAAI,CAAClI,UAAU,0EAA0E,YAAU,WAAYwK,EAAuBmC,GAAOZ,IAAKZ,EAAG/D,QAASA,IAAMvB,KAAKwH,YAAYV,KAClNrM,EAAAA,EAAAA,KAAA,OAAKN,UAAU,mCAAkCK,UAC7CC,EAAAA,EAAAA,KAACmO,EAAAA,EAAS,CAACC,WAAY,gEAAiE3O,KAAM,IAAKgB,OAAQ,GAAID,MAAO,GAAI6N,IAAKhC,EAAKY,QAAQqB,WAAWC,QAAQF,IAAKG,SAAS,EAAM1F,IAAK,QAE5LvJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2CAA2CU,MAAO,CAACmG,SAAS,QAAQxG,SAAA,EAC/EC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,iCAAgCK,SAAEsM,EAAKY,QAAQC,gBAC5DlN,EAAAA,EAAAA,KAAA,QAAMN,UAAU,0BAAyBK,SAAE,2BAAkC,IAAPkE,EAAY,iBAAmB,aAAoB,IAAPA,EAAYoI,EAAKjH,GAAG+H,WAAad,EAAKjH,GAAGgI,wBAKrK,KACK,IAGdvK,GAAQ7C,EAAAA,EAAAA,KAAA,QAAMN,UAAU,mBAAkBK,SAAC,2BAAgC,YAMpF,IAAPkE,GACGjE,EAAAA,EAAAA,KAAA,OAAKN,UAAU,WAAUK,UACrBC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,aAAYK,UACvBR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaK,SAAA,EACxBC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAa,EAAG,QACrF7E,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAACC,YAAY,iBAAiBhL,KAAK,KAAKC,UAAU,cAAckC,MAAOqM,EAASpE,SAAUC,GAAKkE,EAAgBlE,EAAE2E,OAAO7M,gBAInJ,OAEV,E,gDChIG,MAAM8M,EAAiBA,CAAClM,EAAMmM,EAAUC,KAC3C,KACI,IAAIC,EAAAA,GAAaC,KAAKC,EAAAA,IAAavM,EAAM,CAAEwM,gBAAgB,IAAS1M,MAAKe,IACrE,MAAM,aAAEX,EAAY,gBAAEuM,EAAe,aAAElM,EAAY,UAAEmM,GAAe7L,EAAIb,KACxEuD,aAAaoJ,QAAQ,kBAAmB,MACpB,KAAhBzM,IACA0M,EAAAA,EAAAA,IAAcH,GACK,IAAfzM,EAAKxB,QAAgB+B,GAAcsM,EAAkBtM,EAAcP,EAAKzB,UAAW4N,EAAUC,MAGjGU,EAAAA,EAAAA,IAAYL,GACZL,GAAU,GACd,IACDhM,OAAMoJ,KACLsD,EAAAA,EAAAA,IAAY,wBACZV,GAAU,EAAM,GAExB,CAAE,MAAO/L,GACL+L,GAAU,EACd,GAISS,EAAoBA,CAACE,EAAQxO,EAAW4N,EAAUC,KAC3D,MAAM3M,EAAM,CACRuN,OAAQzJ,aAAaC,QAAQ,UAC7BuJ,SACAxO,UAAWA,GAET0O,GAAUC,EAAAA,EAAAA,OAChB,IAAIb,EAAAA,GAAaC,KAAKa,EAAAA,IAAW1N,EAAK,CAAE+M,gBAAgB,IAAS1M,MAAKe,IAClE,MAAM,aAAEX,EAAY,gBAAEuM,EAAe,UAAEC,GAAc7L,EAAIb,KACrC,KAAhBE,IACAkN,EAAAA,EAAAA,IAAaH,EAAS,UAAW,GAAGP,KAAaA,EAAY,EAAI,QAAU,6BAC3EN,GAAU,GACP7I,aAAaC,QAAQ,iBAAiBpC,EAAAA,EAAM/B,UAASgO,EAAAA,EAAAA,OAExDlB,OAGAiB,EAAAA,EAAAA,IAAaH,EAAS,QAASR,GAC/BL,GAAU,GACd,IACDhM,OAAMC,KACLiN,EAAAA,EAAAA,GAAcL,GACdb,GAAU,EAAM,GAClB,E,qCC3CN,MAAMmB,UAA+B/K,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KACxCiE,MAAQ,CACD8K,UAAW,GACXC,UAAW,GACXxP,OAAQ,EACRD,MAAO,EACP0P,UAAW,GACXC,SAAS,EACTC,QAAS,GACTC,cAAc,GACpB,KAEDC,gBAAkB1O,IACX2D,KAAKyD,SAAS,CAAEgH,UAAWpO,GAAQ,EACzC,KASD2O,WAAc/N,IACU,SAAbA,EAAKW,KACFoC,KAAKyD,SAAS,CAAEiH,UAAWzN,EAAKW,KAAM1C,OAAQ+B,EAAK/B,OAAQD,MAAOgC,EAAKhC,MAAOwP,UAAWxN,EAAKgO,MAAON,UAAW1N,EAAKiO,aAGrHlL,KAAKyD,SAAS,CAAEiH,UAAWzN,EAAKW,KAAM1C,OAAQ+B,EAAKkO,KAAKjQ,OAAQD,MAAOgC,EAAKkO,KAAKlQ,OACxF,EACN,KAEDmQ,WAAcnO,IAEP,MAAM,SAAEoO,EAAQ,OAAEC,GAAWtL,KAAKjG,OAC5B,QAAE8Q,GAAY7K,KAAKL,MACnB4L,EAAW,IAAIC,SAMrB,IAAI5N,EAAO,EACXoC,KAAKyD,SAAS,CAAEmH,SAAS,IACH,WAAlB3N,EAAKyN,WAA4C,GAAlBzN,EAAKyN,UACjC9M,EAAO,EACgB,SAAlBX,EAAKyN,WAA0C,GAAlBzN,EAAKyN,YAAmBG,EAEnC,SAAlB5N,EAAKyN,WAA0C,GAAlBzN,EAAKyN,WAAoBG,EAEpC,SAAlB5N,EAAKyN,WAA0C,GAAlBzN,EAAKyN,WAAoBG,EAEpC,SAAlB5N,EAAKyN,WAA0C,GAAlBzN,EAAKyN,YAAmBG,IAC1DjN,EAAO,GAFPA,EAAO,EAFPA,EAAO,EAFPA,EAAO,EASd2N,EAASE,OAAO,WAA8B,SAAlBxO,EAAKyN,UAAuBzN,EAAK0N,UAAY1N,EAAKwN,WAC9Ec,EAASE,OAAO,YAA+B,SAAlBxO,EAAKyN,UAAuBzN,EAAKwN,UAAY,IAK1Ec,EAASE,OAAO,UAAWzL,KAAKL,MAAMkL,SAStCU,EAASE,OAAO,cAAexO,EAAK/B,OAAS+B,EAAK/B,OAAS,GAC3DqQ,EAASE,OAAO,aAAcxO,EAAKhC,MAAQgC,EAAKhC,MAAQ,GACxDsQ,EAASE,OAAO,OAAQ7N,GACxB2N,EAASE,OAAO,SAAUjL,aAAaC,QAAQ,WAM3CiL,OAAOb,GAASc,OAAOhQ,OAAS,GAAK+P,OAAOb,GAASc,OAAOhQ,QAAU,KACnEiQ,EAAAA,EAAAA,IAAiBP,EAASxL,GAAIW,aAAaC,QAAQ,UAAW8K,GAAUxO,MAAMK,IACrC,KAA9BA,EAASH,KAAKE,cACXqD,aAAaoJ,QAAQ,kBAAmB,MACJ,WAAhCxM,EAASH,KAAK4O,iBACXhC,EAAAA,EAAAA,IAAc,8BAEdyB,MAEAvB,EAAAA,EAAAA,IAAY,UAEe,KAA9B3M,EAASH,KAAKE,eAClB4M,EAAAA,EAAAA,IAAY,wBAEnB/J,KAAKyD,SAAS,CAAEmH,SAAS,GAAQ,IACrCvN,OAAOC,KACHyM,EAAAA,EAAAA,IAAYzM,EAAM8B,SAClBY,KAAKyD,SAAS,CAAEmH,SAAS,GAAQ,IAI1C5K,KAAKyD,SAAS,CAAEmH,SAAS,EAAOE,cAAc,GAAO,EAEhE,KAEDgB,cAAiBC,GAAU/L,KAAKyD,SAAS,CAAEoH,QAAUkB,EAAM7C,OAAO7M,MAAO2P,UAAU,EAAG,KAAMlB,cAAc,GAAQ,CAzFlHmB,kBAAAA,CAAmBC,GACZ,MAAM,SAAEC,GAAanM,KAAKjG,MACtBmS,EAAUC,UAAYA,GACnBnM,KAAKyD,SAAS,CAAEgH,UAAW0B,EAASC,SAAUlR,OAAQiR,EAASE,YAAapR,MAAOkR,EAASG,WAAY5B,UAAWyB,EAASvO,MAE1I,CAsFAmC,MAAAA,GACO,MAAM,SAAEI,GAAaH,KAAKjG,OACpB,UAAE0Q,EAAS,UAAEC,EAAS,UAAEC,EAAS,OAAEzP,EAAM,MAAED,EAAK,aAAE6P,EAAY,QAAED,EAAO,QAAED,GAAY5K,KAAKL,MAChG,OACO3F,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sCAAsC0F,GAAG,aAAYrF,SAAA,EAC7DR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCK,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,sCAAqCK,UAC7CC,EAAAA,EAAAA,KAACgH,EAAAA,EAAK,CAACvG,OAAQ,GAAID,MAAO,GAAIF,KAAK2G,EAAAA,EAAAA,IAAQ,qDAAsD6B,IAAK,GAAIlD,OAAK,OAEtHrG,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mDAAkDK,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,QAAMN,UAAU,6BAA4BK,SAAC,mBAC7CC,EAAAA,EAAAA,KAAA,KAAGN,UAAU,sBAAqBK,SAAC,oBAGjDC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,OAAMK,UACdR,EAAAA,EAAAA,MAAC+G,EAAAA,EAAG,CAAAvG,SAAA,EACGC,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAACkL,GAAI,EAAGC,GAAI,EAAG3R,MAAO,CAAEgI,UAAW,KAAMrI,UACtCC,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CAAC5M,GAAG,UAAU6M,gBAAiBjC,EAAWkC,qBAAsB3M,KAAK+K,gBAAiB6B,cAAc,EAAOhM,KAAM,gBAAiBoK,WAAYhL,KAAKgL,WAAYL,UAAWA,EAAWkC,QAAQ,EAAM5D,SAAS,OAE7NxO,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAACkL,GAAI,EAAGC,GAAI,EAAEhS,UACXR,EAAAA,EAAAA,MAACgL,EAAAA,EAAK8H,MAAK,CAAC3S,UAAU,eAAcK,SAAA,EAC7BR,EAAAA,EAAAA,MAACgL,EAAAA,EAAK+H,MAAK,CAAAvS,SAAA,CAAC,YAAQC,EAAAA,EAAAA,KAAA,QAAMN,UAAU,cAAaK,SAAC,MAAQ,QAC1DC,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC+H,GAAG,WAAWnN,GAAG,aAAaoN,UAAW,IAAK9S,WAAc2Q,EAAe,aAAe,IAAjC,sBAA0DtH,KAAK,UAAU0J,IAAI,IAAI7Q,MAAOwO,EAASvG,SAAUtE,KAAK8L,gBACtLhB,GAAerQ,EAAAA,EAAAA,KAAA,QAAMN,UAAU,mBAAkBK,SAAEkR,OAAOb,GAASlP,OAAS,EAAI,6CAA+C,4BAAoC,MACpK3B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,6BAA4BK,SAAA,CAAC,KAACR,EAAAA,EAAAA,MAAA,QAAMG,UAAU,wBAAuBK,SAAA,CAAS,OAAPqQ,QAAO,IAAPA,OAAO,EAAPA,EAASlP,OAAO,UAAW,kBAM7I3B,EAAAA,EAAAA,MAACmT,EAAAA,EAAK,CAACtL,QAAQ,UAAU1H,UAAU,wBAAuBK,SAAA,EACnDC,EAAAA,EAAAA,KAAC0S,EAAAA,EAAMC,QAAO,CAACjT,UAAU,2BAA0BK,UAC5CR,EAAAA,EAAAA,MAAA,QAAMG,UAAU,WAAUK,SAAA,EACnBC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,YAAaC,UAAW,SAAU,gBAIvEpG,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oCAAmCK,SAAC,6FAExDR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCK,SAAA,EACxCR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACO,QAAQ,OAAOhC,GAAG,gBAAgB0B,QAASA,IAAMvB,KAAKjG,MAAM+H,OAAO,OAAOtH,SAAA,EAC3EC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,aAAcC,UAAW,SAAU,WAGjEpG,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACzB,GAAG,YAAY1F,UAAW,IAAGyQ,EAAU,UAAY,IAAMrJ,QAASA,IAAMvB,KAAKoL,WAAWpL,KAAKL,OAAOnF,SAAE,gBAI1I,GAgBQmJ,EAAAA,EAAAA,KAbUhE,IAAW,IAAD0N,EAAAC,EAAAC,EAC5B,MAAO,CACAlC,SAA0B,QAAlBgC,EAAE1N,EAAM6N,kBAAU,IAAAH,GAAU,QAAVC,EAAhBD,EAAkBhC,gBAAQ,IAAAiC,GAAW,QAAXC,EAA1BD,EAA4BG,iBAAS,IAAAF,OAArB,EAAhBA,EAAuCG,KACvD,IAGmBpR,IACb,CACAqR,cAAgBC,GAAatR,GAASqR,EAAAA,EAAAA,IAAcC,IACpDC,SAAUA,IAAMvR,GAASwR,EAAAA,EAAAA,UAIvC,EAA4D/L,EAAAA,EAAAA,GAAWyI,I,0BCjKvE,MAAMuD,UAAmBtO,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KAE/BiE,MAAQ,CAAEqO,aAAc,GAAIjP,SAAU,GAAI+G,QAAS,GAAImI,UAAW,GAAIC,WAAW,EAAOrG,UAAW,GAAIsG,WAAY,GAAIC,WAAW,EAAOhG,OAAQ,GAAIM,QAAS,GAAIpL,OAAO,EAAO+Q,eAAe,EAAOC,aAAa,MAAM,KAczNC,UAAY,KACR,MAAM,WAAEvD,EAAU,kBAAEwD,GAAsBxO,KAAKjG,MAC/C0U,IAAAA,KAAU,CACN/N,MAAO,uDACPE,KAAM,UACN8N,kBAAkB,EAClBC,kBAAmB,mBACnBC,iBAAkB,YACnB7R,MAAM8R,IACDA,EAAOC,aAAiC,UAAlBD,EAAOE,UAC7BvO,aAAaoJ,QAAQ,kBAAmB4E,GACxCxD,EAAW,CAAEgE,MAAM,IACnBhP,KAAKjG,MAAMoG,SAAS,oBAAoBK,aAAaC,QAAQ,aACjE,GACF,EACL,KAED+D,kBAAoB,CAACkC,EAAM7G,EAAIoO,IAAcjO,KAAKyD,SAAS,CAAE1E,SAAU2H,EAAMZ,QAASjG,EAAIoO,UAAWA,EAAWC,WAAW,IAAQ,KAEnIe,WAAc5S,IAAY2D,KAAKyD,SAAS,CAAE1E,SAAU1C,EAAOiB,OAAO,GAAQ,EAAE,KAE5E+K,eAAkBhM,GAAU2D,KAAKyD,SAAS,CAAE2E,OAAQ/L,IAAQ,KAE5DoL,YAAepL,GAAU2D,KAAKyD,SAAS,CAAEoE,UAAWxL,IAAQ,KAE5D6S,cAAiB7S,GAAU2D,KAAKyD,SAAS,CAAEiF,QAASrM,IAAQ,KAE5DgN,UAAahN,GAAU2D,KAAKyD,SAAS,CAAE2K,UAAW/R,IAAQ,KAE1D8S,gBAAmBpD,GAAU/L,KAAKyD,SAAS,CAAE1E,SAAUgN,EAAM7C,OAAO7M,QAAQ,KAE5E+S,UAAY,KACR,MAAM,aAAEpB,EAAY,SAAEjP,EAAQ,UAAE8I,EAAS,QAAE/B,EAAO,UAAEmI,EAAS,OAAEoB,EAAM,SAAEC,GAAatP,KAAKL,OACnF,kBAAE6O,EAAiB,cAAEe,EAAa,OAAEjE,GAAWtL,KAAKjG,MAE1D,GADAiG,KAAKqJ,WAAU,GACU,IAArBmF,EAAyB,CFiBAgB,EAAC9S,EAAK0M,EAAUC,MACjD,IAAIC,EAAAA,GAAaC,KAAKkG,EAAAA,IAAa/S,EAAK,CAAE+M,gBAAgB,IAAS1M,MAAKe,IACpE,MAAM,aAAEX,EAAY,aAAEK,EAAY,eAAEqO,GAAmB/N,EAAIb,KAC7B,KAA1BnB,SAASqB,KACT0M,EAAAA,EAAAA,IAAcrM,GACd4L,MAECW,EAAAA,EAAAA,IAAYvM,GACK,WAAlBqO,GACA6D,YAAW,KACPrR,EAAAA,EAAM/B,UAASqT,EAAAA,EAAAA,KAAmB,EAAM,GAAG,GAC5C,MAEPtG,GAAU,EAAM,GAElB,EEAMmG,CA/BY,CACRhO,QAAS,GACT/F,OAAQ,EACRmU,WAAY,EACZC,wBAAyB,sDACzBC,iBAAkB,UAClBC,qBAAsB,UACtBC,qBAAsB,OACtBC,oBAAqB,OACrBC,wBAAyB,GACzBC,aAAc,GACdC,sBAAuB,EACvBC,mBAAoB,oBACpBC,qBAAsB,cACtBC,yBAA0B,yCAC1BC,gBAAiB,sDACjBC,cAAe,GACfC,YAAa,GACbC,sBAAuB,GACvBC,mBAAoB,UACpBC,gBAAiB,GACjBC,mBAAoB,GACpBC,sBAAuB,GACvBC,gBAAiB,gFACjBC,uBAAwB,UACxBC,qBAAsB,UACtBC,oBAAqB,UACrBC,wBAAyB,GACzBC,sBAAuB,GACvBpH,OAAQzJ,aAAaC,QAAQ,WAEN6K,EAAQtL,KAAKqJ,UAC5C,KACK,CACD,GAAgB,IAAZtK,IAAmBA,GAAY2M,OAAO3M,GAAUuS,WAAW,MAAQ5F,OAAO3M,GAAUuS,WAAW,KAI/F,OAHAtR,KAAKyD,SAAS,CAAEnG,OAAO,KACnBoO,OAAO3M,GAAUuS,WAAW,MAAQ5F,OAAO3M,GAAUuS,WAAW,OAAMtR,KAAKyD,SAAS,CAAE4K,eAAe,IACzGrO,KAAKqJ,WAAU,IACR,EAEX,IAAI3M,EAAM,CACNuN,OAAQzJ,aAAaC,QAAQ,UAC7BjF,UAAWgT,EACXoB,WAAY,EACZ3T,QAAS,EACT8C,SAAUA,EACVwS,eAAgB,EAChB9V,OAAQuS,IAA8BuB,EAAciC,QAAQ7V,OAAS4T,EAAciC,QAAQ,GAAG/V,OAAS,MACvGgW,UAAW,GACXC,YAAa,EACbC,UAAW,GAEU,GAArBnD,GACA9R,EAAW,MAAIqC,EFrEE6S,EAAC3U,EAAMmM,EAAUC,KAC9C,KACI,IAAIC,EAAAA,GAAaC,KAAKsI,EAAAA,IAAwB5U,EAAM,CAAEwM,gBAAgB,IAAS1M,MAAKe,IAChF,MAAM,aAAEX,EAAY,gBAAEuM,EAAe,SAAEtM,EAAQ,UAAEuM,GAAe7L,EAAIb,KACpEuD,aAAaoJ,QAAQ,kBAAmB,MAEpB,KAAhBzM,IACA0M,EAAAA,EAAAA,IAAcH,GACG,MAAbC,GAAoC,IAAf1M,EAAKxB,SAC1BoO,EAAAA,EAAAA,IAAc,GAAGF,6BAGF,IAAf1M,EAAKxB,QAAgB2B,GAAYA,EAASzB,QAC1CmO,EAAkB1M,EAAS,GAAIH,EAAKzB,UAAW4N,EAAUC,GAE1C,IAAfpM,EAAKxB,QAAgBkO,GAAaA,EAAUhO,QAC5CmO,EAAkBH,EAAU,GAAI1M,EAAKzB,UAAW4N,EAAUC,MAI9DU,EAAAA,EAAAA,IAAYL,GACZL,GAAU,GACd,IACDhM,OAAMyU,KACL/H,EAAAA,EAAAA,IAAY,wBACZV,GAAU,EAAM,GAExB,CAAE,MAAO/L,GACL+L,GAAU,EACd,GEyCYuI,CAAkBlV,EAAK4O,EAAQtL,KAAKqJ,YAEV,IAArBmF,GACL9R,EAAwB,mBAAIqC,EAC5BoK,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,GAArBmF,GACL9R,EAAe,UAAImL,EACnBnL,EAAY,OAAI2S,EAChB3S,EAAc,SAAI4S,EAClBnG,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,GAArBmF,GACL9R,EAAY,OAAIqC,EAChBrC,EAAqB,gBAAIqC,EACzBoK,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,GAArBmF,GACL9R,EAAY,OAAIqC,EAChBrC,EAAY,OAAIqC,EAChBoK,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,GAArBmF,GACL9R,EAAa,QAAIqC,EACjBrC,EAAoB,eAAIoJ,EACxBpJ,EAAsB,iBAAIuR,EAC1B9E,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,IAArBmF,GAA2C,IAAhBR,GAChCtR,EAAqB,gBAAIqC,EACzBoK,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAEP,GAArBmF,GACL9R,EAAoB,eAAI,EACxBA,EAAoB,eAAI,EACxByM,EAAezM,EAAK4O,EAAQtL,KAAKqJ,YAGjCF,EAAezM,EAAK4O,EAAQtL,KAAKqJ,UAEzC,EACH,CA/ID0I,iBAAAA,GACI,MAAM,cAAExC,GAAkBvP,KAAKjG,MAC3BwV,EAAciC,SAAWjC,EAAciC,QAAQ7V,QAAQqE,KAAKyD,SAAS,CAAEuK,aAAcuB,EAAciC,QAAQ,GAAG/V,OAAQ0S,WAAYoB,EAAciC,QAAQ,GAAGQ,UACnK,CAEA/F,kBAAAA,CAAmBC,EAAW+F,GAC1B,MAAM,cAAE1C,GAAkBvP,KAAKjG,MAC3BmS,EAAUqD,cAAciC,SAAWjC,EAAciC,SAC7CjC,EAAciC,SAAWjC,EAAciC,QAAQ7V,QAAQqE,KAAKyD,SAAS,CAAEuK,aAAcuB,EAAciC,QAAQ,GAAG/V,OAAQ0S,WAAYoB,EAAciC,QAAQ,GAAGQ,UAEvK,CAuIAjS,MAAAA,GACI,MAAM,cAAEwP,EAAa,kBAAEf,GAAsBxO,KAAKjG,OAC5C,WAAEoU,EAAU,MAAE7Q,EAAK,aAAE0Q,EAAY,SAAEjP,EAAQ,QAAE2J,EAAO,UAAE0F,EAAS,cAAEC,EAAa,aAAEC,GAAiBtO,KAAKL,MAC5G,OAAOlF,EAAAA,EAAAA,KAACyX,EAAAA,EAAI9R,UAAS,CAAC+R,iBAAkB5C,EAAciC,SAAWjC,EAAciC,QAAQ7V,OAAS,QAAQ4T,EAAciC,QAAQ,GAAG/V,SAAW,IAAIjB,SACtH,GAArBgU,GAAyB/T,EAAAA,EAAAA,KAAAmM,EAAAA,SAAA,CAAApM,SACL,MAAhB8T,GACG7T,EAAAA,EAAAA,KAAC+E,EAAAA,QAAU,CAACS,YAAY,EAAM6B,OAAQ9B,KAAKjG,MAAMqY,WAAY9G,OAAQtL,KAAKjG,MAAMuR,OAAQpL,WAAcmS,GAAKrS,KAAKyD,SAAS,CAAC6K,aAAc+D,OAExI5X,EAAAA,EAAAA,KAAC6X,EAAAA,QAAgB,CAACrS,YAAY,EAAMqO,aAAcA,EAAcpO,WAAYA,IAAMF,KAAKyD,SAAS,CAAC6K,aAAa,OAAQhD,OAAQtL,KAAKjG,MAAMuR,YAK7ItR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sCAAqCK,SAAA,EAChDR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCK,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,sCAAqCK,UAChDC,EAAAA,EAAAA,KAACgH,EAAAA,EAAK,CAACvG,OAAQ,GAAID,MAAO,GAAIF,KAAK2G,EAAAA,EAAAA,IAAQ,oCAAmCC,EAAAA,EAAAA,IAAiB6M,UAA2BjL,KAAK3B,EAAAA,EAAAA,IAAiB4M,GAAoBnO,OAAK,OAE7KrG,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mDAAkDK,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMN,UAAU,6BAA4BK,SAAE+U,EAAc/L,QAC5DxJ,EAAAA,EAAAA,MAAA,KAAGG,UAAU,sBAAqBK,SAAA,CAAC,YAAU+U,EAAc/L,KAAK,KAAC/I,EAAAA,EAAAA,KAAA,QAAMN,UAAU,GAAEK,SAAE2T,cAI7FnU,EAAAA,EAAAA,MAACuY,EAAAA,EAAG,CAAC1Q,QAAQ,YAAY1H,UAAU,qBAAoBK,SAAA,CAClD+U,EAAciC,SAAWjC,EAAciC,QAAQ7V,OAAS,EAAI4T,EAAciC,QAAQtQ,KAAI,CAACzF,EAAQ2F,KAC5F3G,EAAAA,EAAAA,KAAC8X,EAAAA,EAAIlQ,KAAI,CAAA7H,UACLC,EAAAA,EAAAA,KAAC8X,EAAAA,EAAIjS,KAAI,CAACkS,SAAU,QAAQ/W,EAAOA,SAAU8F,QAASA,IAAMvB,KAAKyD,SAAS,CAAEuK,aAAcvS,EAAOA,OAAQsD,SAAU,GAAIoP,WAAY1S,EAAOuW,SAAU1U,OAAO,EAAO+Q,eAAe,IAAS7T,SACrLiB,EAAOkD,YAFD,QAAQlD,EAAOA,YAK5B,MAzLPD,EA0LgBgT,EAzLZ,CAAC,GAAI,EAAG,EAAG,GACf7Q,SAASnC,IAyLJf,EAAAA,EAAAA,KAAC8X,EAAAA,EAAIlQ,KAAI,CAAA7H,UACLC,EAAAA,EAAAA,KAAC8X,EAAAA,EAAIjS,KAAI,CAACnG,UAAU,WAAWoH,QAASA,IAAMvB,KAAKuO,YAAY/T,SAAC,WAElE,UAEVC,EAAAA,EAAAA,KAACyX,EAAAA,EAAIO,QAAO,CAAAjY,SACc,IAArBgU,GACG/T,EAAAA,EAAAA,KAAAmM,EAAAA,SAAA,CAAApM,UACIC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,aAAYK,UACvBR,EAAAA,EAAAA,MAAA,KAAAQ,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kFACRC,EAAAA,EAAAA,KAAA,KAAGiY,KAAM,GAAGC,EAAAA,QAAanS,aAAaC,QAAQ,0BAA2BC,MAAM,KAAIlG,SAAE,GAAGmY,EAAAA,QAAanS,aAAaC,QAAQ,mCAMtI8O,EAAciC,SAAWjC,EAAciC,QAAQ7V,OAAS4T,EAAciC,QAAQtQ,KAAI,CAACzF,EAAQ2F,KACvF3G,EAAAA,EAAAA,KAACyX,EAAAA,EAAIU,KAAI,CAACJ,SAAU,QAAQ/W,EAAOA,SAASjB,SAClB,GAArBgU,GACG/T,EAAAA,EAAAA,KAACqJ,EAAM,CAACU,kBAAmBxE,KAAKwE,kBAAmBlH,MAAOA,IACnC,GAArBkR,GACE/T,EAAAA,EAAAA,KAAC0L,EAAQ,CAACO,KAAM3H,EAAU4H,aAAc3G,KAAKiP,WAAY3R,MAAOA,IACzC,GAArBkR,GACE/T,EAAAA,EAAAA,KAACwM,EAAO,CAACvI,IAAKsP,EAAc3G,cAAerH,KAAKiP,WAAYxH,YAAazH,KAAKyH,YAAaY,eAAgBrI,KAAKqI,eAAgBK,QAASA,EAASD,gBAAiBzI,KAAKkP,cAAe5R,MAAOA,EAAOyB,SAAUA,KAE/M/E,EAAAA,EAAAA,MAACoK,EAAAA,EAAU,CAACjK,UAAU,OAAMK,SAAA,EACxBC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWrB,KAAI,CAAC5I,UAAU,mBAAkBK,UAACC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,MAAMtB,EAAAA,EAAAA,IAAa7D,EAAOA,OAAQ+S,QACjG/T,EAAAA,EAAAA,KAACuK,EAAAA,EAAKC,QAAO,CAAC9K,UAAW,gBAAemD,EAAQ,aAAe,IAAMpD,KAAK,KAAKgL,YAAa,SAASzJ,EAAOuW,WAAY3V,MAAO0C,EAAUuF,SAAUtE,KAAKmP,gBAAiBhK,UAAQ,IAChL7H,GAAQ7C,EAAAA,EAAAA,KAAA,QAAMN,UAAU,mBAAkBK,SAAG6T,EAA2C,sBAA3B,2BAA2D,YAK3I,QAGdrU,EAAAA,EAAAA,MAACmT,EAAAA,EAAK,CAACtL,QAAQ,UAAU1H,UAAU,wBAAuBK,SAAA,EACtDC,EAAAA,EAAAA,KAAC0S,EAAAA,EAAMC,QAAO,CAACjT,UAAU,2BAA0BK,UAC/CR,EAAAA,EAAAA,MAAA,QAAMG,UAAU,WAAUK,SAAA,EACtBC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,YAAaC,UAAW,SAAU,gBAIjEpG,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oCAAmCK,SAAC,6FAErDR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCK,SAAA,EAC3CR,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACO,QAAQ,OAAON,QAASA,IAAMvB,KAAKjG,MAAMqY,WAAW,OAAO5X,SAAA,EAC/DC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,aAAcC,UAAW,SAAU,WAG9DpG,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACO,QAAQ,UAAU1H,UAAW,IAAGiU,EAAY,UAAY,IAAM7M,QAASvB,KAAKoP,UAAU5U,SAAC,wBA9OhGgB,KAoPnB,EAGJ,SAAeuG,EAAAA,EAAAA,GAAWgM,G,gBCrP1B,MAAM8E,GAAU7V,IAA+D,IAA9D,SAAEwV,EAAQ,SAAEM,EAAQ,UAAEC,EAAS,MAAEC,EAAK,eAAEC,GAAgBjW,EACrE,OAAOvC,EAAAA,EAAAA,KAAC8X,EAAAA,EAAIlQ,KAAI,CAAClI,UAAU,UAASK,UAChCR,EAAAA,EAAAA,MAACuY,EAAAA,EAAIjS,KAAI,CAACkS,SAAUA,EAAUrY,UAAW,2BAA2BK,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OAAKN,UAAW,iEAAiE2Y,IAAWtY,SACvFyY,GACGxY,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,UACrBmS,IAETC,MAEE,EAGTE,GAAc,CAChB,GAAI,CACA1B,QAAS,CAAC,CACN,SAAY,SACZ,OAAU,GACV,SAAY,YACZ,KAAQ,MAEZ,CACI,SAAY,UACZ,OAAU,GACV,SAAY,aACZ,KAAQ,YAEZhO,KAAM,YACN5C,KAAM,sBAEV,GAAI,CACA4Q,QAAS,CACL,CACI,SAAY,UACZ,OAAU,GACV,SAAY,YACZ,KAAQ,WAEZ,CACI,SAAY,SACZ,OAAU,GACV,SAAY,WACZ,KAAQ,MAEZ,CACI,SAAY,WACZ,OAAU,GACV,SAAY,WACZ,KAAQ,SAGhBhO,KAAM,SACN5C,KAAM,UAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,UACZ,OAAU,EACV,SAAY,aACZ,KAAQ,WAEZ,CACI,SAAY,SACZ,OAAU,EACV,SAAY,YACZ,KAAQ,OAEZhO,KAAM,UACN5C,KAAM,WAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,OACZ,OAAU,EACV,SAAY,OACZ,KAAQ,SAEZhO,KAAM,WACN5C,KAAM,YAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,SACZ,OAAU,GACV,SAAY,SACZ,KAAQ,UAEZhO,KAAM,iBACN5C,KAAM,UAEV,GAAI,CACA4Q,QAAS,CAAC,CACN,SAAY,kBACZ,OAAU,EACV,SAAY,oBAEhBhO,KAAM,SACN5C,KAAM,gBAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,SACZ,OAAU,EACV,SAAY,YACZ,KAAQ,MAEZ,CACI,SAAY,aACZ,OAAU,GACV,SAAY,aACZ,KAAQ,SAEZhO,KAAM,YACN5C,KAAM,aAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,cACZ,OAAU,EACV,SAAY,cACZ,KAAQ,MAEZ,CACI,SAAY,SACZ,OAAU,GACV,SAAY,SACZ,KAAQ,MAEZ,CACI,SAAY,YACZ,OAAU,GACV,SAAY,YACZ,KAAQ,QAEZ,CACI,SAAY,WACZ,OAAU,EACV,SAAY,WACZ,KAAQ,QAEZ,CACI,SAAY,WACZ,OAAU,GACV,SAAY,WACZ,KAAQ,UAGZhO,KAAM,UACN5C,KAAM,WAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,UACZ,OAAU,EACV,SAAY,aACZ,KAAQ,WAEZ,CACI,SAAY,SACZ,OAAU,EACV,SAAY,YACZ,KAAQ,OAEZhO,KAAM,SACN5C,KAAM,UAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,UACZ,OAAU,EACV,SAAY,aACZ,KAAQ,WAEZ,CACI,SAAY,SACZ,OAAU,EACV,SAAY,YACZ,KAAQ,OAEZhO,KAAM,QACN5C,KAAM,SAEV,GAAI,CACA4Q,QAAS,CAAC,CACN,SAAY,cACZ,OAAU,GACV,SAAY,iBACZ,KAAQ,SAEZhO,KAAM,iBACN5C,KAAM,UAEV,EAAG,CACC4Q,QAAS,CAAC,CACN,SAAY,SACZ,OAAU,GACV,SAAY,SACZ,KAAQ,SAEZhO,KAAM,SACN5C,KAAM,kBAKd,MAAMuS,WAAwB1T,EAAAA,UAAUC,WAAAA,GAAA,SAAAhE,WAAA,KACpCiE,MAAQ,CAAEyT,UAAU,EAAM7D,cAAe,KAAM8D,UAAW,QAASC,aAAa,EAAO9E,kBAAmB,KAAMyE,eAAgB,GAAIM,WAAW,EAAOC,YAAa,GAAK,KAmBxKxI,WAActO,IACV,MAAM,eAAE+W,GAAmBzT,KAAKjG,OAC1B2Z,EAAAA,EAAAA,KAIF,EAEP,KAEDC,YAAc,KACV,MAAM,eAAEF,GAAmBzT,KAAKjG,OAChC6Z,EAAAA,EAAAA,IAAe,CAAEC,UAAW,mBAAoB9W,MAAKe,IACjD2V,GAAe,KAAQzT,KAAKjG,MAAMoG,SAAS,QAAQ,GAAG,GAEzD,EACJ,KAED+C,gBAAmBrD,IACfG,KAAKyD,SAAS,CAAE8L,cAAe2D,GAAYrT,GAAKwT,UAAW,MAAO7E,kBAAmB3O,EAAIoT,eAAgB,IAAIjT,KAAKL,MAAMsT,eAAgB,mBAAoB,IAAMjT,KAAKgL,WAAW,CAAE8I,eAAgBjU,KAAM,EAC7M,KAEDvF,QAAUyR,GAAS/L,KAAKyD,SAAS,CAAE8P,WAAYvT,KAAKL,MAAM4T,YAAY,KAEtEnB,WAAcC,IACVrS,KAAKyD,SAAS,CAAE4P,UAAWhB,EAAK9C,cAAe,GAAI0D,eAAgB,IAAK,EAC3E,KACD1Q,WAAa,KACTvC,KAAKyD,SAAS,CAAE4P,UAAW,OAAQ,EACtC,KAEDU,gBAAkB,KAMdrE,YAAW,KAAQ1P,KAAKjG,MAAMoG,SAAS,QAAQ,GAAI,IAAK,CAC3D,CAxDD4R,iBAAAA,GACI,MAAM,YAAEiC,EAAW,SAAEC,EAAQ,SAAE9T,GAAaH,KAAKjG,MACrC,OAARka,QAAQ,IAARA,GAAAA,EAAUC,cAAclU,KAAKyD,SAAS,CAAE4P,UAAW,QACvDW,GACJ,CAGA/H,kBAAAA,CAAmBC,GAAY,IAADiI,EAAAC,EACtBlI,EAAUmI,aAAerU,KAAKjG,MAAMsa,cAAoC,QAArBF,EAAAjI,EAAUmI,mBAAW,IAAAF,OAAA,EAArBA,EAAuBxY,UAAgC,QAA1ByY,EAAIpU,KAAKjG,MAAMsa,mBAAW,IAAAD,OAAA,EAAtBA,EAAwBzY,UAC5GqE,KAAKjG,MAAM+T,yBACX9N,KAAKjG,MAAMoG,SAAS,uBAAuBK,aAAaC,QAAQ,aAExE,CA8CAV,MAAAA,GACI,MAAM,cAAEwP,EAAa,kBAAEf,EAAiB,UAAE6E,EAAS,eAAEJ,EAAc,UAAEM,GAAcvT,KAAKL,MACxF,OAAOlF,EAAAA,EAAAA,KAAA,OAAKN,UAAU,yHAAwHK,UAC1IC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAACjG,UAAU,YAAYkG,OAAK,EAAA7F,UAClCC,EAAAA,EAAAA,KAACyX,EAAAA,EAAI9R,UAAS,CAAC+R,iBAAiB,QAAQmC,UAAWjB,EAAU7Y,UACzDR,EAAAA,EAAAA,MAAC8G,EAAAA,EAAI,CAAAtG,SAAA,EACDR,EAAAA,EAAAA,MAAC8G,EAAAA,EAAKpG,OAAM,CAACP,UAAU,gCAA+BK,SAAA,EAClDC,EAAAA,EAAAA,KAAA,WACAT,EAAAA,EAAAA,MAACuY,EAAAA,EAAG,CAAC1Q,QAAQ,YAAY1H,UAAU,0CAAyCK,SAAA,EACxEC,EAAAA,EAAAA,KAACoY,GAAO,CAACL,SAAS,QAAQM,SAAU,2BAAuC,OAAbO,GAAmC,OAAbA,GAAmC,OAAbA,EAAqB,aAAe,WAAaN,UAAU,IAAIC,MAAM,sBAAsBC,eAA8B,OAAbI,GAAmC,OAAbA,GAAmC,OAAbA,KAClQ5Y,EAAAA,EAAAA,KAACoY,GAAO,CAACL,SAAS,MAAMM,SAAuB,OAAbO,GAAmC,OAAbA,EAAqB,aAAe,UAAWN,UAAU,IAAIC,MAAM,iBAAiBC,eAA6B,OAAbI,GAAmC,OAAbA,KAClL5Y,EAAAA,EAAAA,KAACoY,GAAO,CAACL,SAAS,MAAMM,SAAuB,OAAbO,EAAqB,aAAe,UAAWN,UAAU,IAAIC,MAAM,cAAcC,eAA6B,OAAbI,KACjI7S,aAAaC,QAAQ,kBAAmBhG,EAAAA,EAAAA,KAACoY,GAAO,CAACL,SAAS,MAAMM,SAAuB,IAAbO,EAAkB,aAAe,UAAWN,UAAU,IAAIC,MAAM,eAAeC,eAA6B,IAAbI,QAG/K5Y,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACpH,KAAK,KAAK2H,QAAQ,QAAQ1H,UAAU,2BAA2BoH,QAASvB,KAAK2T,YAAYnZ,SAAC,aAEtGC,EAAAA,EAAAA,KAACqG,EAAAA,EAAKlG,KAAI,CAAAJ,UACNR,EAAAA,EAAAA,MAACkY,EAAAA,EAAIO,QAAO,CAACtY,UAAU,gBAAeK,SAAA,EAClCC,EAAAA,EAAAA,KAACyX,EAAAA,EAAIU,KAAI,CAACJ,SAAS,QAAOhY,SACR,SAAb6Y,GAAuB5Y,EAAAA,EAAAA,KAAC0H,EAAa,CAACI,WAAYvC,KAAKuC,aAAiB,QAE7E9H,EAAAA,EAAAA,KAACyX,EAAAA,EAAIU,KAAI,CAACJ,SAAS,MAAKhY,SACN,OAAb6Y,GAAqB5Y,EAAAA,EAAAA,KAACuI,EAAa,CAACE,gBAAiBlD,KAAKkD,kBAAsB,QAErFzI,EAAAA,EAAAA,KAACyX,EAAAA,EAAIU,KAAI,CAACJ,SAAS,MAAKhY,SACN,OAAb6Y,GAAqB9D,GAClB9U,EAAAA,EAAAA,KAACsT,EAAU,CAACwB,cAAeA,EAAef,kBAAmBA,EAAmBxD,WAAYhL,KAAKgL,WAAYoH,WAAYpS,KAAKoS,WAAY9G,OAAQA,IAAMtL,KAAKyD,SAAS,CAAEwP,eAAgB,IAAIA,EAAgB,gBAAiB,IAAMjT,KAAK+T,sBAC/N,QAEjBtZ,EAAAA,EAAAA,KAACyX,EAAAA,EAAIU,KAAI,CAACJ,SAAS,MAAKhY,SACN,OAAb6Y,GAAqB5Y,EAAAA,EAAAA,KAAC8Z,GAAAA,QAAW,CAACvJ,WAAYhL,KAAKgL,WAAYwJ,aAAa,IAAW,aAIpG/Z,EAAAA,EAAAA,KAACqG,EAAAA,EAAK2T,OAAM,CAACta,UAAU,uBAAsBK,UACzCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAACC,MAAM,KAAI7F,UACjBC,EAAAA,EAAAA,KAACsG,EAAAA,EAAG,CAAC5G,UAAU,yBAAwBK,UACnCR,EAAAA,EAAAA,MAACqH,EAAAA,EAAG,CAACmL,GAAI,EAAGrS,UAAU,mCAAkCK,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACO,QAAQ,OAAO1H,UAAU,gCAAgCoH,QAASvB,KAAK2T,YAAYnZ,SAAC,YAEhGR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BK,SAAA,EACrCC,EAAAA,EAAAA,KAAA,QAAMN,UAAU,wBAAuBK,SAAC,kFACxCR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBK,SAAA,EAC/BR,EAAAA,EAAAA,MAACsG,EAAAA,GAAI,CAACnG,UAAU,sCAAsCoG,GAAImU,EAAAA,IAAaxL,OAAO,SAASxI,MAAM,YAAWlG,SAAA,EACpGC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,QAASC,UAAW,SAAU,gBAGzD7G,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CAACO,QAAQ,8BAA8B1H,UAAU,OAAOoH,QAASA,KAAQvB,KAAKyD,SAAS,CAAE8P,WAAW,GAAO,EAAG/Y,SAAA,EACjHC,EAAAA,EAAAA,KAACkG,EAAAA,GAAe,CAACC,KAAM,cAAeC,UAAW,SAAU,iCASvFpG,EAAAA,EAAAA,KAACka,EAAAA,EAAY,CAACva,KAAMmZ,EAAWvY,KAAM,wDAAyDV,QAAS0F,KAAK1F,kBAKhI,EAGJ,MAgBA,IAAeqJ,EAAAA,EAAAA,KAhBUhE,IAAW,IAADiV,EAAAC,EAAAC,EAC/B,MAAO,CACHb,SAA6B,QAArBW,EAAEjV,EAAMoV,qBAAa,IAAAH,GAAe,QAAfC,EAAnBD,EAAqBI,qBAAa,IAAAH,OAAf,EAAnBA,EAAoCI,WAC9CZ,YAA2B,QAAhBS,EAAEnV,EAAMuV,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBT,YAChC,IAGsB/X,IAChB,CACH0X,YAAcpG,GAAatR,GAAS6Y,EAAAA,EAAAA,IAAavH,IACjDD,cAAeA,IAAMrR,GAASqR,EAAAA,EAAAA,OAC9B8F,eAAiBrK,GAAa9M,GAASgO,EAAAA,EAAAA,IAAyBlB,IAChE0E,uBAAwBA,IAAMxR,GAASwR,EAAAA,EAAAA,UAI/C,EAA4D/L,EAAAA,EAAAA,GAAWoR,I","sources":["app/Layout/Main/CommonComponents/Support/SupportVideo.js","app/Layout/Main/Feeds/AddFeed/utils.js","app/Layout/Main/Feeds/ManualUpload/ManualHead.js","app/Layout/Main/Home/OnBoardingSteps/ChooseGallery.js","app/Layout/Main/Home/OnBoardingSteps/ChooseNetwork.js","app/Layout/Main/Home/OnBoardingSteps/AddContent/FeedNetworks/Google.js","app/Layout/Main/Home/OnBoardingSteps/AddContent/FeedNetworks/Facebook.js","app/Layout/Main/Home/OnBoardingSteps/AddContent/FeedNetworks/Youtube.js","actions/onBoradingAction.js","app/Layout/Main/Feeds/ManualUpload/OnBoardingManualUpload.js","app/Layout/Main/Home/OnBoardingSteps/AddContent/index.js","app/Layout/Main/Home/OnBoardingSteps/index.js"],"sourcesContent":["import { Modal, Button } from \"react-bootstrap\"\nconst SupportVideo = (props) => {\n       return <Modal size='xl' className=\"video_modal rounded-0\" show={props.show} onHide={props.onClose} centered>\n              <Modal.Header className=\"btn-close-light\" closeButton>\n              </Modal.Header>\n              <Modal.Body className=\"p-0\">\n                     <div className=\"position-relative\" style={{ paddingBottom: '55%' }}>\n                            <div className=\"position-absolute start-1 top-0 video_play w-100 h-100\">\n                                   <iframe className=\"w-100 h-100\" src={props.link} width=\"640\" height=\"355\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n                            </div>\n                     </div>\n              </Modal.Body>\n       </Modal>\n}\n\nexport default SupportVideo","import { SET_AUTOCOMPLETE_HANDLE, SET_AUTOCOMPLETE_LIST, SET_ERROR_MESSAGE_ACITON, SET_FEED_OBJECT, YOUTUBE_AUTOCOMPLETE } from \"../../../../../actions/addFeedActions\";\nimport { AUTOCOMPLETE } from \"../../../../../actions/manageFeedsAction\";\nimport store from \"../../../../../store\";\nimport { isPersInstaAcc } from \"../../../../../utils\";\n\nexport const GET_CHILD_ACCOUNTS = (accounts, networkId, filter = \"\") => {\n    if (networkId == 4 || networkId == 3 || (networkId == 18 && !isPersInstaAcc(parseInt(filter)))) {\n        return accounts?.reduce((acc, account) => {\n            if (account.ConnectedAccounts.child) {\n                acc = [...acc, ...account.ConnectedAccounts.child];\n            }\n            return acc;\n        }, []) || [];\n    }\n    return accounts\n}\n\nexport const AUTOCOMPLETE_INPUT = (value, networkId, filter = \"\") => (dispatch) => {\n    switch (parseInt(networkId)) {\n        case 3:\n            dispatch(FB_AUTOCOMPLETE(value))\n            break;\n\n        case 1:\n            dispatch(TWITTER_AUTOCOMPLETE(value))\n            break;\n\n        case 7:\n            dispatch(YT_CHANNEL_AUTOCOMPLETE(value, filter))\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst FB_AUTOCOMPLETE = (value) => (dispatch) => {\n    const obj = { networkId: 3, handle: value, filterType: 8, showHandle: false }\n    AUTOCOMPLETE(obj).then(({ data }) => {\n        dispatch(SET_AUTOCOMPLETE_HANDLE(data.responseCode === 200 ? data.response.data : []))\n    }).catch((error) => {\n        dispatch(SET_AUTOCOMPLETE_HANDLE([]))\n    })\n}\n\nconst TWITTER_AUTOCOMPLETE = (value) => (dispatch) => {\n    const obj = { networkId: 1, handle: value }\n    AUTOCOMPLETE(obj).then(({ data }) => {\n        if (data.responseCode === 200) {\n            const { responseData, responseDataUserList } = data;\n            dispatch(SET_AUTOCOMPLETE_HANDLE(responseData.data));\n            dispatch(SET_AUTOCOMPLETE_LIST(responseDataUserList?.data));\n        } else {\n            dispatch(SET_AUTOCOMPLETE_HANDLE([]));\n            dispatch(SET_AUTOCOMPLETE_LIST([]));\n        }\n    });\n}\n\nconst YT_CHANNEL_AUTOCOMPLETE = (value, filter) => (dispatch) => {\n    if ([11, 1, 75].includes(parseInt(filter))) {\n        const type = filter == 11 ? \"playlist\" : \"channel\"\n        YOUTUBE_AUTOCOMPLETE(value, type).then(res => {\n            const { data, status } = res\n            dispatch(SET_AUTOCOMPLETE_HANDLE(status === 200 ? data.items : []))\n        })\n    }\n    else return\n}\n\nexport const RESET_AUTOCOMPLETE = () => (dispatch) => {\n    dispatch(SET_AUTOCOMPLETE_HANDLE([]));\n    dispatch(SET_AUTOCOMPLETE_LIST([]));\n}\n\nexport const getFilterName = (filter) => {\n    const { networkTab } = store.getState().addFeedReducer.networkDetails\n    if (!networkTab) return\n    return networkTab.find(tab => tab.filter == filter)?.feedName || \"\";\n}\n\n\nexport const getFeedAlertText = (networkId) => (dispatch, getState) => {\n    const { filter } = getState().addFeedReducer.feedObj\n\n    switch (parseInt(filter)) {\n        case 26:\n            return \"Instagram only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.\"\n\n        case 23:\n            return \"Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.\"\n\n        case 34:\n            return \"Initially stories from the last 24 hours will be shown after which all the upcoming stories will be aggregated.\"\n\n        case 24:\n            return \"You will only get upcoming posts after creating mentions feed.\"\n\n        case 25:\n            return \"Initially the latest 32 tagged posts on Instagram will be aggregated after which all the upcoming tagged posts will be aggregated.\"\n\n        case 66:\n            return \"Initially 25 videos will be aggregated through handle after which all the upcoming videos will be aggregated.\"\n\n        case 1:\n            return networkId == 1 ? \"Initially the latest 100 posts on the Twitter handle will be aggregated after which all the upcoming posts will be aggregated.\" : \"Initially 32 posts uploaded on personal accounts will be aggregated after which all the upcoming posts will be aggregated.\"\n\n        case 2:\n            return \"Initially hashtag posts from the last 30 days will be aggregated after which all the upcoming posts will be aggregated.\"\n\n        case 7:\n            return \"Initially mentions of the last 7 days will be aggregated after which all the upcoming mentions will be aggregated.\"\n\n        case 33:\n            return \"Initially the latest 5 user reviews of Place will be aggregated after which all the upcoming reviews will be aggregated.\"\n\n        case 29:\n            return \"Initially latest 50 user reviews will be aggregated after which all the upcoming reviews will be aggregated.\"\n\n        case 3:\n        case 4:\n        case 5:\n        default:\n            return \"\"\n    }\n}\n\nexport const inputValidationByNetwork = (networkId) => (dispatch, getState) => {\n    const { feedText, filter, field33placeId, feed33, field33placeName } = getState().addFeedReducer.feedObj\n    let errorObj = { show: false, message: \"\" };\n    switch (parseInt(networkId)) {\n        case 18:\n            if ([26, 23].includes(parseInt(filter))) {\n                if (feedText == \"\" || !feedText) errorObj = { show: true, message: \"This field is required\" }\n                if (feedText[feedText.length - 1] == '@' || feedText[feedText.length - 1] == \"#\" || feedText.includes(\"@\") || feedText.includes(\"#\")) errorObj = { show: true, message: \"@ and # not allowed\" }\n            }\n            break;\n\n        case 28:\n            if (feedText == \"\" || !feedText) errorObj = { show: true, message: \"This field is required\" }\n            break;\n\n        case 1:\n            if (feedText == \"\" || !feedText) errorObj = { show: true, message: \"This field is required\" }\n            if (feedText[feedText.length - 1] == '@' || feedText[feedText.length - 1] == \"#\" || feedText.includes(\"@\") || feedText.includes(\"#\")) errorObj = { show: true, message: \"@ and # not allowed\" }\n            break;\n\n        case 4:\n            if (filter == 29) return\n            else if (!feed33 || !field33placeId || !field33placeName) errorObj = { show: true, message: \"This field is required\" }\n            break;\n        case 5:\n        case 7:\n        case 6:\n        case 8:\n        case 23:\n        case 3:\n            if (networkId == 3 && (filter == 1 || filter == 62 || filter == 55)) return\n            if (feedText == \"\" || !feedText) errorObj = { show: true, message: \"This field is required\" }\n            // if (feedText[feedText.length - 1] == '@' || feedText[feedText.length - 1] == \"#\" || feedText.includes(\"@\") || feedText.includes(\"#\")) errorObj = { show: true, message: \"@ and # not allowed\" }\n            break;\n\n        default:\n            break;\n    }\n\n    if (errorObj.show) {\n        dispatch(SET_ERROR_MESSAGE_ACITON(errorObj))\n        return true\n    }\n    return false\n}\n\nexport const getInputIcon = (filterId, networkId) => {\n    switch (parseInt(filterId)) {\n        case 26:\n        case 72:\n        case 2:\n            return \"hashtag\"\n\n        case 71:\n        case 23:\n        case 1:\n        case 7:\n        case 75:\n        case 3:\n        case 4:\n            return (networkId === 7 && filterId === 4) ? \"text\" : \"at\"\n\n        case 70:\n            return \"link\"\n        case 8:\n            return \"user\"\n        case 5:\n            return \"magnifying-glass\"\n        case 33:\n            return \"globe\"\n        case 12:\n        case 56:\n            return \"flag\"\n        case 11:\n            return \"list\"\n        case 67:\n            return \"location-dot\"\n\n        default:\n            return\n    }\n}","import { Component } from \"react\";\nimport { Alert, Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\nimport { generateRandomArray, GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../../utils\";\nimport { getCustomNetwork } from \"../../../../../actions/appsMoreAction\";\nimport withRouter from \"../../../../routes/WithRouter\";\n\nclass ManualHead extends Component{\n    state={\n        networkList:[{id:18}, {id:28}],\n        loader:false\n    }\n    \n    // componentDidMount(){\n    //     getCustomNetwork().then(response => {\n    //         const {responseData} = response.data\n    //         if(responseData?.length > 0) this.setState({networkList:responseData, loader:false})\n    //     })\n    // }\n\n    render(){\n        const {loader, networkList} = this.state\n        const { onBoarding, setNetwork, navigate } = this.props\n        return <div className='d-flex flex-column flex-column-fluid w-100 py-5 manual_upload_'>\n            {!onBoarding ? <div className=\"subheader\">\n                <Container fluid>\n                    <div className='d-flex align-items-center'>\n                        <Link to={`/content/addfeed/${localStorage.getItem('wallId')}`} className=\"btn btn-icon bg-gray-100 btn-sm me-2\" title='Upload Feed'><FontAwesomeIcon icon={'angle-left'} iconClass={'me-0'}/></Link>\n                        <h1 className=\"me-2 h4 my-3\">Upload Feed</h1>\n                    </div>\n                </Container>\n            </div> : null}\n            <Container fluid>\n                <Card className={`${onBoarding?'shadow-none border-0':''}`}>\n                    <Card.Body className='f-center flex-column manual_upload_card'>\n                        <h3 className='text-center mb-3'>Manual Uploads</h3>\n                        <p className='text-center mb-8'>Upload content directly to the feed via device or by adding a post URL from Instagram or TikTok </p>\n                        <div className='f-center flex-wrap w-100 flex-column'>\n                            {!loader ? \n                            <Row className='w-100' style={{maxWidth:600}}>\n                                <Col>\n                                    <Button onClick={() => onBoarding ? setNetwork(0) : navigate(`/manual-upload/feed?network=0`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                        <p className='display-2 mb-3'>\n                                            <FontAwesomeIcon type={'light'} icon={'laptop'} iconClass={'me-0'}/>\n                                        </p>\n                                        <p className='mb-0 fs-10 fw-medium'>My Device</p>\n                                    </Button>\n                                </Col>\n\n                                {networkList.length > 0 ? networkList.map(network =><Col>\n                                    <Button onClick={() => onBoarding ? setNetwork(network.id) : navigate(`/manual-upload/feed?network=${network.id}`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                        <p className='display-2 mb-3'>\n                                            <Image src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} height={36} width={36} fluid/>\n                                        </p>\n                                        <p className='mb-0 fs-10 fw-medium'>{GET_NETWORK_NAME(network.id)}</p>\n                                    </Button>\n                                </Col>) : null}\n                            </Row> \n                            :\n                            <Row className='w-100' style={{maxWidth:600}}>\n                            {generateRandomArray(3).map((_, index) => <Col>\n                                <div key={index} className=\"btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4 d-flex\">\n                                    <div className=\"sk_rect h-40px w-40px mb-3\"></div>\n                                    <div className=\"sk_line h-10px mb-1 w-75\"></div>\n                                </div>\n                                </Col>)}\n                            </Row>\n                            }\n                            {onBoarding ? \n                                <div className=\"f-center\">\n                                    <Button variant='link' className=\"text-decoration-underline\" onClick={() => this.props.onBack('c_n')}>\n                                        Choose another Network\n                                    </Button>\n                                </div>: null}\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(ManualHead)","import React, { Component } from 'react'\nimport { Button, Card, Row, Col, Badge, Image } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME, generateRandomArray } from '../../../../../utils';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { connect } from 'react-redux';\n\n\nconst GalleryData = [\n       {\n              id: 1,\n              title: 'Homepage Gallery',\n              desc: 'Build trust and win faster checkouts with a shoppable UGC Gallery on the home page.',\n              media: 'home-gallery'\n       },\n       {\n              id: 2,\n              title: 'Product Page Gallery',\n              desc: 'Establish social proof with real product usage examples on PDPs to inspire & convert.',\n              media: 'product-gallery'\n       },\n       {\n              id: 3,\n              title: 'Category Gallery',\n              desc: 'Create and publish category-based UGC galleries to navigate users to products that capture attention.',\n              media: 'category-page'\n       }\n]\nclass ChooseGallery extends Component {\n       state = { addClass: true };\n\n       render() {\n              const { addClass } = this.state\n              return <div className='f-center m-auto add_feed_ flex-column py-2'>\n                     <div className='f-center flex-column'>\n                            <div className=\"text-center mb-5\">\n                                   <h3>Let's start with the exact solution you want.</h3>\n                                   <p>Select any one from the below to start now!</p>\n                            </div>\n                            <Row style={{maxWidth:780}}>\n                                   {GalleryData.map((Item, index) =>\n                                          <Col sm={4} key={index} className=\"mb-2\">\n                                                 <Card className='btn btn-secondary shadow-none p-0 text-start overflow-hidden mb-0' onClick={this.props.galleryFun}>\n                                                        <div className='position-relative h-auto d-none d-sm-flex w-100' style={{paddingBottom:'182.2%'}}>\n                                                               <video className='w-100 position-absolute top-0 start-0' width=\"267\" height=\"455\" poster={baseUrl(`media/video/${Item.media}.png`)} controls={false} autoPlay={true} loop={true} muted={true}>\n                                                                      <source src={baseUrl(`media/video/${Item.media}.mp4`)} type=\"video/mp4\" />\n                                                               </video>\n                                                        </div>\n                                                        <Card.Body style={{minHeight:130}}>\n                                                               <Card.Title className='text-dark mb-1'>{Item.title}</Card.Title>\n                                                               <Card.Text>\n                                                                      {Item.desc}\n                                                               </Card.Text>\n                                                        </Card.Body>\n                                                 </Card>\n                                          </Col>\n                                   )}\n                            </Row>\n                     </div>\n              </div>\n       }\n}\n\nexport default ChooseGallery","import React, { Component } from 'react'\nimport { Button, Image } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME, generateRandomArray } from '../../../../../utils';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { connect } from 'react-redux';\n\nclass ChooseNetwork extends Component {\n    state = { addClass: true };\n\n    render() {\n        const { addFeedData, onNetworkSelect } = this.props\n        const { addClass } = this.state\n        return <div className='f-center m-auto add_feed_'>\n            {addFeedData && Object.keys(addFeedData).length > 0 ?\n                <div className='f-center flex-column mb-5'>\n                    <div className=\"text-center mb-5\">\n                        <h3>Choose Source Network</h3>\n                        <p>Select the social platform from which you want to add the feeds</p>\n                    </div>\n                    <div className=\"f-center flex-wrap\">\n                        {addFeedData.networks.slice(0, addClass ? 6 : addFeedData.networks.length).map((network, index) => (network.id != 33 && network.id != 29 && network.id!=34 && network.id!=35 ?\n                            <div key={index} className=\"px-2 mb-4\">\n                                <Button variant='secondary' onClick={() => onNetworkSelect(network.id)}>\n                                    {network.id == 29 ? \n                                    <FontAwesomeIcon type={'solid'} icon={'star'} iconClass={'text-warning fs-6'}/>\n                                    : \n                                    <Image height={22} width={22} className='me-2' src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} alt={GET_NETWORK_NAME(network.id)} fluid />\n                                    }\n                                    {network.name}\n                                </Button>\n                            </div> : null\n                        ))}\n                    </div>\n                    {addFeedData.networks.length >= 5 && addClass ?\n                        <div className=\"px-2 mb-4\">\n                            <Button variant='link' className='p-2 mt-2' onClick={() => this.setState({ addClass: !addClass })}>\n                                <FontAwesomeIcon type={'solid'} icon={'circle-info'} />\n                                Click here to see all supported Networks\n                            </Button>\n                        </div>\n                        : null}\n                </div>\n                :\n                <div className=\"f-center flex-wrap m-auto\">\n                    {generateRandomArray(10).map((number, index) => <div key={index} className=\"px-2 mb-4\"><div className=\"sk_rect h-40px me-2 w-100 btn-min-w\"></div></div>)}\n                </div>}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        addFeedData: state.addFeedReducer?.addFeedNetworks,\n    }\n}\n\nexport default connect(mapStateToProps)(ChooseNetwork)","import React, { useState } from \"react\";\nimport { Form, InputGroup, Dropdown } from \"react-bootstrap\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { FontAwesomeIcon } from \"../../../../../../../Assets/AssetsHelper\";\nimport { getInputIcon } from \"../../../../Feeds/AddFeed/utils\";\n\nexport default function Google(props) {\n    const [address, setAddress] = useState(\"\");\n    const [list, setList] = useState(false);\n\n\n    const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\n\n    const handleSelect = (v1, v2, v3) => {\n        props.onFieldTextChange(v1, v2, v3)\n        setAddress(v1);\n        setList(false)\n    };\n\n    return <InputGroup className=\"mb-4\">\n        <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(33, 4)} /></InputGroup.Text>\n        <PlacesAutocomplete value={address} onChange={handleChange} >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => {\n                return <Dropdown autoClose=\"outside\">\n                    <Dropdown.Toggle variant=\"light\" className={`arrow_disabled p-0 border-0 flex-grow-1 bg-transparent ${props.error ? 'is-invalid' : ''}`}>\n                        <Form.Control className={`fw-semibold ${props.error ? 'is-invalid' : ''}`} size='lg' {...getInputProps({ placeholder: \"Type address\" })} required />\n                        {loading ? <div className='input-spinner'></div> : null}\n                    </Dropdown.Toggle>\n                    {list && address.length > 0 ?\n                        <Dropdown.Menu className=\"input-dropdown\">\n                            <div className=\"dropdown-height\">\n                                {suggestions.map((suggestion, i) => {\n                                    const style = {\n                                        backgroundColor: suggestion.active ? \"\" : \"\"\n                                    };\n                                    return <Dropdown.Item {...getSuggestionItemProps(suggestion, { style })} onClick={() => handleSelect(suggestion.description, suggestion.placeId, suggestion.formattedSuggestion.mainText)} key={i}>\n                                        <div className=\"d-flex flex-column justify-content-start\">\n                                            <p className=\"fw-bold fs-8 mb-0\">{suggestion.description}</p>\n                                        </div>\n                                    </Dropdown.Item>\n                                })}\n                            </div>\n                        </Dropdown.Menu>\n                        : null}\n                </Dropdown>\n            }}\n        </PlacesAutocomplete>\n        {props.error ? <span id=\"\" className=\"invalid-feedback\">This field is required</span> : null}\n    </InputGroup>\n}\n\n\n\n\n\n","import React, { Component, useState } from 'react'\nimport { AUTOCOMPLETE } from '../../../../../../../actions/manageFeedsAction'\nimport { Form, InputGroup, Dropdown } from 'react-bootstrap'\nimport PlacesAutocomplete from 'react-places-autocomplete'\nimport { FontAwesomeIcon } from '../../../../../../../Assets/AssetsHelper'\nimport { getInputIcon } from '../../../../Feeds/AddFeed/utils'\n\nexport default function Facebook(props) {\n    const [handles, setHandles] = useState([])\n    const [showHandle, setShowHandle] = useState(false)\n\n    const handleTextChange = e => {\n        const value = e\n        autoComplete(1, value)\n        props.onTextChange(value)\n        setShowHandle(true)\n    }\n\n    const autoComplete = (action, value) => {\n        const obj = { networkId: 3, handle: value, filterType: 8, showHandle: false, }\n        AUTOCOMPLETE(obj).then(res => {\n            const { data } = res\n            if (data.responseCode == 200) { setHandles(data.response.data) }\n            else setHandles([])\n        }).catch(ex => { })\n    }\n\n    const onSelectHandle = (item) => {\n        props.onTextChange(item.link)\n        document.querySelector(`#fb-text`).value = item.link\n        setShowHandle(false)\n        setHandles([])\n    }\n\n    return <InputGroup className=\"mb-4\">\n        <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(56, 3)} /></InputGroup.Text>\n        <PlacesAutocomplete className=\"position-relative\" value={props.text} onChange={handleTextChange} >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (<>\n                <Dropdown autoClose=\"outside\" show={showHandle}>\n                    <Dropdown.Toggle variant=\"light\" className={`arrow_disabled p-0 border-0 flex-grow-1 bg-transparent ${props.error ? 'is-invalid' : ''}`}>\n                        <Form.Control className={`fw-semibold ${props.error ? 'is-invalid' : ''}`} size='lg' {...getInputProps({ placeholder: \"Enter Page Name\" })} required id='fb-text' />\n                        {loading ? <div className='input-spinner'></div> : null}\n                    </Dropdown.Toggle>\n                    {handles && handles.length > 0 ? \n                        <Dropdown.Menu className='input-dropdown'>\n                            <div className=\"dropdown-height\">\n                                {handles.map((suggestion, i) => {\n                                    return <Dropdown.Item className='rounded-0 border-bottom' onClick={() => onSelectHandle(suggestion)} key={i}>\n                                        <div className=\"d-flex flex-column justify-content-start\">\n                                            <p className=\"fw-bold fs-8 mb-0\">{suggestion.name}</p>\n                                            <span className=\"fs-10 mb-0\">{suggestion.link}</span>\n                                        </div>\n                                    </Dropdown.Item>\n                                })}\n                            </div>\n                    </Dropdown.Menu>\n                : null}\n            </Dropdown></>)}\n\n        </PlacesAutocomplete>\n        {props.error ? <span id=\"\" className=\"invalid-feedback\">This field is required</span> : null}\n    </InputGroup>\n\n}\n\n","import React, { Component } from 'react'\nimport { YOUTUBE_AUTOCOMPLETE } from '../../../../../../../actions/addFeedActions'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\nimport { Form, InputGroup, Dropdown } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '../../../../../../../Assets/AssetsHelper'\nimport { getInputIcon } from '../../../../Feeds/AddFeed/utils'\nimport ImageType from '../../../../CommonComponents/MediaType/ImageType'\n\nexport default class Youtube extends Component {\n    state = { list: [], error: false, address:'', searchList:false }\n    \n    onYoutubeChange = query => {\n        const { onValueChange, tab } = this.props\n        if ([1, 75, 11].includes(tab)) {\n            try {\n                const type = tab == 11 ? \"playlist\" : \"channel\"\n                onValueChange(query)\n                YOUTUBE_AUTOCOMPLETE(query, type).then(res => {\n                    const { data, status } = res\n                    if (status == 200) {\n                        this.setState({ list: data.items })\n                    }\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        else onValueChange(query)\n    }\n\n    onListClick = (item) => {\n        try {\n            const { onValueChange, tab, onChannelId, } = this.props\n            onValueChange(tab == 11 ? item.snippet.title : item.snippet.channelTitle)\n            onChannelId(`${tab == 11 ? item.id.playlistId : tab == 75 ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`)\n            document.getElementById(`feedsfield-${tab}`).value = `https://www.youtube.com/${tab == 11 ? \"playlist?list=\" : \"channel/\"}${tab == 11 ? item.id.playlistId : tab == 75 ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`\n            this.setState({ list: [] })\n        } catch (error) {\n            console.log(\"error------------------------\", error)\n        }\n    }\n\n    handleChange = (e) => { this.setState({address:e, searchList:true},() => this.props.onValueChange(\"\",\"\"))};\n\n    handleSelect = address => {\n        geocodeByAddress(address)\n          .then(results => getLatLng(results[0]))\n          .then(latLng => {\n            this.props.onLatlanChange(`${latLng.lat},${latLng.lng}`)\n          })\n          .catch(error => console.error('Error', error));\n    };\n\n    setPlace = (v1, v2) => {\n        this.props.onValueChange(v1, v2)\n        this.setState({address:v1, searchList:false})\n    };\n\n    render() {\n        const { tab, onValueChange, onLatlanChange, onKeywordChange, keyword, error, feedText } = this.props;\n        const { list,  address, searchList,  } = this.state;\n        return <div className=\"row\">\n            <div className={`col-md-${tab == 32 ? '6' : '12'}`}>\n                <div className=\"form-group\">\n                    {tab == 32 ? <InputGroup className=\"mb-4\">\n                            <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(33, 7)}/></InputGroup.Text>\n                            <Dropdown autoClose=\"outside\">\n                                <PlacesAutocomplete value={address} onChange={this.handleChange} onSelect={this.handleSelect}>\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => <>\n                                        <Dropdown.Toggle variant=\"light\" className={`arrow_disabled p-0 border-0 flex-grow-1 bg-transparent ${error ? 'is-invalid' : ''}`}>\n                                        <Form.Control className={`fw-semibold ${error ? 'is-invalid' : ''}`} size='lg' {...getInputProps({ placeholder: \"Type address\" })} required/>\n                                        {loading ? <div className='input-spinner'></div> : null}\n                                        </Dropdown.Toggle>\n                                        {list && address.length > 0 ?\n                                                <Dropdown.Menu className='input-dropdown'>\n                                                    <div className=\"dropdown-height\">\n                                                    {suggestions.map((suggestion ,i) => {\n                                                            const style = {\n                                                                backgroundColor: suggestion.active ? \"\" : \"\"\n                                                            };\n                                                            return <Dropdown.Item {...getSuggestionItemProps(suggestion, { style })} onClick={() => { this.setPlace(suggestion.description, suggestion.placeId); this.handleSelect(suggestion.description) }}>\n                                                                <div className=\"d-flex flex-column justify-content-start\">\n                                                                    <p className=\"fw-bold fs-8 mb-0\">{suggestion.description}</p>\n                                                                </div>\n                                                            </Dropdown.Item>\n                                                        })}\n                                                    </div>\n                                            </Dropdown.Menu>\n                                        : null}\n                                    </>}\n                                </PlacesAutocomplete>\n                            </Dropdown>\n                            {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </InputGroup>\n                        :\n                        <InputGroup className=\"mb-4\">\n                            <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(tab == 75 || tab == 1 ? 4 : tab == 11 ? 11 : tab == 4 ? 4 : tab == 32 ? 33 : \"\", 7)}/></InputGroup.Text>\n                            <PlacesAutocomplete onChange={this.onYoutubeChange} value={feedText} placeholder=\"test\">\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => <Dropdown>\n                                    <Dropdown.Toggle variant=\"light\" className={`arrow_disabled p-0 border-0 flex-grow-1 bg-transparent ${error ? 'is-invalid' : ''}`}>\n                                        <Form.Control className={`fw-semibold ${error ? 'is-invalid' : ''}`} size='lg' {...getInputProps({ placeholder: `${tab == 32 ? \"\" : \"Enter\"} ${tab == 75 || tab == 1 ? \"Channel Url\" : tab == 11 ? \"Play List ID\" : tab == 4 ? \"keyword\" : \"\"}` })}/>\n                                    </Dropdown.Toggle>\n                                    {list && list.length > 0 ?\n                                    <Dropdown.Menu className='input-dropdown'>\n                                        <div className='dropdown-height'>\n                                        {list.map((item ,i)=> (<Dropdown.Item className='d-flex align-items-center overflow-hidden w-100 rounded-0 border-bottom' data-item=\"place\" {...getSuggestionItemProps(item)} key={i} onClick={() => this.onListClick(item)}> \n                                            <div className='d-flex flex-shrink-0 w-40px me-2'>\n                                                <ImageType mediaClass={'position-relative overflow-hidden w-100 rounded-1 bg-gray-100'} size={100} height={40} width={40} url={item.snippet.thumbnails.default.url} isCover={true} alt={''}/>\n                                            </div>\n                                            <div className=\"d-flex flex-column justify-content-start\" style={{maxWidth:'100%'}}>\n                                                <p className=\"fw-bold fs-8 mb-0 text-ellpsis\">{item.snippet.channelTitle}</p>\n                                                <span className=\"fs-10 mb-0 text-ellpsis\">{`https://www.youtube.com/${tab == 11 ? \"playlist?list=\" : \"channel/\"}${tab == 11 ? item.id.playlistId : item.id.channelId}`}</span>\n                                            </div>\n                                        </Dropdown.Item>))}\n                                        </div>\n                                    </Dropdown.Menu>\n                                    : ''}\n                                </Dropdown>\n                            }\n                            </PlacesAutocomplete>\n                            {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </InputGroup>   \n                    }\n                </div>\n            </div>\n            \n            {tab == 32 ?\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(4, 7)}/></InputGroup.Text>\n                            <Form.Control placeholder=\"Enter keywords\" size='lg' className='fw-semibold' value={keyword} onChange={e => onKeywordChange(e.target.value)}/>\n                        </div>\n                    </div>\n                </div>\n            : null}\n        </div>\n    }\n}\n","import store from \"../store\"\nimport { TOAST_DISMISS, TOAST_ERROR, TOAST_LOADING, TOAST_SUCCESS, TOAST_UPDATE } from \"../utils\"\nimport { CREATE_FEED, GET_COUNT, HOST_URL, ONBOARDING_CREATE_FEED, ONSITE_FEED } from \"./api\"\nimport HttpClient from \"./http-client\"\nimport { getUserInfo_afterChanges } from \"./loginActions\"\nimport { TAGSHOP_USER_HOME_DATA } from \"./sceneActions\"\nimport { togglePriceSection } from \"./show_modal_Action\"\n\n\nexport const CREATE_OB_FEED = (data, callBack, onLoading) => {\n    try {\n        new HttpClient().post(CREATE_FEED, data, { validateStatus: false }).then(res => {\n            const { responseCode, responseMessage, responseData, postCount, } = res.data\n            localStorage.setItem('selectedNetwork', null)\n            if (responseCode == 200) {\n                TOAST_SUCCESS(responseMessage)\n                if (data.filter != 62 && responseData) GET_OB_POST_COUNT(responseData, data.networkId, callBack, onLoading)\n            }\n            else {\n                TOAST_ERROR(responseMessage)\n                onLoading(false)\n            }\n        }).catch(ex => {\n            TOAST_ERROR(\"Some Error Occured!!\")\n            onLoading(false)\n        })\n    } catch (error) {\n        onLoading(false)\n    }\n}\n\n\nexport const GET_OB_POST_COUNT = (feedId, networkId, callBack, onLoading) => {\n    const obj = {\n        wallId: localStorage.getItem('wallId'),\n        feedId,\n        networkId: networkId\n    }\n    const toastId = TOAST_LOADING()\n    new HttpClient().post(GET_COUNT, obj, { validateStatus: false }).then(res => {\n        const { responseCode, responseMessage, postCount } = res.data\n        if (responseCode == 200) {\n            TOAST_UPDATE(toastId, \"success\", `${postCount} ${postCount > 1 ? 'posts' : 'post'} added successfully`)\n            onLoading(false)\n            if(localStorage.getItem('shopifyLogin')) store.dispatch(getUserInfo_afterChanges())\n            //store.dispatch(TAGSHOP_USER_HOME_DATA())\n            callBack()\n        }\n        else {\n            TOAST_UPDATE(toastId, \"error\", responseMessage);\n            onLoading(false)\n        }\n    }).catch(error => {\n        TOAST_DISMISS(toastId)\n        onLoading(false)\n    })\n}\n\nexport const CREATE_OB_FEED_FB = (data, callBack, onLoading) => {\n    try {\n        new HttpClient().post(ONBOARDING_CREATE_FEED, data, { validateStatus: false }).then(res => {\n            const { responseCode, responseMessage, response, postCount, } = res.data\n            localStorage.setItem('selectedNetwork', null)\n\n            if (responseCode == 200) {\n                TOAST_SUCCESS(responseMessage)\n                if (postCount != null && data.filter != 62) {\n                    TOAST_SUCCESS(`${postCount} post added successfully`)\n                }\n\n                if (data.filter != 62 && response && response.length) {\n                    GET_OB_POST_COUNT(response[0], data.networkId, callBack, onLoading)\n                }\n                if (data.filter == 62 && postCount && postCount.length) {\n                    GET_OB_POST_COUNT(postCount[0], data.networkId, callBack, onLoading)\n                }\n            }\n            else {\n                TOAST_ERROR(responseMessage)\n                onLoading(false)\n            }\n        }).catch(err => {\n            TOAST_ERROR(\"Some Error Occured!!\")\n            onLoading(false)\n        })\n    } catch (error) {\n        onLoading(false)\n    }\n}\n\nexport const CREATE_OB_ONSITE_FEED = (obj, callBack, onLoading) => {\n    new HttpClient().post(ONSITE_FEED, obj, { validateStatus: false }).then(res => {\n        const { responseCode, responseData, responseStatus } = res.data\n        if (parseInt(responseCode) == 200) {\n            TOAST_SUCCESS(responseData)\n            callBack()\n        }\n        else TOAST_ERROR(responseData)\n        if (responseStatus == \"Upgrade\") {\n            setTimeout(() => {\n                store.dispatch(togglePriceSection(true, 2))\n            }, 1500);\n        }\n        onLoading(false)\n\n    })\n}","import React, { Component } from 'react';\nimport { Alert, Image, Button, Row, Col, Form } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport UploadBox from '../../CommonComponents/Uploads/UploadBox';\nimport moment from 'moment';\nimport { customPostsubmit } from '../../../../../actions/appsMoreAction';\nimport { DELETE_KEYS, getModeration } from '../../../../../actions/moderationActions';\nimport { TOAST_ERROR, TOAST_SUCCESS } from '../../../../../utils';\nimport { connect } from 'react-redux';\nimport withRouter from '../../../../routes/WithRouter';\nimport { TAGSHOP_USER_HOME_DATA } from '../../../../../actions/sceneActions';\n\nclass OnBoardingManualUpload extends Component {\n       state = {\n              postImage: '',\n              mediaType: '',\n              height: 0,\n              width: 0,\n              thumbnail: '',\n              spinner: false,\n              content: \"\",\n              contentError: false\n       }\n\n       onChangePostImg = value => {\n              this.setState({ postImage: value })\n       }\n\n       componentDidUpdate(prevProps) {\n              const { editData } = this.props\n              if (prevProps.editData != editData) {\n                     this.setState({ postImage: editData.postFile, height: editData.mediaHeight, width: editData.mediaWidth, mediaType: editData.type })\n              }\n       }\n\n       updateData = (data) => {\n              if (data.type == \"video\") {\n                     this.setState({ mediaType: data.type, height: data.height, width: data.width, postImage: data.s3Url, thumbnail: data.s3ThumbUrl })\n              }\n              else {\n                     this.setState({ mediaType: data.type, height: data.meta.height, width: data.meta.width })\n              }\n       }\n\n       uploadPost = (data) => {\n\n              const { userData, onNext } = this.props\n              const { content } = this.state\n              const formData = new FormData();\n\n              //formData.append('createdAt', moment(moment(new Date())).format('YYYY-MM-DD HH:mm'));\n              //formData.append('link', '');\n              //formData.append('feedId', 0);\n\n              let type = 1;\n              this.setState({ spinner: true });\n              if (data.mediaType == 'content' || data.mediaType == 1) {\n                     type = 1;\n              } else if ((data.mediaType == 'image' || data.mediaType == 4) && content) {\n                     type = 4;\n              } else if ((data.mediaType == 'image' || data.mediaType == 2) && !content) {\n                     type = 2;\n              } else if ((data.mediaType == 'video' || data.mediaType == 3) && !content) {\n                     type = 3;\n              } else if ((data.mediaType == 'video' || data.mediaType == 5) && content) {\n                     type = 5;\n              }\n\n              formData.append('postFile', data.mediaType == 'video' ? data.thumbnail : data.postImage);\n              formData.append('mediaFile', data.mediaType == 'video' ? data.postImage : \"\");\n              //formData.append('mediaFilePath', data.mediaType == 'video' ? data.postImage : \"\");\n\n              // formData.append('authorFile', userData.picture);\n              // formData.append('authorName', userData.name);\n              formData.append('content', this.state.content);\n              //formData.append('networkName', 'No Network');\n              // formData.append('networkId', 0);\n              //formData.append('recureEveryOption', 0);\n\n              // formData.append('recureEvery', 0);\n              // formData.append('recureAfter', 0);\n              // formData.append('ownerId', userData.ownerId);\n              //formData.append('referenceId', parseInt(Date.now()));\n              formData.append('mediaHeight', data.height ? data.height : 0);\n              formData.append('mediaWidth', data.width ? data.width : 0);\n              formData.append('type', type);\n              formData.append('wallId', localStorage.getItem('wallId'));\n              // formData.append('postId', 0);\n              // formData.append('rating', 0);\n              // formData.append('isAdmin', 0);\n              // formData.append('adminId', 0);\n              // formData.append('videoType', 0);\n              if (String(content).trim().length > 0 && String(content).trim().length <= 500) {\n                     customPostsubmit(userData.id, localStorage.getItem('wallId'), formData).then((response) => {\n                            if (response.data.responseCode == 200) {\n                                   localStorage.setItem('selectedNetwork', null)\n                                   if (response.data.responseStatus == 'success') {\n                                          TOAST_SUCCESS(`Post Created Successfully.`);\n\n                                          onNext()\n                                   } else {\n                                          TOAST_ERROR('Error');\n                                   }\n                            } else if (response.data.responseCode == 409) {\n                                   TOAST_ERROR(\"Post Already Exists.\");\n                            }\n                            this.setState({ spinner: false });\n                     }).catch((error) => {\n                            TOAST_ERROR(error.message);\n                            this.setState({ spinner: false })\n\n                     })\n              }\n              else this.setState({ spinner: false, contentError: true })\n\n       }\n\n       changeContent = (event) => this.setState({ content: (event.target.value).substring(0, 500), contentError: false })\n\n       render() {\n              const { navigate } = this.props\n              const { postImage, mediaType, thumbnail, height, width, contentError, content, spinner } = this.state\n              return (\n                     <div className='d-flex flex-column add_feed_ m-auto' id=\"cont_modal\">\n                            <div className=\"d-flex align-items-center mb-5\">\n                                   <div className=\"symbol symbol-40 flex-shrink-0 me-3\">\n                                          <Image height={40} width={40} src={baseUrl(`media/icons/social-icons-square/manual-upload.svg`)} alt={''} fluid />\n                                   </div>\n                                   <div className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pr-3\">\n                                          <span className=\"fs-6 fw-bold text-gray-800\">Manual Upload</span>\n                                          <p className=\"fs-9 mb-0 fw-medium\">Add Post</p>\n                                   </div>\n                            </div>\n                            <div className='mb-5'>\n                                   <Row>\n                                          <Col md={6} lg={5} style={{ minHeight: 400 }}>\n                                                 <UploadBox id=\"su_logo\" backgroundImage={postImage} onClickTouploadImage={this.onChangePostImg} removeDelete={false} icon={'image-regular'} updateData={this.updateData} thumbnail={thumbnail} isEdit={true} isCover={true} />\n                                          </Col>\n                                          <Col md={6} lg={7}>\n                                                 <Form.Group className=\"mb-2 mb-xl-3\">\n                                                        <Form.Label>Caption <span className=\"text-danger\">*</span> </Form.Label>\n                                                        <Form.Control as='textarea' id=\"mu_caption\" maxLength={500} className={`${contentError ? \"is-invalid\" : \"\"} textarea-min-row-5`} name=\"caption\" row=\"5\" value={content} onChange={this.changeContent} />\n                                                        {contentError ? <span className='invalid-feedback'>{String(content).length > 0 ? \"Limit Exceed ! Max 500 characters allowed.\" : \"This field is required.\"}</span> : null}\n                                                        <div className=\"d-flex jsutify-content-end\"> <span className=\"fs-10 text-muted pt-1\">{content?.length}/500</span> </div>\n                                                 </Form.Group>\n\n                                          </Col>\n                                   </Row>\n                            </div>\n                            <Alert variant=\"warning\" className='border border-warning'>\n                                   <Alert.Heading className='f-center alert_icon_head'>\n                                          <span className='f-center'>\n                                                 <FontAwesomeIcon icon={'lightbulb'} iconClass={'me-1'} />\n                                                 Pro Tip\n                                          </span>\n                                   </Alert.Heading>\n                                   <p className=\"fw-medium mb-0 fs-8 text-gray-700\">We highly advise leveraging user-generated content to enhance your e-commerce brand.</p>\n                            </Alert>\n                            <div className=\"d-flex justify-content-between\">\n                                   <Button variant='link' id=\"mu_cancel_btn\" onClick={() => this.props.onBack('c_n')}>\n                                          <FontAwesomeIcon icon={'arrow-left'} iconClass={'me-2'} />\n                                          Back\n                                   </Button>\n                                   <Button id='mu_sv_btn' className={`${spinner ? 'spinner' : ''}`} onClick={() => this.uploadPost(this.state)}>{\"Upload\"}</Button>\n                            </div>\n                     </div>\n              );\n       }\n}\n\nconst mapStateToProps = (state) => {\n       return {\n              userData: state.authorized?.userData?.user_data?.user,\n       }\n}\n\nconst mapDispatchToProps = dispatch => {\n       return {\n              getModeration: (callback) => dispatch(getModeration(callback)),\n              LoadHome: () => dispatch(TAGSHOP_USER_HOME_DATA()),\n       }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OnBoardingManualUpload));","import React, { Component } from 'react'\nimport { HOST_URL } from '../../../../../../actions/api'\nimport { Image, Nav, InputGroup, Form, Card, Button, Tab, Alert } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\nimport Swal from 'sweetalert2'\nimport withRouter from '../../../../../routes/WithRouter'\nimport Google from './FeedNetworks/Google'\nimport Facebook from './FeedNetworks/Facebook'\nimport Youtube from './FeedNetworks/Youtube'\nimport { CREATE_OB_FEED, CREATE_OB_FEED_FB, CREATE_OB_ONSITE_FEED } from '../../../../../../actions/onBoradingAction'\nimport { getInputIcon } from '../../../Feeds/AddFeed/utils';\nimport OnBoardingManualUpload from '../../../../../Layout/Main/Feeds/ManualUpload/OnBoardingManualUpload';\nimport ManualHead from '../../../Feeds/ManualUpload/ManualHead';\nimport ManualUploadWrap from '../../../Feeds/ManualUpload/ManualUploadWrap';\n\n\nconst SHOW_MORE_TAB = (networkId) => {\n    const showTabNetwork = [18, 1, 3, 4]\n    if (showTabNetwork.includes(networkId)) return true\n    return false\n}\nclass AddContent extends Component {\n\n    state = { activeFilter: \"\", feedText: \"\", placeId: '', placeName: '', showError: false, channelId: '', filterName: \"\", isLoading: false, latLng: \"\", keyword: \"\", error: false, feedTextError: false, manualSelect:null }\n\n    componentDidMount() {\n        const { contentObject } = this.props\n        if (contentObject.filters && contentObject.filters.length) this.setState({ activeFilter: contentObject.filters[0].filter, filterName: contentObject.filters[0].feedtype })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { contentObject } = this.props\n        if (prevProps.contentObject.filters != contentObject.filters) {\n            if (contentObject.filters && contentObject.filters.length) this.setState({ activeFilter: contentObject.filters[0].filter, filterName: contentObject.filters[0].feedtype })\n        }\n    }\n\n    onMoreTab = () => {\n        const { updateData, selectedNetworkId } = this.props\n        Swal.fire({\n            title: \"You have to connect your Account to use more options\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"I'll do it later\",\n            cancelButtonText: \"Proceed\"\n        }).then((result) => {\n            if (result.isDismissed && result.dismiss == \"cancel\") {\n                localStorage.setItem(\"selectedNetwork\", selectedNetworkId)\n                updateData({ SKIP: true })\n                this.props.navigate(`/content/addfeed/${localStorage.getItem(\"wallId\")}`)\n            }\n        });\n    }\n\n    onFieldTextChange = (text, id, placeName) => this.setState({ feedText: text, placeId: id, placeName: placeName, showError: false })\n\n    searchText = (value) => { this.setState({ feedText: value, error: false }) }\n\n    onLatlanChange = (value) => this.setState({ latLng: value })\n\n    onChannelId = (value) => this.setState({ channelId: value })\n\n    changeKeyword = (value) => this.setState({ keyword: value })\n\n    onLoading = (value) => this.setState({ isLoading: value })\n\n    onInputFeedText = (event) => this.setState({ feedText: event.target.value })\n\n    onAddFeed = () => {\n        const { activeFilter, feedText, channelId, placeId, placeName, latlng, keywords } = this.state\n        const { selectedNetworkId, contentObject, onNext } = this.props\n        this.onLoading(true)\n        if (selectedNetworkId == 29) {\n            const obj = {\n                network: 29,\n                filter: 2,\n                moderation: 0,\n                onsite_qr_code_btn_text: \"Scan QR code or click here to submit reviews/rating\",\n                onsite_btn_color: \"#000000\",\n                onsite_btn_txt_color: \"#ffffff\",\n                onsite_link_font_btn: \"Lato\",\n                onsite_css_font_btn: \"Lato\",\n                onsite_font_varient_btn: \"\",\n                btn_fontSize: 16,\n                onsite_qr_code_status: 1,\n                onsite_popup_title: \"Submit your posts\",\n                onsite_popup_btn_txt: \"Submit post\",\n                onsite_popup_sub_heading: \"You can share your reviews/rating here\",\n                onsite_term_url: \"https://taggbox.com/on-site-uploads-content-rights/\",\n                onsiteImgBack: \"\",\n                onsite_logo: \"\",\n                Onsite_logoImageValue: \"\",\n                onsite_bg_color_wg: \"#E8E8E8\",\n                onsiteBackImage: \"\",\n                onsite_bg_image_wg: \"\",\n                Onsite_backImageValue: \"\",\n                onsite_succ_msg: \"Thanks for the submission. Your post will live on the website after approval.\",\n                onsite_thank_txt_color: \"#000000\",\n                onsite_link_font_msg: \"Default\",\n                onsite_css_font_msg: \"Default\",\n                onsite_font_varient_msg: \"\",\n                onsite_thank_fontSize: 16,\n                wallId: localStorage.getItem('wallId')\n            }\n            CREATE_OB_ONSITE_FEED(obj, onNext, this.onLoading)\n        }\n        else {\n            if (feedText == \"\" || !feedText || String(feedText).startsWith('#') || String(feedText).startsWith('@')) {\n                this.setState({ error: true })\n                if (String(feedText).startsWith('#') || String(feedText).startsWith('@')) this.setState({ feedTextError: true })\n                this.onLoading(false)\n                return false\n            }\n            var obj = {\n                wallId: localStorage.getItem('wallId'),\n                networkId: selectedNetworkId,\n                moderation: 0,\n                account: 0,\n                feedText: feedText,\n                hashtagCaption: 0,\n                filter: activeFilter ? activeFilter : contentObject.filters.length ? contentObject.filters[0].filter : null,\n                accountId: '',\n                hashtagIGTV: 0,\n                onlyReels: 0,\n            }\n            if (selectedNetworkId == 3) {\n                obj['field'] = feedText\n                CREATE_OB_FEED_FB(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 23) {\n                obj['airbnb_page_review'] = feedText\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 7) {\n                obj['channelId'] = channelId\n                obj['latlng'] = latlng;\n                obj['keywords'] = keywords;\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 5) {\n                obj['field1'] = feedText\n                obj['field12boardurl'] = feedText\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 6) {\n                obj['field2'] = feedText\n                obj['field1'] = feedText\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 4) {\n                obj['field33'] = feedText\n                obj['field33placeId'] = placeId\n                obj['field33placeName'] = placeName\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 28 && activeFilter == 70) {\n                obj['tiktok_post_url'] = feedText\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else if (selectedNetworkId == 1) {\n                obj['excludeRetweet'] = 1\n                obj['excludeReplies'] = 1\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n            else {\n                CREATE_OB_FEED(obj, onNext, this.onLoading)\n            }\n        }\n    }\n\n    render() {\n        const { contentObject, selectedNetworkId } = this.props\n        const { filterName, error, activeFilter, feedText, keyword, isLoading, feedTextError, manualSelect } = this.state\n        return <Tab.Container defaultActiveKey={contentObject.filters && contentObject.filters.length ? `feed-${contentObject.filters[0].filter}` : '0'}>\n            {selectedNetworkId == 0 ? <>\n                {manualSelect == null ? \n                    <ManualHead onBoarding={true} onBack={this.props.handleStep} onNext={this.props.onNext} setNetwork = {val=>this.setState({manualSelect: val})}/> \n                :\n                    <ManualUploadWrap onBoarding={true} manualSelect={manualSelect} setNetwork={() => this.setState({manualSelect:null})} onNext={this.props.onNext}/>\n                }\n\n                </> \n                : \n                <div className='d-flex flex-column add_feed_ m-auto'>\n                    <div className=\"d-flex align-items-center mb-5\">\n                        <div className=\"symbol symbol-40 flex-shrink-0 me-3\">\n                            <Image height={40} width={40} src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(selectedNetworkId)}.svg`)} alt={GET_NETWORK_NAME(selectedNetworkId)} fluid />\n                        </div>\n                        <div className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pr-3\">\n                            <span className=\"fs-6 fw-bold text-gray-800\">{contentObject.name}</span>\n                            <p className=\"fs-9 mb-0 fw-medium\">Add your {contentObject.name} <span className=''>{filterName}</span></p>\n                        </div>\n                    </div>\n\n                    <Nav variant=\"underline\" className=\"mb-5 border-bottom\">\n                        {contentObject.filters && contentObject.filters.length > 0 ? contentObject.filters.map((filter, index) => (\n                            <Nav.Item key={`feed-${filter.filter}`}>\n                                <Nav.Link eventKey={`feed-${filter.filter}`} onClick={() => this.setState({ activeFilter: filter.filter, feedText: '', filterName: filter.feedtype, error: false, feedTextError: false })}>\n                                    {filter.feedName}\n                                </Nav.Link>\n                            </Nav.Item>))\n                            : null}\n                        {SHOW_MORE_TAB(selectedNetworkId) ?\n                            <Nav.Item>\n                                <Nav.Link className=\"nav-link\" onClick={() => this.onMoreTab()}>More</Nav.Link>\n                            </Nav.Item>\n                            : null}\n                    </Nav>\n                    <Tab.Content>\n                        {selectedNetworkId == 29 ?\n                            <>\n                                <div className=\"mt-5 mb-10\">\n                                    <p>\n                                        <strong>Share this URL to allow users to submit reviews on other marketing channels.</strong>\n                                        <a href={`${HOST_URL}s/${localStorage.getItem('wallId')}/onsite-upload`} title='Qr'>{`${HOST_URL}s/${localStorage.getItem('wallId')}/onsite-upload`}</a>\n                                    </p>\n                                </div>\n                            </>\n                            :\n\n                            contentObject.filters && contentObject.filters.length ? contentObject.filters.map((filter, index) => (\n                                <Tab.Pane eventKey={`feed-${filter.filter}`}>\n                                    {selectedNetworkId == 4 ?\n                                        <Google onFieldTextChange={this.onFieldTextChange} error={error} />\n                                        : selectedNetworkId == 3 ?\n                                            <Facebook text={feedText} onTextChange={this.searchText} error={error} />\n                                            : selectedNetworkId == 7 ?\n                                                <Youtube tab={activeFilter} onValueChange={this.searchText} onChannelId={this.onChannelId} onLatlanChange={this.onLatlanChange} keyword={keyword} onKeywordChange={this.changeKeyword} error={error} feedText={feedText} />\n                                                :\n                                                <InputGroup className=\"mb-4\">\n                                                    <InputGroup.Text className='fw-semibold fs-5'><FontAwesomeIcon icon={getInputIcon(filter.filter, selectedNetworkId)} /></InputGroup.Text>\n                                                    <Form.Control className={`fw-semibold ${error ? 'is-invalid' : ''}`} size='lg' placeholder={`Enter ${filter.feedtype}`} value={feedText} onChange={this.onInputFeedText} required />\n                                                    {error ? <span className=\"invalid-feedback\">{!feedTextError ? 'This field is required' : '@ and # not allowed'}</span> : null}\n                                                </InputGroup>\n                                    }\n                                </Tab.Pane>\n                            ))\n                                : null}\n                    </Tab.Content>\n\n                    <Alert variant=\"warning\" className='border border-warning'>\n                        <Alert.Heading className='f-center alert_icon_head'>\n                            <span className='f-center'>\n                                <FontAwesomeIcon icon={'lightbulb'} iconClass={'me-1'} />\n                                Pro Tip\n                            </span>\n                        </Alert.Heading>\n                        <p className=\"fw-medium mb-0 fs-8 text-gray-700\">We highly advise leveraging user-generated content to enhance your e-commerce brand.</p>\n                    </Alert>\n                    <div className=\"d-flex justify-content-between\">\n                        <Button variant='link' onClick={() => this.props.handleStep('c_n')}>\n                            <FontAwesomeIcon icon={'arrow-left'} iconClass={'me-2'} />\n                            Back\n                        </Button>\n                        <Button variant='primary' className={`${isLoading ? 'spinner' : ''}`} onClick={this.onAddFeed}>\n                            Create Feed\n                        </Button>\n                    </div>\n                </div>}\n        </Tab.Container>\n    }\n}\n\nexport default withRouter(AddContent)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withRouter from '../../../../routes/WithRouter';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { GET_ADD_FEED, getModeration } from '../../../../../actions/moderationActions';\nimport { getUserInfo_afterChanges, SkipOnBoarding } from '../../../../../actions/loginActions';\nimport { IS_IN_IFRAM, onBoardingSteps } from '../../../../../utils';\nimport { Container, Nav, Card, Button, Tab, Row, Col } from 'react-bootstrap';\nimport { HUBSPOT_URL } from '../../../../../actions/api';\nimport SupportVideo from '../../CommonComponents/Support/SupportVideo';\nimport ChooseGallery from './ChooseGallery';\nimport ChooseNetwork from './ChooseNetwork';\nimport AddContent from './AddContent';\nimport SyncProduct from '../../ProductCatalog';\nimport { TAGSHOP_USER_HOME_DATA } from '../../../../../actions/sceneActions';\n import \"./onboarding.scss\"\n\n\nconst NewLink = ({ eventKey, cssClass, elseValue, label, stepsCompleted }) => {\n    return <Nav.Item className='mx-lg-3'>\n        <Nav.Link eventKey={eventKey} className={`w-100 f-center fw-medium`}>\n            <div className={`h-24px w-24px rounded-circle me-2 f-center text-gray-100 fs-8 ${cssClass}`}>\n                {stepsCompleted ?\n                    <FontAwesomeIcon icon={'check'} />\n                    : elseValue}\n            </div>\n            {label}\n        </Nav.Link>\n    </Nav.Item>\n}\n\nconst feedFilters = {\n    18: {\n        filters: [{\n            \"feedtype\": \"handle\",\n            \"filter\": 23,\n            \"feedName\": \"Handle(@)\",\n            \"icon\": 'at'\n        },\n        {\n            \"feedtype\": \"hashtag\",\n            \"filter\": 26,\n            \"feedName\": \"Hashtag(#)\",\n            \"icon\": 'hashtag'\n        }],\n        name: \"Instagram\",\n        icon: \"instagram-business\"\n    },\n    28: {\n        filters: [\n            {\n                \"feedtype\": \"Hashtag\",\n                \"filter\": 72,\n                \"feedName\": \"# Hashtag\",\n                \"icon\": 'hashtag'\n            },\n            {\n                \"feedtype\": \"Handle\",\n                \"filter\": 71,\n                \"feedName\": \"@ Handle\",\n                \"icon\": 'at'\n            },\n            {\n                \"feedtype\": \"Post Url\",\n                \"filter\": 70,\n                \"feedName\": \"Post Url\",\n                \"icon\": 'link'\n            }\n        ],\n        name: \"TikTok\",\n        icon: \"tiktok\"\n    },\n    1: {\n        filters: [{\n            \"feedtype\": \"hashtag\",\n            \"filter\": 2,\n            \"feedName\": \"Hashtag(#)\",\n            \"icon\": 'hashtag'\n        },\n        {\n            \"feedtype\": \"handle\",\n            \"filter\": 1,\n            \"feedName\": \"Handle(@)\",\n            \"icon\": 'at'\n        }],\n        name: \"Twitter\",\n        icon: \"twitter\"\n    },\n    3: {\n        filters: [{\n            \"feedtype\": \"Page\",\n            \"filter\": 8,\n            \"feedName\": \"Page\",\n            \"icon\": 'flag'\n        }],\n        name: \"Facebook\",\n        icon: \"facebook\"\n    },\n    4: {\n        filters: [{\n            \"feedtype\": \"Places\",\n            \"filter\": 33,\n            \"feedName\": \"Places\",\n            \"icon\": 'globe'\n        }],\n        name: \"Google Reviews\",\n        icon: \"google\"\n    },\n    29: {\n        filters: [{\n            \"feedtype\": \"Review & Rating\",\n            \"filter\": 2,\n            \"feedName\": \"Review & Rating\"\n        }],\n        name: \"SnapUp\",\n        icon: \"onsiteupload\"\n    },\n    5: {\n        filters: [{\n            \"feedtype\": \"Handle\",\n            \"filter\": 1,\n            \"feedName\": \"Handle(@)\",\n            \"icon\": 'at'\n        },\n        {\n            \"feedtype\": \"User Board\",\n            \"filter\": 12,\n            \"feedName\": \"User Board\",\n            \"icon\": 'flag'\n        }],\n        name: \"Pinterest\",\n        icon: \"pinterest\"\n    },\n    7: {\n        filters: [{\n            \"feedtype\": \"Channel Url\",\n            \"filter\": 1,\n            \"feedName\": \"Channel Url\",\n            \"icon\": 'at'\n        },\n        {\n            \"feedtype\": \"Shorts\",\n            \"filter\": 75,\n            \"feedName\": \"Shorts\",\n            \"icon\": 'at'\n        },\n        {\n            \"feedtype\": \"Play List\",\n            \"filter\": 11,\n            \"feedName\": \"Play List\",\n            \"icon\": 'list'\n        },\n        {\n            \"feedtype\": \"Keywords\",\n            \"filter\": 4,\n            \"feedName\": \"Keywords\",\n            \"icon\": 'font'\n        },\n        {\n            \"feedtype\": \"Location\",\n            \"filter\": 32,\n            \"feedName\": \"Location\",\n            \"icon\": 'globe'\n        }\n        ],\n        name: \"YouTube\",\n        icon: \"youtube\"\n    },\n    6: {\n        filters: [{\n            \"feedtype\": \"Hashtag\",\n            \"filter\": 2,\n            \"feedName\": \"Hashtag(#)\",\n            \"icon\": 'hashtag'\n        },\n        {\n            \"feedtype\": \"Handle\",\n            \"filter\": 1,\n            \"feedName\": \"Handle(@)\",\n            \"icon\": 'at'\n        }],\n        name: \"Flickr\",\n        icon: \"flickr\"\n    },\n    8: {\n        filters: [{\n            \"feedtype\": \"Hashtag\",\n            \"filter\": 2,\n            \"feedName\": \"Hashtag(#)\",\n            \"icon\": 'hashtag'\n        },\n        {\n            \"feedtype\": \"Handle\",\n            \"filter\": 1,\n            \"feedName\": \"Handle(@)\",\n            \"icon\": 'at'\n        }],\n        name: \"Vimeo\",\n        icon: \"vimeo\"\n    },\n    23: {\n        filters: [{\n            \"feedtype\": \"Listing Url\",\n            \"filter\": 56,\n            \"feedName\": \"Listing Url(#)\",\n            \"icon\": 'flag'\n        }],\n        name: \"Airbnb Reviews\",\n        icon: \"airbnb\"\n    },\n    0: {\n        filters: [{\n            \"feedtype\": \"Upload\",\n            \"filter\": 56,\n            \"feedName\": \"Upload\",\n            \"icon\": 'flag'\n        }],\n        name: \"Upload\",\n        icon: \"manual-upload\"\n    }\n\n}\n\nclass OnBoardingSteps extends Component {\n    state = { addclass: true, contentObject: null, activeTab: 's_g_t', feedCreated: false, selectedNetworkId: null, stepsCompleted: [], showVideo: false, currentStep: 1, };\n    componentDidMount() {\n        const { getNetworks, stepData, navigate } = this.props\n        if (stepData?.FEED_CREATED) this.setState({ activeTab: 's_p' })\n        getNetworks()\n    }\n\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.allProducts && this.props.allProducts && prevProps.allProducts?.length != this.props.allProducts?.length) {\n            this.props.TAGSHOP_USER_HOME_DATA()\n            this.props.navigate(`/content/moderation/${localStorage.getItem('wallId')}`)\n        }\n    }\n\n    \n        \n\n\n    updateData = (obj) => {\n        const { updateUserInfo } = this.props\n        if (!(onBoardingSteps())) {\n            //updateUserInfo(() => { if (obj.SKIP) this.props.navigate('/home') })\n            // UPDATE_EXTRA_DATA(obj).then(res => {\n            //     updateUserInfo(() => { if (obj.SKIP) this.props.navigate('/home') })\n            // })\n        }\n    }\n\n    onSkipSteps = () => {\n        const { updateUserInfo } = this.props\n        SkipOnBoarding({ stepstype: \"onboardingskip\" }).then(res => {\n            updateUserInfo(() => { this.props.navigate('/home') })\n        }\n        )\n    }\n\n    onNetworkSelect = (id) => {\n        this.setState({ contentObject: feedFilters[id], activeTab: \"a_c\", selectedNetworkId: id, stepsCompleted: [...this.state.stepsCompleted, \"chooseNetwork\"] }, () => this.updateData({ CHOOSE_NETWORK: id }))\n    }\n\n    onClose = event => this.setState({ showVideo: !this.state.showVideo })\n\n    handleStep = (val) => {\n        this.setState({ activeTab: val, contentObject: [], stepsCompleted: [] })\n    }\n    galleryFun = () => {\n        this.setState({ activeTab: 'c_n' })\n    }\n\n    afterAddContent = () => {\n        // if (!localStorage.getItem('shopifyLogin')) {\n        //     this.setState({ activeTab: 's_p' })\n        // } else {\n        //     setTimeout(() => { this.props.navigate('/home') }, 1000)\n        // }\n        setTimeout(() => { this.props.navigate('/home') }, 1000)\n    }\n\n    render() {\n        const { contentObject, selectedNetworkId, activeTab, stepsCompleted, showVideo } = this.state\n        return <div className='d-flex flex-column flex-column-fluid align-items-center justify-content-center w-100 flex-position-center full-content'>\n            <Container className='onboard__' fluid>\n                <Tab.Container defaultActiveKey=\"s_g_t\" activeKey={activeTab}>\n                    <Card>\n                        <Card.Header className='pb-0 w-100 align-items-center'>\n                            <div></div>\n                            <Nav variant=\"underline\" className=\"nav-lg flex-sm-row flex-column ms-sm-10\">\n                                <NewLink eventKey=\"s_g_t\" cssClass={`bg-primary fw-semibold ${activeTab == 'c_n' || activeTab == 'a_c' || activeTab == 's_p' ? 'bg-primary' : 'bg-dark'}`} elseValue=\"1\" label=\"Select Gallery Type\" stepsCompleted={(activeTab == 'c_n' || activeTab == 'a_c' || activeTab == 's_p')} />\n                                <NewLink eventKey=\"c_n\" cssClass={activeTab == 'a_c' || activeTab == 's_p' ? 'bg-primary' : 'bg-dark'} elseValue=\"2\" label=\"Choose network\" stepsCompleted={activeTab == 'a_c' || activeTab == 's_p'} />\n                                <NewLink eventKey=\"a_c\" cssClass={activeTab == 's_p' ? 'bg-primary' : 'bg-dark'} elseValue=\"3\" label=\"Add Content\" stepsCompleted={activeTab == 's_p'} />\n                                {!localStorage.getItem('shopifyLogin') && <NewLink eventKey=\"s_p\" cssClass={activeTab == '' ? 'bg-primary' : 'bg-dark'} elseValue=\"4\" label=\"Sync Product\" stepsCompleted={activeTab == ''} />}\n\n                            </Nav>\n                            <Button size='sm' variant='light' className='d-none d-sm-inline-block' onClick={this.onSkipSteps}>Skip</Button>\n                        </Card.Header>\n                        <Card.Body>\n                            <Tab.Content className='onboard_tabs_'>\n                                <Tab.Pane eventKey=\"s_g_t\">\n                                    {activeTab == 's_g_t' ? <ChooseGallery galleryFun={this.galleryFun} /> : null}\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"c_n\">\n                                    {activeTab == 'c_n' ? <ChooseNetwork onNetworkSelect={this.onNetworkSelect} /> : null}\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"a_c\">\n                                    {activeTab == 'a_c' ? contentObject ?\n                                        <AddContent contentObject={contentObject} selectedNetworkId={selectedNetworkId} updateData={this.updateData} handleStep={this.handleStep} onNext={() => this.setState({ stepsCompleted: [...stepsCompleted, 'addContent'] }, () => this.afterAddContent())} />\n                                        : null : null}\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"s_p\">\n                                    {activeTab == 's_p' ? <SyncProduct updateData={this.updateData} onBoardings={true} /> : null}\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Card.Body>\n                        <Card.Footer className='border-0 bg-gray-100'>\n                            <Container fluid='sm'>\n                                <Row className='justify-content-center'>\n                                    <Col lg={8} className='f-center justify-content-between'>\n                                        <div>\n                                            <Button variant='link' className='d-inline-block d-sm-none py-2' onClick={this.onSkipSteps}>Skip</Button>\n                                        </div>\n                                        <div className='f-between flex-sm-grow-1'>\n                                            <span className='me-5 d-sm-flex d-none'>In case of any query reach out to us at support@tagshop.ai or Talk to expert</span>\n                                            <div className='d-flex flex-nowrap'>\n                                                <Link className='btn btn-outline-primary text-nowrap' to={HUBSPOT_URL} target='_blank' title='Demo Call'>\n                                                    <FontAwesomeIcon icon={'phone'} iconClass={'me-1'} />\n                                                    Demo Call\n                                                </Link>\n                                                <Button variant='outline-primary text-nowrap' className='ms-3' onClick={() => { this.setState({ showVideo: true }) }}>\n                                                    <FontAwesomeIcon icon={'circle-play'} iconClass={'me-1'} />\n                                                    Watch Video\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Card.Footer>\n                        <SupportVideo show={showVideo} link={'https://player.vimeo.com/video/912907290?h=f28a39da95'} onClose={this.onClose} />\n                    </Card>\n                </Tab.Container>  \n            </Container>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        stepData: state.dashboardData?.dashboarddata?.extra_data,\n        allProducts: state.products?.allProducts,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNetworks: (callback) => dispatch(GET_ADD_FEED(callback)),\n        getModeration: () => dispatch(getModeration()),\n        updateUserInfo: (callBack) => dispatch(getUserInfo_afterChanges(callBack)),\n        TAGSHOP_USER_HOME_DATA: () => dispatch(TAGSHOP_USER_HOME_DATA()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OnBoardingSteps))"],"names":["props","_jsxs","Modal","size","className","show","onHide","onClose","centered","children","_jsx","Header","closeButton","Body","style","paddingBottom","src","link","width","height","frameborder","allow","allowfullscreen","GET_CHILD_ACCOUNTS","accounts","networkId","filter","arguments","length","undefined","isPersInstaAcc","parseInt","reduce","acc","account","ConnectedAccounts","child","AUTOCOMPLETE_INPUT","value","dispatch","FB_AUTOCOMPLETE","TWITTER_AUTOCOMPLETE","YT_CHANNEL_AUTOCOMPLETE","obj","handle","filterType","showHandle","AUTOCOMPLETE","then","_ref","data","SET_AUTOCOMPLETE_HANDLE","responseCode","response","catch","error","_ref2","responseData","responseDataUserList","SET_AUTOCOMPLETE_LIST","includes","type","YOUTUBE_AUTOCOMPLETE","res","status","items","RESET_AUTOCOMPLETE","getFilterName","_networkTab$find","networkTab","store","getState","addFeedReducer","networkDetails","find","tab","feedName","getFeedAlertText","feedObj","inputValidationByNetwork","feedText","field33placeId","feed33","field33placeName","errorObj","message","SET_ERROR_MESSAGE_ACITON","getInputIcon","filterId","ManualHead","Component","constructor","state","networkList","id","loader","render","this","onBoarding","setNetwork","navigate","Container","fluid","Link","to","localStorage","getItem","title","FontAwesomeIcon","icon","iconClass","Card","Row","maxWidth","generateRandomArray","map","_","index","Col","Button","onClick","network","Image","baseUrl","GET_NETWORK_ICON","GET_NETWORK_NAME","variant","onBack","withRouter","GalleryData","desc","media","ChooseGallery","addClass","Item","sm","galleryFun","poster","controls","autoPlay","loop","muted","minHeight","Title","Text","ChooseNetwork","addFeedData","onNetworkSelect","Object","keys","networks","slice","alt","name","setState","number","connect","_state$addFeedReducer","addFeedNetworks","Google","address","setAddress","useState","list","setList","InputGroup","PlacesAutocomplete","onChange","e","onFieldTextChange","getInputProps","suggestions","getSuggestionItemProps","loading","Dropdown","autoClose","Toggle","Form","Control","placeholder","required","Menu","suggestion","i","backgroundColor","active","_createElement","handleSelect","v1","description","v2","placeId","v3","formattedSuggestion","mainText","key","Facebook","handles","setHandles","setShowHandle","autoComplete","action","ex","text","onTextChange","_Fragment","onSelectHandle","item","document","querySelector","Youtube","searchList","onYoutubeChange","query","onValueChange","console","log","onListClick","onChannelId","snippet","channelTitle","playlistId","channelId","replace","getElementById","handleChange","geocodeByAddress","results","getLatLng","latLng","onLatlanChange","lat","lng","setPlace","onKeywordChange","keyword","onSelect","ImageType","mediaClass","url","thumbnails","default","isCover","target","CREATE_OB_FEED","callBack","onLoading","HttpClient","post","CREATE_FEED","validateStatus","responseMessage","postCount","setItem","TOAST_SUCCESS","GET_OB_POST_COUNT","TOAST_ERROR","feedId","wallId","toastId","TOAST_LOADING","GET_COUNT","TOAST_UPDATE","getUserInfo_afterChanges","TOAST_DISMISS","OnBoardingManualUpload","postImage","mediaType","thumbnail","spinner","content","contentError","onChangePostImg","updateData","s3Url","s3ThumbUrl","meta","uploadPost","userData","onNext","formData","FormData","append","String","trim","customPostsubmit","responseStatus","changeContent","event","substring","componentDidUpdate","prevProps","editData","postFile","mediaHeight","mediaWidth","md","lg","UploadBox","backgroundImage","onClickTouploadImage","removeDelete","isEdit","Group","Label","as","maxLength","row","Alert","Heading","_state$authorized","_state$authorized$use","_state$authorized$use2","authorized","user_data","user","getModeration","callback","LoadHome","TAGSHOP_USER_HOME_DATA","AddContent","activeFilter","placeName","showError","filterName","isLoading","feedTextError","manualSelect","onMoreTab","selectedNetworkId","Swal","showCancelButton","confirmButtonText","cancelButtonText","result","isDismissed","dismiss","SKIP","searchText","changeKeyword","onInputFeedText","onAddFeed","latlng","keywords","contentObject","CREATE_OB_ONSITE_FEED","ONSITE_FEED","setTimeout","togglePriceSection","moderation","onsite_qr_code_btn_text","onsite_btn_color","onsite_btn_txt_color","onsite_link_font_btn","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","onsite_qr_code_status","onsite_popup_title","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_term_url","onsiteImgBack","onsite_logo","Onsite_logoImageValue","onsite_bg_color_wg","onsiteBackImage","onsite_bg_image_wg","Onsite_backImageValue","onsite_succ_msg","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","startsWith","hashtagCaption","filters","accountId","hashtagIGTV","onlyReels","CREATE_OB_FEED_FB","ONBOARDING_CREATE_FEED","err","componentDidMount","feedtype","prevState","Tab","defaultActiveKey","handleStep","val","ManualUploadWrap","Nav","eventKey","Content","href","HOST_URL","Pane","NewLink","cssClass","elseValue","label","stepsCompleted","feedFilters","OnBoardingSteps","addclass","activeTab","feedCreated","showVideo","currentStep","updateUserInfo","onBoardingSteps","onSkipSteps","SkipOnBoarding","stepstype","CHOOSE_NETWORK","afterAddContent","getNetworks","stepData","FEED_CREATED","_prevProps$allProduct","_this$props$allProduc","allProducts","activeKey","SyncProduct","onBoardings","Footer","HUBSPOT_URL","SupportVideo","_state$dashboardData","_state$dashboardData$","_state$products","dashboardData","dashboarddata","extra_data","products","GET_ADD_FEED"],"sourceRoot":""}