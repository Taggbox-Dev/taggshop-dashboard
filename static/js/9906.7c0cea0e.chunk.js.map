{"version":3,"file":"static/js/9906.7c0cea0e.chunk.js","mappings":"gKAEA,MAAMA,EAAmB,IAAIC,QACvBC,EAAaA,CAACC,EAAOC,KACzB,IAAKD,IAAUC,EAAc,OAC7B,MAAMC,EAAWL,EAAiBM,IAAIF,IAAiB,IAAIG,IAC3DP,EAAiBQ,IAAIJ,EAAcC,GACnC,IAAII,EAAMJ,EAASC,IAAIH,GAMvB,OALKM,IACHA,EAAML,EAAaM,WAAWP,GAC9BM,EAAIE,SAAW,EACfN,EAASG,IAAIC,EAAIG,MAAOH,IAEnBA,CAAG,EAqBG,SAASI,EAAcV,GAA0E,IAAnEC,EAAYU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqB,qBAAXG,YAAyBD,EAAYC,OACtG,MAAMR,EAAMP,EAAWC,EAAOC,IACvBc,EAASC,IAAcC,EAAAA,EAAAA,WAAS,MAAMX,GAAMA,EAAIS,UAsBvD,OArBAG,EAAAA,EAAAA,IAAU,KACR,IAAIZ,EAAMP,EAAWC,EAAOC,GAC5B,IAAKK,EACH,OAAOU,GAAW,GAEpB,IAAId,EAAWL,EAAiBM,IAAIF,GACpC,MAAMkB,EAAeA,KACnBH,EAAWV,EAAIS,QAAQ,EAKzB,OAHAT,EAAIE,WACJF,EAAIc,YAAYD,GAChBA,IACO,KACLb,EAAIe,eAAeF,GACnBb,EAAIE,WACAF,EAAIE,UAAY,IACN,MAAZN,GAA4BA,EAASoB,OAAOhB,EAAIG,QAElDH,OAAMO,CAAS,CAChB,GACA,CAACb,IACGe,CACT,CCgDA,MAQA,EA3FO,SAA8BQ,GACnC,MAAMC,EAAQC,OAAOC,KAAKH,GAC1B,SAASI,EAAI3B,EAAO4B,GAClB,OAAI5B,IAAU4B,EACLA,EAEF5B,EAAQ,GAAGA,SAAa4B,IAASA,CAC1C,CAIA,SAASC,EAAYC,GACnB,MAAMF,EAJR,SAAiBE,GACf,OAAON,EAAMO,KAAKC,IAAIR,EAAMS,QAAQH,GAAc,EAAGN,EAAMZ,OAAS,GACtE,CAEesB,CAAQJ,GACrB,IAAIK,EAAQZ,EAAiBK,GAE7B,OAD+BO,EAAV,kBAAVA,EAA+BA,EAAQ,GAAX,KAAgC,QAAQA,aACxE,eAAeA,IACxB,CAiEA,OAvBA,SAAuBC,EAAiBC,EAAWvB,GACjD,IAAIwB,EAoBJ,MAnB+B,kBAApBF,GACTE,EAAgBF,EAChBtB,EAASuB,EACTA,GAAY,IAEZA,EAAYA,IAAa,EACzBC,EAAgB,CACd,CAACF,GAAkBC,IAYhB3B,GATK6B,EAAAA,EAAAA,UAAQ,IAAMd,OAAOe,QAAQF,GAAeG,QAAO,CAACzC,EAAK0C,KAAuB,IAApBC,EAAKN,GAAUK,EAOrF,MANkB,OAAdL,IAAoC,IAAdA,IACxBrC,EAAQ2B,EAAI3B,EAvDlB,SAAqB8B,GACnB,IAAIK,EAAQZ,EAAiBO,GAI7B,MAHqB,kBAAVK,IACTA,EAAQ,GAAGA,OAEN,eAAeA,IACxB,CAiDyBS,CAAYD,KAEf,SAAdN,IAAsC,IAAdA,IAC1BrC,EAAQ2B,EAAI3B,EAAO6B,EAAYc,KAE1B3C,CAAK,GACX,KAAK,CAAC6C,KAAKC,UAAUR,KACIxB,EAC9B,CAEF,CACsBiC,CAAqB,CACzCC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,O,2DC3GP,MAAMC,EAA6BC,EAAAA,YAAiB,CAAAb,EAKjDc,KAAQ,IAL0C,UACnDC,EAAS,SACTC,EACAC,GAAIC,EAAY,SACbC,GACJnB,EAEC,OADAgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,mBACpBK,EAAAA,EAAAA,KAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJP,EAAcW,YAAc,gBAC5B,U,gDCVA,MAAMC,EAAmB,CACvB,CAACC,EAAAA,IAAW,OACZ,CAACC,EAAAA,IAAU,QAEPC,EAAiCd,EAAAA,YAAiB,CAAAb,EASrDc,KAAQ,IAT8C,SACvDE,EAAQ,UACRD,EAAS,SACTa,EACAC,GAAIC,GAAS,EAAK,aAClBC,GAAe,EAAK,cACpBC,GAAgB,EAAK,OACrBC,GAAS,KACNd,GACJnB,EAEC,OADAgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,cACpBK,EAAAA,EAAAA,KAAKa,EAAAA,EAAmB,CAC1CpB,IAAKA,EACLqB,eAAgBC,EAAAA,EAChBP,GAAIC,EACJC,aAAcA,EACdC,cAAeA,EACfC,OAAQA,KACLd,EACHkB,UAAUC,EAAAA,EAAAA,IAAYV,GACtBA,SAAUA,CAACW,EAAQC,IAA4B3B,EAAAA,aAAmBe,EAAU,IACvEY,EACHzB,UAAWO,IAAWP,EAAWa,EAAST,MAAMJ,WAAYwB,IAAWd,EAAAA,IAAYc,IAAWE,EAAAA,KAAY,GAAGzB,aAAqBQ,EAAiBe,OAErJ,IAEJZ,EAAkBJ,YAAc,oBAChC,U,0BClCA,MAAMmB,EAA+B7B,EAAAA,YAAiB,CAAAb,EAMnDc,KAAQ,IAN4C,SACrDE,EAAQ,UACRD,EAAS,WACT4B,EAAa,QAAO,YACpBC,GAAc,KACXzB,GACJnB,EAEC,OADAgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,qBACpBK,EAAAA,EAAAA,KAAKwB,EAAAA,EAAqB,CAC5C/B,IAAKA,KACFK,EACHJ,UAAWO,IAAWP,EAAWC,GACjC2B,WAAYA,EACZC,YAAaA,GACb,IAEJF,EAAgBnB,YAAc,kBAC9B,UCjBA,MAAMuB,GAAgBC,E,QAAAA,GAAiB,MACjCC,EAA8BnC,EAAAA,YAAiB,CAAAb,EAKlDc,KAAQ,IAL2C,UACpDC,EAAS,SACTC,EACAC,GAAIC,EAAY4B,KACb3B,GACJnB,EAEC,OADAgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,oBACpBK,EAAAA,EAAAA,KAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJ6B,EAAezB,YAAc,iBAC7B,U,eCHA,SAAS0B,EAAiB9B,GACxB,OAAoBE,EAAAA,EAAAA,KAAKM,EAAmB,IACvCR,GAEP,CACA,SAAS+B,EAAmB/B,GAC1B,OAAoBE,EAAAA,EAAAA,KAAK8B,EAAAA,EAAM,IAC1BhC,GAEP,CACA,MAAMiC,EAAyBvC,EAAAA,YAAiB,CAAAb,EA+B7Cc,KAAQ,IA/BsC,SAC/CE,EAAQ,UACRD,EAAS,SACTa,EACA,kBAAmByB,EAAc,UACjCC,EAAY,QAAO,WACnBC,EAAU,KAGVC,GAAO,EAAK,SACZC,GAAW,EAAI,SACfC,GAAW,EAAI,OACfC,GAAS,EAAK,gBACdC,EAAe,OACfC,EAAM,OACNC,EAAM,UACNC,EAAS,UACTC,GAAY,EAAI,aAChBC,GAAe,EAAI,aACnBC,GAAe,EAAI,oBACnBC,EAAmB,UACnBC,EAAS,OACTC,EAAM,UACNC,EAAS,QACTC,EAAO,WACPC,EAAU,SACVC,EAAQ,kBACRC,EACAC,QAASC,EAAY,iBACrBC,GAAmB,KAChB1D,GACJnB,EACC,MAAM8E,GAAeC,EAAAA,EAAAA,UACrB/D,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,aACxC,MAAOgE,EAAeC,IAAoB1G,EAAAA,EAAAA,WAAS,GAC7C2G,GAAaC,EAAAA,EAAAA,GAAiBrB,GAC9BsB,EAA0BC,EAAc9B,GAAc,KAAM,OAClE/E,EAAAA,EAAAA,YAAU,KAGRyG,EAAiB1B,EAAaC,IAAS4B,EAA0B5B,EAAK,GACrE,CAACA,EAAMD,EAAY6B,IACtB,MAAME,GAAezF,EAAAA,EAAAA,UAAQ,KAAM,CACjCiE,OAAQoB,KACN,CAACA,IAaL,MAQMK,GAAiBC,EAAAA,EAAAA,cAAYC,IAA8BpE,EAAAA,EAAAA,KAAK,MAAO,IACxEoE,EACH1E,UAAWO,IAAW,GAAGN,aAAqB0D,MAC5C,CAACA,EAAmB1D,IAClB0E,EAAeC,IAA4BtE,EAAAA,EAAAA,KAAK,MAAO,IACxDsE,KACAxE,EACHJ,UAAWO,IAAWP,EAAWwC,EAAa,GAAGvC,KAAYuC,IAAevC,EAAU,GAAGA,KAAYsC,KACrG,kBAAmBD,EACnBzB,SAAUA,IAEZ,OAAoBgE,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACnCjE,SAAU,EAAEoD,IAAkBzB,GAAcsB,IAAqBa,EAAa,CAAC,IAAiBrE,EAAAA,EAAAA,KAAKyE,EAAAA,EAAaC,SAAU,CAC1HtG,MAAO6F,EACP1D,UAAuBP,EAAAA,EAAAA,KAAK2E,EAAAA,EAAW,CACrCxC,KAAMwB,EACNlE,IAAKA,EACL2C,SAAUA,EACVM,UAAWA,EACXL,SAAUA,EACVM,UAAWA,EACXC,aAAcA,IAAiBN,EAC/BO,aAAcA,EACdC,oBAAqBA,EACrBP,gBAAiBA,EACjBC,OAAQA,EACRC,OAAQoB,EACRX,QAnCc,SAAC0B,GACfA,IAAMA,EAAKC,MAAMC,WAAa,WAAU,QAAAC,EAAAnI,UAAAC,OADhBmI,EAAI,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,EAAA,GAAAtI,UAAAsI,GAErB,MAAXhC,GAAmBA,EAAQ0B,KAASI,EACtC,EAiCM7B,WAAYA,EACZJ,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXG,SApCe,SAACwB,GAChBA,IAAMA,EAAKC,MAAMC,WAAa,IAAG,QAAAK,EAAAvI,UAAAC,OADRmI,EAAI,IAAAC,MAAAE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,EAAA,GAAAxI,UAAAwI,GAErB,MAAZhC,GAAoBA,KAAY4B,EAClC,EAkCM1B,QApDAC,IACAjB,GAGGmB,EAAa4B,UAAS5B,EAAa4B,QAAU,IAAIC,EAAAA,EAAsB,CAC1EC,yBAAyB,KAEpB9B,EAAa4B,UAEfG,EAAAA,EAAAA,MA4CHC,WAAY7D,EACZ8D,mBAAoB7D,EACpBqC,eAAgBA,EAChBG,aAAcA,QAGlB,IAEJtC,EAAU7B,YAAc,YACxB,QAAexC,OAAOiI,OAAO5D,EAAW,CACtC6D,KAAMrG,EACNsG,OAAQxE,EACRyE,MAAOnE,G,kHCtIT,MAAMoE,EAA2BvG,EAAAA,YAAiB,CAAAb,EAK/Cc,KAAQ,IALwC,SACjDE,EAAQ,UACRD,EAAS,GACTE,KACGE,GACJnB,EACCgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,gBACxC,MAAME,EAAYD,IAAOE,EAAMkG,KAAO,IAAM,QAC5C,OAAoBhG,EAAAA,EAAAA,KAAKH,EAAW,IAC/BC,EACHL,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,IACjC,IAEJoG,EAAY7F,YAAc,cAC1B,U,yBCbA,MAAM+F,EAA8BzG,EAAAA,YAAiB,CAAAb,EAIlDc,KAAQ,IAJ2C,SACpDc,EAAQ,SACRZ,KACGG,GACJnB,EACCgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,mBACxC,MAAMuG,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3B,OAAoBpG,EAAAA,EAAAA,KAAKqG,EAAAA,EAAU,CACjC7F,MAAO0F,IAAWA,EAAQI,aACvBxG,EACHS,UAAuBP,EAAAA,EAAAA,KAAK,MAAO,CACjCP,IAAKA,EACLC,UAAWC,EACXY,SAAUA,KAEZ,IAEJ0F,EAAe/F,YAAc,iBAC7B,U,eCjBA,MAAMqG,EAA4B/G,EAAAA,YAAiB,CAAAb,EAShDc,KAAQ,IATyC,SAClDE,EAAQ,UACRD,EAAS,SACTa,EAAQ,MACRiG,EAAQ,oBAER5G,GAAIC,EAAY,SAAQ,QACxB4G,KACG3G,GACJnB,EACCgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,kBACxC,MAAM,SACJ+G,EAAQ,SACRJ,IACEH,EAAAA,EAAAA,YAAWC,EAAAA,IAAkB,CAAC,EAC5BO,GAAc7C,EAAAA,EAAAA,IAAiB8C,IAC/BH,GAASA,EAAQG,GACjBF,GAAUA,GAAU,IAK1B,MAHkB,WAAd7G,IACFC,EAAM+G,KAAO,WAEK7G,EAAAA,EAAAA,KAAKH,EAAW,IAC/BC,EACHL,IAAKA,EACLgH,QAASE,EACT,aAAcH,EACd9G,UAAWO,IAAWP,EAAWC,GAAW2G,GAAY,aACxD/F,SAAUA,IAAyBP,EAAAA,EAAAA,KAAK,OAAQ,CAC9CN,UAAW,GAAGC,YAEhB,IAEJ4G,EAAarG,YAAc,eAC3B,U,eCnCA,MAAM4G,EAA+BtH,EAAAA,YAAiB,CAAAb,EAGnDc,KAAQ,IAH4C,OACrDgD,KACG3C,GACJnB,EACC,MAAMuH,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACrBvC,GAAaC,EAAAA,EAAAA,IAAiB,KACvB,MAAXoC,GAAuC,MAApBA,EAAQQ,UAAoBR,EAAQQ,WAC7C,MAAVjE,GAAkBA,GAAQ,IAE5B,OAAoBzC,EAAAA,EAAAA,KAAK+B,EAAAA,EAAW,CAClCtC,IAAKA,EACL0C,OAAoB,MAAX+D,IAAmBA,EAAQI,aACjCxG,EACH0D,kBAAkB,EAClBf,OAAQoB,GACR,IAEJiD,EAAgB5G,YAAc,kBAC9B,UCpBM6G,EAA0BvH,EAAAA,YAAiB,CAAAb,EAK9Cc,KAAQ,IALuC,UAChDC,EAAS,SACTC,EACAC,GAAIC,EAAY,UACbC,GACJnB,EAEC,OADAgB,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,gBACpBK,EAAAA,EAAAA,KAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJiH,EAAW7G,YAAc,aACzB,UCLM8G,EAAsBxH,EAAAA,YAAiB,CAACM,EAAOL,KACnD,MACEE,SAAUsH,EAAe,OACzBC,GAAS,EAAI,QACbC,EAAU,QAAO,GACjBC,EAAE,MACFC,EAAK,OACLC,EAAM,UACN5H,EAEAE,GAAIC,EAAY,MAAK,SACrByG,EAAQ,SACRI,EAAQ,SACRa,EAAQ,iBACRC,GAAmB,KAChBC,IACDC,EAAAA,EAAAA,IAAgB5H,EAAO,CACzBwG,SAAU,aAEN3G,GAAWI,EAAAA,EAAAA,IAAmBkH,EAAiB,UAC/CU,GAAiBxD,EAAAA,EAAAA,cAAY,WACrB,MAAZoD,GAAoBA,KAAS3K,WACzB4K,GAAoBlB,IACV,MAAZI,GAAoBA,GAAS,GAEjC,GAAG,CAACa,EAAUC,EAAkBlB,EAAUI,SAKb5J,IAAzB2K,EAAgBG,MAAoC,QAAd/H,IACxC4H,EAAgBG,KAAO,cAEzB,IAAIC,EAAc,GAAGlI,WACC,kBAAXuH,IAAqBW,EAAc,GAAGA,KAAeX,KAChE,MAAMY,GAAgBtJ,EAAAA,EAAAA,UAAQ,KAAM,CAClCkI,SAAUA,IAAkB,MAAZA,OAAmB,EAASA,GAAUJ,GACtD3G,WACA2G,WAAYA,EACZY,YACE,CAACvH,EAAU2G,EAAUY,EAAQR,IACjC,OAAoB1G,EAAAA,EAAAA,KAAKoG,EAAAA,EAAc1B,SAAU,CAC/CtG,MAAO0J,EACPvH,UAAuBP,EAAAA,EAAAA,KAAK+H,EAAAA,EAAkBrD,SAAU,CACtDtG,MAAOuJ,EACPpH,UAAuBP,EAAAA,EAAAA,KAAKH,EAAW,CACrCJ,IAAKA,KACFgI,EACH/H,UAAWO,IAAWP,EAAWC,EAAUuH,GAAUW,EAAaV,GAAW,GAAGxH,KAAYwH,IAAWC,GAAM,MAAMA,IAAME,GAAU,UAAUA,IAAUD,GAAS,SAASA,UAG7K,IAEJL,EAAO9G,YAAc,SACrB,QAAexC,OAAOiI,OAAOqB,EAAQ,CACnCgB,MAAOjC,EACPM,SAAUJ,EACVlE,UAAW+E,EACXmB,KAAMlB,EACNmB,OAAQ3B,G","sources":["../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js"],"sourcesContent":["import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport { getChildRef } from '@restart/ui/utils';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: getChildRef(children),\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const handleHide = useEventCallback(onHide);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef(({\n  onHide,\n  ...props\n}, ref) => {\n  const context = useContext(NavbarContext);\n  const handleHide = useEventCallback(() => {\n    context == null || context.onToggle == null || context.onToggle();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true,\n    onHide: handleHide\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});"],"names":["matchersByWindow","WeakMap","getMatcher","query","targetWindow","matchers","get","Map","set","mql","matchMedia","refCount","media","useMediaQuery","arguments","length","undefined","window","matches","setMatches","useState","useEffect","handleChange","addListener","removeListener","delete","breakpointValues","names","Object","keys","and","next","getMaxQuery","breakpoint","Math","min","indexOf","getNext","value","breakpointOrMap","direction","breakpointMap","useMemo","entries","reduce","_ref","key","getMinQuery","JSON","stringify","createBreakpointHook","xs","sm","md","lg","xl","xxl","OffcanvasBody","React","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","children","in","inProp","mountOnEnter","unmountOnExit","appear","TransitionWrapper","addEndListener","transitionEndListener","childRef","getChildRef","status","innerProps","EXITING","OffcanvasHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH5","divWithClassName","OffcanvasTitle","DialogTransition","BackdropTransition","Fade","Offcanvas","ariaLabelledby","placement","responsive","show","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","renderStaticNode","modalManager","useRef","showOffcanvas","setShowOffcanvas","handleHide","useEventCallback","hideResponsiveOffcanvas","useBreakpoint","modalContext","renderBackdrop","useCallback","backdropProps","renderDialog","dialogProps","_jsxs","_Fragment","ModalContext","Provider","BaseModal","node","style","visibility","_len","args","Array","_key","_len2","_key2","current","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","assign","Body","Header","Title","NavbarBrand","href","NavbarCollapse","context","useContext","NavbarContext","Collapse","expanded","NavbarToggle","label","onClick","onToggle","handleClick","e","type","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","variant","bg","fixed","sticky","onSelect","collapseOnSelect","controlledProps","useUncontrolled","handleCollapse","role","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle"],"sourceRoot":""}