{"version":3,"file":"static/js/8550.12d0fb29.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Author/AuthorIcon.js","app/Layout/Main/CommonComponents/NotFound/NoCardData.js","app/Layout/Main/Home/Dashboard/SkeletonComponents/SkSocialAccounts.js","app/Layout/Main/Home/Dashboard/SocialAccount.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Author from './Author';\r\nimport { GET_NETWORK_ICON } from '../../../../../utils';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\n\r\nclass AuthorIcon extends Component {\r\n       render() {\r\n              const { networkId } = this.props;\r\n              return (\r\n                     <div className='position-relative me-2'>\r\n                            <Author {...this.props}/>\r\n                            <div className=\"position-absolute rounded-circle h-18px w-18px f-center bg-body\" style={{padding: 3, right: 0, bottom:0}}>\r\n                                   <img className=\"object-center-contain\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(networkId)}.svg`)} height=\"18\" width=\"18\" alt=\"Instagram\" />\r\n                            </div>\r\n                     </div>\r\n              );\r\n       }\r\n}\r\n\r\nexport default AuthorIcon;","import React, { Component } from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\n\r\nclass NoCardData extends Component {\r\n\r\n       render() {\r\n              const { title, desc, method, methodTitle, subTitle, subMethod } = this.props\r\n              return <div className={`f-center py-4 h-100 w-100 flex-column`} style={{minHeight:200}}>\r\n                            <div className=\"d-flex flex-column align-items-center w-100\">\r\n                                   <Row  className=\"mb-2 text-center justify-content-center gx-0 w-100\">\r\n                                          <Col xxl={8} xl={10}>\r\n                                          <h4 className={`text-gray-dark fw-semibold text-center`}>{title}</h4>\r\n                                          {desc ? <p>{desc}</p> : null}\r\n                                          </Col>\r\n                                   </Row>\r\n                            </div>\r\n                            {method ?\r\n                            <div className=\"d-flex\">\r\n                                   <Button variant='primary' className=\"m-2 btn-min-w\" onClick={()=>method()}>\r\n                                          {methodTitle}\r\n                                   </Button>\r\n                                   {subTitle ? <Button variant='secondary' className=\"m-2 btn-min-w\" onClick={()=>subMethod()}>\r\n                                          {subTitle}\r\n                                   </Button> : null}\r\n                            </div> \r\n                            : null}\r\n                     </div>\r\n       }\r\n}\r\n\r\nexport default NoCardData;","import { generateRandomArray } from '../../../../../../utils';\r\nconst SkSocialAccounts = () => {\r\n    return <div className=\"\">\r\n        {generateRandomArray(4).map((number, index) => (<div key={index} className=\"d-flex align-items-center pt-2 pb-2\">\r\n            <div className=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\">\r\n                <div className=\"sk_img symbol symbol-38 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                <div className=\"overflow-hidden w-100\" style={{ maxWidth: 130 }}>\r\n                    <p className=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p>\r\n                    <span className=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span>\r\n                </div>\r\n            </div>\r\n            <span className=\"d-flex align-items-end flex-column flex-shrink-0\" style={{ width: 100 }}>\r\n                <p className=\"sk_line sk_line_80 sk_line_height_10 mb-2\"></p>\r\n                <span className=\"sk_line sk_line_100 sk_line_height_8 mb-0 d-block\"></span>\r\n            </span>\r\n        </div>\r\n        ))}\r\n    </div>\r\n\r\n}\r\n\r\nexport default SkSocialAccounts;\r\n","import React, { Component } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME, showAddAccounntAlert } from \"../../../../../utils\";\r\nimport { Col, Card, Button, Image } from \"react-bootstrap\";\r\nimport SkSocialAccounts from \"./SkeletonComponents/SkSocialAccounts\";\r\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport NoCardData from \"../../CommonComponents/NotFound/NoCardData\";\r\nimport AuthorIcon from \"../../CommonComponents/Author/AuthorIcon\";\r\nimport withRouter from '../../../../routes/WithRouter';\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nconst AccountList = ({feed, item, index, reconnectAccount}) => {\r\n    const isConnected = !feed ? item.ConnectedAccounts.api == 2 ? true : false : false\r\n    return  <div className=\"d-flex align-items-center pt-2 pb-2\" key={index}>\r\n        <div className=\"d-flex align-items-center flex-grow-1\">\r\n            {feed ? \r\n            <span className=\"h-38px w-38px rounded-circle d-flex align-items-center flex-shrink-0 me-1\">\r\n                <Image src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.Network.id)}.svg`)} height={43} width={43} alt={GET_NETWORK_NAME(item.Network.id)} fluid/>\r\n            </span>\r\n            :\r\n            <AuthorIcon imageSize={38} \r\n            symbolClass={'symbol-label fw-bolder text-uppercase fs-5'} \r\n            className={'symbol symbol-38 rounded-circle flex-shrink-0 me-2 overflow-hidden'} \r\n            name={item.ConnectedAccounts.accountName} profileUrl={item.ConnectedAccounts.profilePicture} networkId={item.Network.id} />\r\n            }\r\n            <div className=\"d-flex text-left flex-column conn_user_info w-75\">\r\n                <h5 className=\"w-75 text-nowrap overflow-hidden d-block text-ellipsis mb-0\">{feed ? ReactHtmlParser(item.Feed.feedName): ReactHtmlParser(item.ConnectedAccounts.accountName)}</h5>\r\n                {!feed ? <small className=\"text-nowrap overflow-hidden d-block text-ellipsis\">@{item.ConnectedAccounts.accountName}</small> : null}\r\n            </div>\r\n        </div>\r\n        <div className=\"d-flex flex-column align-items-end\">\r\n            {isConnected ? <div className=\"text-success d-flex fs-8\">\r\n                <span className=\"me-1\">\r\n                    <FontAwesomeIcon type={'solid'} icon={'check'}/>\r\n                </span>\r\n                <span className=\"fw-bold\">Connected</span>\r\n            </div>\r\n            : <Button variant=\"link\" onClick={() => reconnectAccount({networkId: item.Network.id, networkName: item.Network.name})}>Reconnect</Button>}\r\n            <span className='text-gray-600 fs-9'>{item.Network.name} Profile</span>\r\n        </div>\r\n    </div>\r\n}\r\nclass SocialAccount extends Component{\r\n    \r\n    reconnectAccount = (obj) => {\r\n        const item = { id: obj.networkId, name: (obj.networkName).toLowerCase() }\r\n        showAddAccounntAlert(item, true, false)\r\n    }\r\n    \r\n    connectAcc = () => {\r\n        if(checkPermission('networkManager', 'manageAccount')) this.props.navigate(\"/social-account\")\r\n    }\r\n\r\n    render(){\r\n        const { loader, accounts } = this.props;\r\n        const feeds = accounts?.feeds\r\n        const allAccounts = accounts?.connectedAccounts\r\n        return <Col sm={6}>\r\n            <Card className=\"card-stretch gutter-b\">\r\n                <Card.Body>\r\n                    <div className=\"f-between mb-3\">\r\n                        <div className=\"h4\">Social Accounts</div>\r\n                        {allAccounts && allAccounts.length > 5 ? <Link to={`/social-account`} className=\"btn btn-link\">View all</Link> : null}\r\n                    </div>\r\n                        {loader ? \r\n                        <div className=\"pe-2\" style={{height:160, overflowX:'auto'}}>\r\n                            <SkSocialAccounts /> \r\n                        </div>\r\n                        :\r\n                        allAccounts && allAccounts.length > 0 ?\r\n                        <div className=\"pe-2\" style={{height:160, overflowX:'auto'}}> \r\n                            {feeds && feeds.map((item, index) => {\r\n                                    return <AccountList key={index} feed={true} item={item} index={index} reconnectAccount={this.reconnectAccount}/>\r\n                                })}\r\n                                \r\n                            {allAccounts.map((item, index) => {\r\n                                return <AccountList key={index} feed={false} item={item} index={index} reconnectAccount={this.reconnectAccount}/>\r\n                            })}\r\n                        </div> :\r\n                        <div style={{height:200}}>\r\n                            <NoCardData title=\"Add your Social Accounts\" desc=\"Connecting your social media platform is the first step.\" methodTitle=\"Connect\" method={this.connectAcc} />\r\n                        </div>\r\n                        }\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accounts: state.dashboardData.accounts,\r\n        loader: state.dashboardData.accounts_loader\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(SocialAccount))"],"names":["AuthorIcon","Component","render","networkId","this","props","_jsxs","className","children","_jsx","Author","style","padding","right","bottom","src","baseUrl","GET_NETWORK_ICON","height","width","alt","NoCardData","title","desc","method","methodTitle","subTitle","subMethod","minHeight","Row","Col","xxl","xl","Button","variant","onClick","SkSocialAccounts","generateRandomArray","map","number","index","maxWidth","AccountList","_ref","feed","item","reconnectAccount","isConnected","ConnectedAccounts","api","Image","Network","id","GET_NETWORK_NAME","fluid","imageSize","symbolClass","name","accountName","profileUrl","profilePicture","ReactHtmlParser","Feed","feedName","FontAwesomeIcon","type","icon","networkName","SocialAccount","constructor","arguments","obj","toLowerCase","showAddAccounntAlert","connectAcc","checkPermission","navigate","loader","accounts","feeds","allAccounts","connectedAccounts","sm","Card","Body","length","Link","to","overflowX","connect","state","dashboardData","accounts_loader","withRouter"],"sourceRoot":""}