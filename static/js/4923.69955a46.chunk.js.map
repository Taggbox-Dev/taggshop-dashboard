{"version":3,"file":"static/js/4923.69955a46.chunk.js","mappings":"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","sources":["app/Authentication/Components/OtherAuthAction.js","app/Authentication/ForgotPassword.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nconst OtherAuthAction = ({ text, link, linkText }) => <div className=\" text-center fw-normal fs-8 mt-lg-5 mt-1 f-center mb-5\">{text}\r\n       <Link to={link} className=\"btn btn-link text-decoration-none fw-bold fs-8 p-0 ms-1\">{linkText}</Link>\r\n</div>\r\nexport default OtherAuthAction;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button} from 'react-bootstrap';\r\nimport OtherAuthAction from \"./Components/OtherAuthAction\";\r\nimport { forgotPassword } from '../../actions/loginActions'\r\nimport { validateEmail } from \"../../utils\";\r\nimport FormTerms from \"./Components/FormTerms\";\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    state = {\r\n        accountEmailId: null,\r\n        emailError: null,\r\n        emailErrorMessage: null,\r\n        success: null,\r\n        btnLoader: false,\r\n    }\r\n    onEmailTextChange = event => {\r\n        this.setState({ accountEmailId: event.target.value, emailError: null, emailErrorMessage: null })\r\n    }\r\n    onClickToForgot = event => {\r\n        const { accountEmailId } = this.state;\r\n        const { activeProduct } = this.props\r\n        var self = this;\r\n        self.setState({ btnLoader: true })\r\n        if (accountEmailId && String(accountEmailId).trim().length > 0 && validateEmail(accountEmailId)) {\r\n            forgotPassword({ emailId: accountEmailId, activeProduct }).then((response) => {\r\n                self.setState({ success: true, emailErrorMessage: null, btnLoader: false, })\r\n            }).catch((ex) => {\r\n                const { data } = ex.response\r\n                self.setState({ emailError: true, emailErrorMessage: `Couldn't find your account with this e-mail`, btnLoader: false, })\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ emailError: true, btnLoader: false, emailErrorMessage: accountEmailId && String(accountEmailId).trim().length > 0 ? 'Enter valid email.' : 'Email id is required.'})\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { prefix } = this.props\r\n        const { accountEmailId, emailError, success, emailErrorMessage, btnLoader } = this.state\r\n        return <div className=\"w-100 mb-lg-0 mb-3\">\r\n            <div className=\"text-start mb-5\">\r\n                <h1 className=\"mb-0 display-2 fw-bold mb-3\">Forgot Password ?</h1>\r\n                <div className=\"text-gray-500 fs-8\">Enter your email to reset your password.</div>\r\n            </div>\r\n            {success ? <div className=\"alert alert-success py-2\" role=\"alert\">\r\n                Success! Please check your e-mail to reset your password.\r\n            </div>: null}\r\n            <div className=\"mb-8\">\r\n                <Form.Group className=\"mb-4 mb-xl-5\">\r\n                    <Form.Label className=\"fw-bold\" htmlFor=\"email_\">Email</Form.Label>\r\n                    <Form.Control type=\"email\" size=\"lg\" placeholder=\"you@yourcompany.com\" className={`${emailError ? `is-invalid` : ``}`} value={accountEmailId || ''} onChange={this.onEmailTextChange}  />\r\n                    {emailError ? <span className=\"invalid-feedback\">{emailErrorMessage}</span> : null}\r\n                </Form.Group>\r\n            </div>\r\n            <div className=\"d-grid mb-4 w-100\">\r\n                <Button variant=\"primary\" size={'lg'} type=\"submit\" className={`${btnLoader ? ' disabled' : ''}`}  onClick={this.onClickToForgot}>\r\n                    <span className=\"indicator-label\" style={{ display: btnLoader ? 'none' : 'block' }}>Reset Password</span>\r\n                    <span className=\"indicator-progress\" style={{ display: !btnLoader ? 'none' : 'block' }}> Please wait...\r\n                        <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n            <OtherAuthAction text=\"Back to\" link={'/accounts/login'} linkText={'Login'} />\r\n            <FormTerms/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ForgotPassword"],"names":["_ref","text","link","linkText","_jsxs","className","children","_jsx","Link","to","ForgotPassword","Component","constructor","props","super","state","accountEmailId","emailError","emailErrorMessage","success","btnLoader","onEmailTextChange","event","this","setState","target","value","onClickToForgot","activeProduct","self","String","trim","length","validateEmail","forgotPassword","emailId","then","response","catch","ex","data","render","prefix","role","Form","Group","Label","htmlFor","Control","type","size","placeholder","onChange","Button","variant","onClick","style","display","OtherAuthAction","FormTerms"],"sourceRoot":""}