{"version":3,"file":"static/js/9391.5d3cdba8.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Rating.js","app/Layout/Main/Moderation/Header/Elements/QuickSearch.js","app/Layout/Main/Moderation/Header/Elements/dateRange/dateRange.js","app/Layout/Main/Moderation/Header/Elements/dateRange/index.js","app/Layout/Main/Moderation/Header/Elements/index.js","app/Layout/Main/Moderation/Elements/Pagination.js","app/Layout/Main/Moderation/UgcRights/Elements/ErrorModal.js","app/Layout/Main/Moderation/UgcRights/Elements/PermissionError.js","app/Layout/Main/Moderation/Header/Elements/ModSubHeader.js","app/Layout/Main/Moderation/Header/index.js","app/Layout/Main/Moderation/Filters/postTagSearch.js","app/Layout/Main/Moderation/Filters/index.js","app/Layout/Main/Moderation/Filters/filterTab.js","app/Layout/Main/Moderation/UgcRights/Elements/CardPreview.js","app/Layout/Main/Moderation/UgcRights/Elements/CopyUrl.js","actions/tinyUrlAction.js","app/Layout/Main/Moderation/UgcRights/Elements/CreateTemplate.js","app/Layout/Main/Moderation/UgcRights/Elements/GeneralRequest.js","app/Layout/Main/Moderation/UgcRights/Elements/SocialAccounts.js","app/Layout/Main/Moderation/UgcRights/Elements/ChooseMethod.js","app/Layout/Main/Moderation/UgcRights/index.js","app/Layout/Main/Moderation/UgcRights/Status/ApprovedModal.js","app/Layout/Main/Moderation/UgcRights/Status/RadialChart.js","app/Layout/Main/Moderation/UgcRights/Status/PendingModal.js","app/Layout/Main/Moderation/UgcRights/Status/RejectModal.js","app/Layout/Main/Moderation/UgcRights/Status/index.js","app/Layout/Main/Moderation/Elements/Skeleton.js","app/Layout/Main/Moderation/Elements/TagedProducts.js","app/Layout/Main/Moderation/Elements/Tags.js","app/Layout/Main/Moderation/Elements/ChangeOrderModal.js","app/Layout/Main/Moderation/ContentModal/EditElements/EditAside.js","app/Layout/Main/CommonComponents/MediaType/TextType.js","app/Layout/Main/Moderation/ContentModal/Elements/ModalMedia.js","app/Layout/Main/Moderation/ContentModal/EditElements/index.js","app/Layout/Main/Moderation/ContentModal/Elements/Hotspot.js","app/Layout/Main/Moderation/ContentModal/CarousalPost.js","app/Layout/Main/Moderation/ContentModal/ContentModal.js","app/Layout/Main/Moderation/Elements/RefreshPost.js","app/Layout/Main/Moderation/MasonryView.js","app/Layout/Main/Moderation/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '../../../../Assets/AssetsHelper';\r\nimport { generateRandomArray } from '../../../../utils';\r\n\r\n\r\nconst Rating = ({ rating, className, iconClass }) => {\r\n       return rating ? \r\n              <div className={`f-center ${className}`}>\r\n                     {generateRandomArray(5).map((rate, index) => <span className={`${rate > rating? 'text-gray-300' : 'text-warning'} ${iconClass}`} key={index}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'star'}/>\r\n                            </span>)\r\n                     }\r\n              </div> \r\n       : null\r\n}\r\nexport default Rating\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions'\r\nimport { Button, InputGroup, Form, Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\n\r\n\r\nclass QuickSearch extends Component {\r\n    state = { tagSearchList: [], searchPost: \"\", selected: \"\", openSearch: false }\r\n\r\n    onLoad = () => {\r\n        const { searchPost } = this.state;\r\n        if (searchPost.length > 0) {\r\n            autoCompleteSearch(searchPost).then((response) => {\r\n                const { responseData, totalTag, responseCode } = response.data;\r\n                if (responseCode === 200) this.setState({ tagSearchList: responseData?.totalTag })\r\n                else this.setState({ tagSearchList: [] })\r\n            })\r\n        }\r\n        else { this.setState({ tagSearchList: [] }) }\r\n    }\r\n\r\n    onSearchText = (text) => this.setState({ searchPost: text }, () => this.onLoad())\r\n\r\n\r\n    onClickToSearchTags = (selectSearch) => event => {\r\n        this.setState({ searchPost: selectSearch, selected: selectSearch, tagSearchList: [] }, () => this.props.searchTagsFilter(this.state.selected))\r\n    }\r\n\r\n    onClickToSearchPost = (selectSearch) => event => {\r\n        if (selectSearch && String(selectSearch).length > 0) this.setState({ searchPost: '', selected: selectSearch, tagSearchList: [] }, () => this.props.searchPostFilter(selectSearch))\r\n    }\r\n\r\n    render() {\r\n        const { tagSearchList, openSearch, searchPost } = this.state;\r\n        return <>\r\n            <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => this.setState({ openSearch: !openSearch })}>\r\n                <FontAwesomeIcon icon={openSearch ? 'xmark' : 'magnifying-glass'} />\r\n            </Button>\r\n            <Dropdown show={tagSearchList && tagSearchList.length > 0 ? true : false} className=\"assets_search_input position-absolute me-lg-2\" style={{ display: openSearch ? 'block' : 'none' }}>\r\n                <div className=\"quick_search d-flex align-items-center\">\r\n                    <InputGroup id=\"inputSpinner\" className=\"p-0 spinner-gray spinner-sm\">\r\n                        {openSearch && <Form.Control size='sm' style={{ minHeight: '32px' }} className='' id=\"assets_search_input\" placeholder=\"What are you looking for?\" value={searchPost} onChange={(e) => this.onSearchText(e.target.value)} autoComplete='off' />}\r\n                        <Button className='' size='sm' id=\"inputCloseButton\" variant=\"primary\" onClick={this.onClickToSearchPost(searchPost)}>\r\n                            <FontAwesomeIcon icon=\"magnifying-glass\" />\r\n                        </Button>\r\n                    </InputGroup>\r\n                    {(tagSearchList && tagSearchList.length > 0) ? <Dropdown.Menu className=\"w-100 dropdwon-height top-100\" style={{ overflowY: 'auto' }}>\r\n                        {\r\n                            tagSearchList.map((item) => <Dropdown.Item key={item} onClick={this.onClickToSearchTags(item)}>{item}</Dropdown.Item>)\r\n                        }\r\n                    </Dropdown.Menu> : null}\r\n                </div>\r\n            </Dropdown>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default QuickSearch;","import React, { useState } from \"react\";\r\nimport moment from 'moment'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\n\r\nconst DateRange = (props) => {\r\n    const { children, maxDate, handleOnApply, startDate, endDate } = props\r\n    return <DateRangePicker onApply={handleOnApply} startDate={startDate} endDate={endDate} initialSettings={{\r\n        locale: { format: 'DD-MM-YYYY', separator: '-' },\r\n        maxDate: maxDate,\r\n        showDropdowns: false,\r\n        startDate: startDate, endDate: endDate,\r\n        ranges: {\r\n            Today: [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\")],\r\n            Yesterday: [\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 7 Days': [\r\n                moment().subtract(6, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 30 Days': [\r\n                moment().subtract(29, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'This Month': [\r\n                moment().startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last Month': [\r\n                moment().subtract(1, 'month').startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'month').endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n        },\r\n    }}\r\n    // onCallback={handleCallback}\r\n    >\r\n        {\r\n            children\r\n        }\r\n    </DateRangePicker>\r\n\r\n}\r\nexport default DateRange","import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment'\r\nimport DateRanges from './dateRange'\r\nclass DateRange extends Component {\r\n    state = {\r\n        startDate: moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n        endDate: moment().format(\"DD-MM-YYYY\"),\r\n        maxDate: moment().endOf('month').format(\"DD-MM-YYYY\")\r\n    }\r\n    handleOnApply = (event, picker) => {\r\n        this.setState({ startDate: picker.startDate.format(\"YYYY-MM-DD\"), endDate: picker.endDate.format(\"YYYY-MM-DD\") })\r\n        this.props.onDateRangeFilter(picker.startDate.format(\"YYYY-MM-DD\"), picker.endDate.format(\"YYYY-MM-DD\"))\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { moderation } = nextProps\r\n        if (moderation && Object.keys(moderation.filter).length > 0 && moderation.filter.startDate != \"\") {\r\n            this.setState({ startDate: moment(moderation.filter.startDate).format(\"DD-MM-YYYY\"), endDate: moment(moderation.filter.endDate).format(\"DD-MM-YYYY\") })\r\n        }\r\n        if (moderation.filterBody && moderation.filterBody.dateRanges && Object.keys(moderation.filterBody.dateRanges).length == 0 && this.state.startDate != moment().subtract(30, 'days').format(\"DD-MM-YYYY\")) {\r\n            this.setState({ startDate: moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), endDate: moment().format(\"DD-MM-YYYY\") })\r\n        }\r\n    }\r\n    render() {\r\n        const { children } = this.props;\r\n        const { startDate, endDate, maxDate } = this.state;\r\n        return <DateRanges children={children} startDate={startDate} endDate={endDate} maxDate={maxDate} handleOnApply={this.handleOnApply} key={uuidv4()} />\r\n    }\r\n}\r\n\r\nexport default DateRange\r\n","import React, { useEffect, useState } from 'react'\r\nimport QuickSearch from './QuickSearch'\r\nimport DateRange from './dateRange'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport withRouter from '../../../../../routes/WithRouter';\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\r\n\r\nconst Filters = (props) => {\r\n\r\n    const [isCarosal, setisCarosal] = useState()  \r\n\r\n    useEffect(() => {\r\n        const foundItem = props.allWalls?.length && props.allWalls.find(item => item.id == props.params.id);\r\n        setisCarosal(foundItem?.carouselPost || 0);\r\n    }, [props]);\r\n\r\n    return <div className=\"d-flex flex-wrap\">\r\n        {/* dashboardData */}\r\n        \r\n          <div style={{ marginRight : 15, display : 'flex', marginTop : 6 }}>\r\n             <span style={{ padding : '0px 7px'}}>\r\n               Carousal \r\n             </span>\r\n            <Form.Check type='switch' id=\"profanityStatus\" checked={isCarosal} onChange={(e) => props.postCarosal(Number(e.target.checked)) } />\r\n         </div>\r\n\r\n        <button onClick={() => checkPermission('networkManager', 'manageFeed') ? props.navigate(`/content/managefeed/${localStorage.getItem('wallId')}`) : {}} className=\"btn btn-outline-primary text-nowrap btn-sm me-2\">\r\n        <FontAwesomeIcon icon={'list-check'} iconClass={'d-inline d-lg-none me-0 me-sm-1'} />\r\n        <span className='d-none d-lg-inline'>Manage Feeds </span>\r\n        </button>\r\n        <QuickSearch {...props} />\r\n        <DateRange {...props}>\r\n            <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"calander_\">\r\n                <FontAwesomeIcon icon={'calendar-range'} />\r\n            </Button>\r\n        </DateRange>\r\n        <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"filter_aside\">\r\n            <FontAwesomeIcon icon={'filter'} />\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withRouter(Filters);","import React from 'react'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ModerationPagination = ({ moderation, onNextNavigateClick, onPrevNavigateClick , onChangePage}) => {\r\n    const { paginateData } = moderation;\r\n    if (!paginateData || !Object.keys(paginateData).length) return null;\r\n    \r\n    return <ul className=\"pagination pagination-sm my-1 ms-3\">\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == 1 ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == 1 ? null : onPrevNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-left'} />\r\n                </span>\r\n            </li>\r\n            {\r\n            (paginateData.pages && paginateData.pages.length > 0) ? paginateData.pages.map((item, pagesIndex) => {\r\n\r\n                return (parseInt(pagesIndex) < 1) ?\r\n                    <li key={`lIi${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li> :\r\n\r\n                    (((paginateData.currentPage <= 3) && (parseInt(pagesIndex) === 2 || parseInt(pagesIndex) === 1)) || (paginateData.currentPage >= parseInt(paginateData.pages.length) - 2 && (parseInt(pagesIndex) >= parseInt(paginateData.pages.length) - 3))) ?\r\n                    <>\r\n                        {pagesIndex === parseInt(paginateData.pages.length) - 3 && parseInt(paginateData.pages.length) > 4 ?\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>:\r\n                            null\r\n                        }\r\n                        <li key={`li${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                            <span className=\"page-link\">{item}</span>\r\n                        </li>\r\n                    </>\r\n                    :\r\n                    (parseInt(paginateData.pages.length) - 3 == pagesIndex) ?\r\n                    (paginateData.currentPage > 3 && paginateData.currentPage < paginateData.pages.length - 2) ?\r\n                        <>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className={`page-item active`} onClick={onChangePage(item)}>\r\n                                <span className=\"page-link\">{paginateData.currentPage}</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                        </>\r\n                        :\r\n                        <li key={`li${pagesIndex}`} className=\"page-item disabled\"> <span className=\"page-link\">...</span> </li>\r\n\r\n                    : (parseInt(paginateData.pages.length) - 1 == pagesIndex) ?\r\n                    <li key={`li${pagesIndex}`} className={`page-item ${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li>\r\n                    : null\r\n            }) : null}\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == paginateData.totalPages ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == paginateData.totalPages ? null : onNextNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-right'} />\r\n                </span>\r\n            </li>\r\n        </ul>\r\n}\r\nexport default ModerationPagination;\r\n","import { Modal, Image, Button } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nconst ErrorModal = ({ show, onHide }) => {\r\n  return <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-3\" src={baseUrl('media/images/error/ugc-request.png')} height={206} width={500} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n              To send UGC Rights request in bulk, make sure you choose posts from a single user.\r\n            </p>\r\n            <Button className=\"btn-min-w\" size=\"lg\" onClick={onHide}>OK</Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { Image, Modal } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PermissionError = ({show, onHide}) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-7\" src={baseUrl('media/images/error/warning.svg')} height={70} width={70} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n            You do not have access to UGC Rights as per your current plan. Please upgrade your plan to unlock this feature.\r\n            </p>\r\n            <Link className=\"btn-min-w mb-5 btn btn-lg btn-primary\" size=\"lg\" to={'/price'}>Upgrade Now</Link>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PermissionError;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport { GET_UGC_POST_DETAIL, ugcModal } from '../../../../../../actions/moderationActions'\r\nimport { Container, Tooltip, OverlayTrigger, Badge, Button, Form } from 'react-bootstrap'\r\nimport ModerationPagination from '../../Elements/Pagination'\r\nimport ErrorModal from '../../UgcRights/Elements/ErrorModal'\r\nimport PermissionError from '../../UgcRights/Elements/PermissionError'\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions'\r\n\r\n\r\nconst ModSubHeader = (props) => {\r\n    const [addStatus, setAddTag] = useState(false)\r\n    const categories = [{ label: \"50\", value: 50 }, { label: \"100\", value: 100 }, { label: \"200\", value: 200 }]\r\n    const [selectedEntry, selectedEntryFun] = useState([{ label: \"50\", value: 50 }])\r\n    const [permissionError, setPermissionError] = useState(false)\r\n    const [ugcError, setUgcError] = useState(false)\r\n    const [showGetRight, setShowGetRight] = useState(false)\r\n    const [fromSnapup, setFromSnapup] = useState(false)\r\n    const { moderation, activeTab } = props\r\n    const dispatch = useDispatch()\r\n    const updateLimit = event => { \r\n        props.limitUpdate(parseInt(event.value))\r\n        selectedEntryFun(event) \r\n    }\r\n    const refreshPost = () => { props.clickToRefresh(); } \r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            checkGetRight()\r\n        };\r\n    }, [moderation])\r\n\r\n\r\n    const getRights = () => {\r\n        const { check_uncheck_all } = moderation\r\n        let userId = null\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) {\r\n                setPermissionError(true)\r\n                flag = true\r\n            }\r\n            if (post.networkId == 29) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n            if (post.type == 1) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n\r\n            if (userId == null) userId = post.username\r\n            else if (userId != null && userId != post.username && !flag) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n        })\r\n        if (!flag) {\r\n            const id = check_uncheck_all.data.map(item => item.id)\r\n            dispatch(GET_UGC_POST_DETAIL({ is_carausel: 0, postId: id, id, }))\r\n            dispatch(ugcModal(true))\r\n        }\r\n    }\r\n\r\n    const checkGetRight = () => {\r\n        const { check_uncheck_all } = moderation\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) flag = true\r\n            if (post.networkId == 29) flag = true\r\n            if (post.type == 1) flag = true\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) flag = true\r\n        })\r\n        setShowGetRight(!flag)\r\n    }\r\n\r\n    return <Container fluid>\r\n            <div className=\"f-between py-1 mod_header\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Form.Check type=\"checkbox\" id=\"select_all_\" className='btn btn-secondary btn-sm px-2 me-2 text-nowrap my-1' label={`${moderation.check_uncheck_all.data.length ? moderation.check_uncheck_all.data.length +` Selected` : `Select All`}`} onChange={props.clickToCheckAll(moderation.check_uncheck_all.status)} checked={moderation.check_uncheck_all.status}/>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh</Tooltip>}>\r\n                        <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => refreshPost()}>\r\n                            <span className='d-inline-block'><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    {moderation.check_uncheck_all && moderation.check_uncheck_all.data.length > 0 ? \r\n                    <div className=\"d-flex align-items-center mx-lg-2 mod_actions flex-wrap\">\r\n                        {activeTab == 0 || activeTab == 2 ? <Button variant='success' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(1)}>\r\n                            <FontAwesomeIcon icon={'check'} iconClass='me-1'/>\r\n                            Public\r\n                        </Button>: null}\r\n                        {activeTab == 0 || activeTab == 1 ? <Button variant='danger' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(2)}>\r\n                            <FontAwesomeIcon icon={'xmark'} iconClass='me-1'/>\r\n                            Private\r\n                        </Button>: null}\r\n                        <Button variant='warning' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterDeleteAll}>\r\n                            <FontAwesomeIcon icon={'trash-can'} iconClass='me-1'/>\r\n                            Delete\r\n                        </Button>\r\n                        {/* {!(UserRuleManualTag || UserRuleEnableAI) ? <Button variant='primary' size=\"sm\" className=\"me-2\" onClick={() => addTag()}>\r\n                            <FontAwesomeIcon type=\"solid\" icon={'tag'} iconClass='me-1'/>\r\n                            Add Tag\r\n                        </Button>:null} */}\r\n                        {showGetRight ? <Button variant='dark' size=\"sm\" className=\"me-2 my-1\" onClick={() => checkPermission('contentGallery', 'editGallery', true) ? getRights() : {}}>\r\n                            <FontAwesomeIcon icon={'user-check'} iconClass='me-1'/>\r\n                            Get Rights\r\n                        </Button>:null}\r\n                    </div>\r\n                    \r\n                    :null}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Select className={`selectpicker selectpicker-sm d-none d-lg-flex`} classNamePrefix=\"selectpicker\" isSearchable={false} options={categories} value={selectedEntry} onChange={e => updateLimit(e)} /> \r\n                    <ModerationPagination {...props} />\r\n                </div>\r\n            </div>\r\n        <PermissionError show={permissionError} fromSnapup={fromSnapup} onHide={() => setPermissionError(false)} />\r\n        <ErrorModal show={ugcError} onHide={() => setUgcError(false)} />\r\n    </Container>\r\n\r\n}\r\nexport default ModSubHeader;","import { Nav, Badge, Container, Dropdown, NavDropdown } from 'react-bootstrap'\r\nimport Filters from './Elements'\r\nimport ModSubHeader from './Elements/ModSubHeader'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ModHeader = (props) => {\r\n    const isLoaded = props.moderation.details && Object.keys(props.moderation.details).length > 0 ? true : false\r\n    var {activeTab, totalpost, publicpost, privatepost , tabName, TabTotal } = 0\r\n    var upcomingpost = []\r\n    if(isLoaded){\r\n        activeTab = props.activeTab\r\n        totalpost = props.moderation.details.totalpost\r\n        publicpost = props.moderation.details.publicpost\r\n        privatepost = props.moderation.details.privatepost\r\n        upcomingpost = props.moderation.details.upcomingpost\r\n        tabName = activeTab == 0 ? \"All Posts\" : activeTab == 1 ? \"Public\" : activeTab == 2 ? \"Private\" : \"Upcoming\" \r\n        TabTotal = activeTab == 0 ? totalpost : activeTab == 1 ? publicpost : activeTab == 2 ? privatepost : upcomingpost \r\n    }\r\n\r\n    return <div className=\"dualheader subheader\">\r\n                 <Container className=\"f-between flex-wrap border-bottom\" fluid>\r\n                    <div className=\"d-flex align-items-center flex-wrap h-48px\">\r\n                        <Nav variant=\"underline\" className='d-none d-lg-flex'>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==0 ? 'active' :''} eventKey=\"allPost\" onClick={isLoaded ? props.clickToTab(0) : null} disabled={!isLoaded}>\r\n                                    All Posts\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 0 ? \"badge-primary\":\"badge-light-primary\"}`}>{totalpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==1 ? 'active' :''} eventKey=\"public\" onClick={isLoaded ? props.clickToTab(1) : null} disabled={!isLoaded}>\r\n                                    Public\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 1 ? \"badge-primary\":\"badge-light-primary\"}`}>{publicpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==2 ? 'active' :''} eventKey=\"private\" onClick={isLoaded ? props.clickToTab(2) : null} disabled={!isLoaded}>\r\n                                    Private\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 2 ? \"badge-primary\":\"badge-light-primary\"}`}>{privatepost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            {upcomingpost && upcomingpost > 0 ? <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==3 ? 'active' :''} eventKey=\"upcomming\">\r\n                                    Upcoming\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 3 ? \"badge-primary\":\"badge-light-primary\"}`}>{upcomingpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>:null}\r\n                        </Nav>\r\n                        <Dropdown className='d-flex d-lg-none'>\r\n                            <Dropdown.Toggle variant=\"secondary\" size='sm' id=\"mod-tab\">\r\n                            {tabName} <Badge bg=\"\" className={\"m-0 py-1 badge-light-primary mx-1\"}>{TabTotal}</Badge>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <NavDropdown.Item eventKey=\"1\" onClick={isLoaded ? props.clickToTab(0) : null} >All Posts <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{totalpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"2\" onClick={isLoaded ? props.clickToTab(1) : null} >Public <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{publicpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"3\" onClick={isLoaded ? props.clickToTab(2) : null}>Private <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{privatepost}</Badge> </NavDropdown.Item>\r\n                                {upcomingpost && upcomingpost > 0 ? <NavDropdown.Item eventKey=\"4\" onClick={isLoaded ? props.clickToTab(3) : null} >Upcoming <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{upcomingpost}</Badge> </NavDropdown.Item>:null}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center flex-wrap flex-grow-1 justify-content-end\">\r\n                        <Filters {...props} />\r\n                    </div>\r\n                </Container>\r\n                <ModSubHeader {...props} />\r\n            </div>\r\n}\r\nexport default ModHeader;\r\n\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../actions/moderationActions'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { InputGroup, Form, Button, Dropdown, Badge } from 'react-bootstrap';\r\n\r\nclass PostTagSearch extends Component {\r\n    state = { searchData: [], searchPost: \"\", selected: [], loading: false, textSearch: \"\" }\r\n\r\n    onSearchText = (textInput) => {\r\n        this.setState({ loading: true, textSearch: textInput })\r\n        if (textInput?.length > 0) {\r\n            autoCompleteSearch(textInput).then((response) => {\r\n                const { responseData , responseCode } = response.data;\r\n                this.setState({ searchData: responseCode === 200 ? responseData?.totalTag :[], loading: false })\r\n            }); \r\n\r\n        } else {\r\n            this.setState({ searchData: [], loading: false, searchPost: '', textSearch: '' });\r\n        }\r\n    };\r\n\r\n    onClickToSearch = (selectSearch, status) => event => {\r\n        if (!status) {\r\n            const { selected } = this.state;\r\n            this.state.selected.push(selectSearch)\r\n            this.setState({ searchPost: selectSearch, selected: selected , textSearch:'', searchData: [] }, () => { this.props.updateFilterPostTags(this.state.searchPost) })\r\n        }\r\n        else {\r\n            this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n            this.props.removeFilterPostTags(selectSearch)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { filterBody } = nextProps\r\n        if (filterBody.postTags.length == 0 && this.state.searchData.length > 0) this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n    }\r\n\r\n    render() {\r\n        const { searchData, loading, textSearch } = this.state;\r\n        const { postTags } = this.props; \r\n        return <div className=\"form-group tag_search mb-5 mt-3 position-relative\">\r\n                <InputGroup id=\"searchTagElements\" className={`spinner-secondary spinner-right position-relarive w-100 mb-3`}>\r\n                    <Form.Control placeholder=\"Search\" className={loading ? `spinner` : `spinner`} value={textSearch} onChange={(e)=>this.onSearchText(e.target.value)} autocomplete=\"off\"/>\r\n                    <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={'magnifying-glass'}/>\r\n                    </InputGroup.Text>\r\n                </InputGroup>\r\n                {(searchData && (searchData.length > 0 || textSearch.length > 0)) &&\r\n                <Dropdown.Menu show={true} className=\"w-100 dropdwon-height\" style={{ overflowY: 'auto' }}>\r\n                    {searchData.map((sItem, index) => {\r\n                        const isChecked = postTags.includes(sItem) || false\r\n                        return <Dropdown.Item key={index} onClick={this.onClickToSearch(sItem, isChecked)}>{sItem}</Dropdown.Item>\r\n                    })}\r\n                </Dropdown.Menu>}\r\n                <div className=\"mb-3 mb-xl-4\">\r\n                    <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                    {postTags && postTags.map((item, index) => {\r\n                        return parseInt(index) < 9 ? <Badge key={index} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                    <span className=' text-ellipsis d-block'>{item}</span>\r\n                                    <Button variant='link' size='sm' className=\"p-0 ms-1 text-gray-800\" onClick={this.onClickToSearch(item, true)}>\r\n                                        <FontAwesomeIcon icon={'xmark'} iconClass={'me-0'}/>\r\n                                    </Button>\r\n                            </Badge>\r\n                    :null})}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default PostTagSearch;","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\n// import { generateSocialName } from '../../Feeds/utils'\r\nimport { GET_NETWORK_ICON } from '../../../../../utils';\r\nimport PostTagSearch from './postTagSearch'\r\nimport { updateFilterPostTags, updateFilterSocialFeeds, updateFilterPostType, updateFilterOthers, removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeAllFilterBody } from '../../../../../actions/moderationActions'\r\nimport { Accordion, Offcanvas, Button, Image, Form } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst PostTypeCheck = ({ value, onClickPostType, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.postType.length > 0 ? moderation.filterBody.postType.filter((fin) => fin == value) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickPostType(value, isChecked)} checked={isChecked} />\r\n}\r\n\r\nconst OtherInput = ({ value, onClickOther, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.other.length > 0 ? moderation.filterBody.other.filter((fin) => fin.key == id) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickOther(id, value, isChecked)} checked={isChecked}  />\r\n}\r\n\r\n\r\nclass FilterBody extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { socialFeeds: [], postType: [], other: [], feeds: [], isActiveAside: false }\r\n        this.toogleFilter = this.toogleFilter.bind(this);\r\n    }\r\n   \r\n\r\n    toogleFilter = () => {\r\n        this.setState({ isActiveAside: !this.state.isActiveAside, })\r\n        setTimeout(() => {\r\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\r\n            if (offcanvas) {\r\n                offcanvas.classList.add('filter-backdrop');\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    onSelectFeeds = (key, value, status) => event => {\r\n        if (!status) this.props.updateFilterSocialFeeds({ key, value })\r\n        else this.props.removeFilterSocialFeeds({ key, value })\r\n    }\r\n    onClickPostType = (value, status) => event => {\r\n        if (!status) this.props.updateFilterPostType(value)\r\n        else this.props.removeFilterPostType(value)\r\n    }\r\n    onClickOther = (key, value, status) => event => {\r\n        if (!status) this.props.updateFilterOthers({ key, value })\r\n        else this.props.removeFilterOthers({ key, value })\r\n    }\r\n    componentDidMount() {\r\n        this.addEventListeners(); \r\n\r\n        if (window.feedId && window.feedId != \"\") {\r\n            const { feeds } = this.props \r\n            feeds && feeds.map((item, index) => { if (window.feedId == item.id) { this.props.updateFilterSocialFeeds({ key: item.name, value: window.feedId }) } })\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() { this.addEventListeners(); }\r\n\r\n    addEventListeners() {\r\n        const filterAside = document.getElementById(\"filter_aside\");\r\n        if (filterAside) {\r\n            filterAside.addEventListener(\"click\", this.toogleFilter);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { moderation, feeds} = this.props\r\n        const { isActiveAside } = this.state\r\n        const UserRuleEnableAI = false;\r\n        const UserRuleManualTag = true;\r\n        const postTags = moderation?.filterBody?.postTags;\r\n        \r\n\r\n        return <Offcanvas show={isActiveAside} placement={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\r\n            <Offcanvas.Body>\r\n                <div className=\"f-between px-4 py-3 border-bottom\">\r\n                    <span className=\"fs-6 fw-medium\">Add Filter</span>\r\n                    <Button variant='icon' size='sm' className='btn-active-primary' onClick={this.toogleFilter}>\r\n                        <FontAwesomeIcon icon={'xmark'}/>\r\n                    </Button>\r\n                </div>\r\n                {(UserRuleEnableAI || UserRuleManualTag) ?\r\n                    <Accordion className=\"border-bottom\" flush>\r\n                        <Accordion.Item defaultactivekey=\"0\">\r\n                            <Accordion.Header>\r\n                                <span className=\"text-uppercase fs-8 fw-medium\">Post Tags</span>\r\n                            </Accordion.Header>\r\n                            <Accordion.Body className=\"px-5 py-1\">\r\n                                {UserRuleEnableAI &&\r\n                                    <Image className='mb-3' src={baseUrl('media/svg/trusense.svg')} height={23} width={120} fluid/>\r\n                                }\r\n                                <div id=\"tag_post_btn\" className=\"collapse show\" data-parent=\"#tagspost\">\r\n                                    <PostTagSearch postTags={postTags} {...this.props} />\r\n                                </div>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                    : null}\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Social Feeds</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <div id=\"social_feed_btn\" className=\"collapse show\" data-parent=\"#post_type_drop\">\r\n                                <div className=\"checkbox-list\">\r\n                                    {\r\n                                        feeds && feeds.map((item, index) => {\r\n                                            const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.socialFeed.length > 0 ? moderation.filterBody.socialFeed.filter((fin) => fin.value == item.id) : []\r\n                                            const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n                                            return item.status ? <Form.Label key={index} className='d-flex align-items-start mb-4' htmlFor={`moderationfeed${item.id}`}>\r\n                                                    <Form.Check type=\"checkbox\" id={`moderationfeed${item.id}`} value={item.id} data-filter={item.filterId} onChange={this.onSelectFeeds(item.name, item.id, isChecked)} checked={isChecked} style={{marginTop:2}}/>\r\n                                                    <Image className='mx-2' src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} fluid/>\r\n                                                    <span className='fil_network'>{parse(item.name)}</span>\r\n                                                </Form.Label> :''\r\n                                        })\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Post Type</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <PostTypeCheck value=\"1\" onClickPostType={this.onClickPostType} {...this.props} label={`Text Only`} id={`text_only`}/>\r\n                            <PostTypeCheck value=\"2,4\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Image`} id={`image_only`}/>\r\n                            <PostTypeCheck value=\"3,5\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Video`} id={`video_only`}/>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Other</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Pinned to top`} id={`pinFilter`}/>\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Recent`} id={`recentFilter`} />\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Retweets`} id={`retweetsFilter`} />\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                <div className=\"d-flex flex-column mx-5 py-4\">\r\n                    <Button variant='link' onClick={this.props.removeAllFilterBody} className=\"\">Reset Results</Button>\r\n                </div>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         moderation: state.moderation ,\r\n         feeds: state.manageFeeds?.feeds\r\n        }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateFilterPostTags: (data) => dispatch(updateFilterPostTags(data)),\r\n        updateFilterSocialFeeds: (data) => dispatch(updateFilterSocialFeeds(data)),\r\n        updateFilterPostType: (data) => dispatch(updateFilterPostType(data)),\r\n        updateFilterOthers: (data) => dispatch(updateFilterOthers(data)),\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Form, Button, Badge } from 'react-bootstrap';\r\nimport { removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeDateRanges, removeAllFilterBody } from '../../../../../actions/moderationActions'\r\nimport HtmlParser from 'react-html-parser';\r\nclass FilterTab extends Component {\r\n    onSelectFeeds = (data) => event => { this.props.removeFilterSocialFeeds(data) }\r\n    onClickPostType = (value) => event => { this.props.removeFilterPostType(value) }\r\n    onClickOther = (data) => event => { this.props.removeFilterOthers(data) }\r\n    onClickRemovePostTags = (value) => event => { this.props.removeFilterPostTags(value) }\r\n    onClickToDateRangeRemove = event => { this.props.removeDateRanges() }\r\n\r\n    render() {\r\n        const { filters, onClickReset, filterBody } = this.props\r\n        return (filterBody.socialFeed.length > 0 || filterBody.postType.length > 0 || filterBody.postTags.length > 0 || filterBody.other.length > 0 || Object.keys(filterBody.dateRanges).length > 0) ? <div className=\"d-flex align-items-start mb-2\">\r\n            <span className=\"text-muted fw-medium me-2 my-2 text-nowrap\">Filter By : </span>\r\n            <div className=\"d-flex flex-wrap align-items-center\">\r\n                {\r\n                    (Object.keys(filterBody.dateRanges).length > 0) ? <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                        {`${filterBody.dateRanges.startDate} - ${filterBody.dateRanges.endDate}`}\r\n                        <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickToDateRangeRemove}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </Button>\r\n                    </Badge> : null\r\n                }\r\n                {\r\n                    filterBody.postTags && filterBody.postTags.map((sItem) => {\r\n                        return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                            {sItem}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickRemovePostTags(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </Badge>\r\n                    })\r\n                }\r\n                {\r\n                    filterBody.socialFeed && filterBody.socialFeed.map((sItem) => {\r\n                        return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary text-icon\">\r\n                            {sItem.key == \"onsiteupload\" ? \"SnapUp\" : HtmlParser(sItem.key)}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onSelectFeeds(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </Badge>\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.postType && filterBody.postType.map((sItem) => {\r\n                        if (sItem == \"1\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Text Only\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem == \"2,4\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                With Image\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem == \"3,5\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                With Video\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.other && filterBody.other.map((sItem) => {\r\n                        if (sItem.key == \"highlightFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Highlight Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"pinFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Pin Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"recentFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Recent Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"retweetsFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Retweets Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                    })\r\n                }\r\n                <Button variant='dark' className='rounded-pill py-1 m-1' onClick={this.props.removeAllFilterBody}>Reset</Button>\r\n            </div>\r\n        </div> : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { moderation: state.moderation }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeDateRanges: () => dispatch(removeDateRanges()),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTab);","import React, { Component } from 'react'\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\r\nimport '@splidejs/splide/css';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n//import { Options } from '@splidejs/splide';\r\n\r\n\r\n\r\nexport default class CardPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mainRef = React.createRef();\r\n  }\r\n\r\n  handleThumbs = (id) => {\r\n    if (this.mainRef.current) {\r\n      this.mainRef.current.go(id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {ugcData} = this.props\r\n\r\n    const mainOptions = {\r\n      type      : 'loop',\r\n      perPage   : 1,\r\n      perMove   : 1,\r\n      gap       : '1rem',\r\n      pagination: false,\r\n      height    : '10rem',\r\n      navigation: false,\r\n      \r\n    };\r\n\r\n    if(ugcData.data && ugcData.data.length == 1) mainOptions.arrows= false\r\n    return <div className='mx-auto' style={{maxWidth:450}}>\r\n              <Splide hasTrack={ false } options={{ arrows: false }}>\r\n                <SplideTrack>\r\n                {ugcData.data && ugcData.data.length ? ugcData.data.map((item,index)=>{ \r\n                  return <SplideSlide key={index}>\r\n                      <div className={'d-flex flex-column w-100'}>\r\n                        <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={item.postFile} alt={\"\"} isCover={true} />\r\n                        <div className='p-3'>\r\n                          <div className=\"d-flex align-items-start mb-2\">\r\n                              <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                  <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                      imageSize={40}\r\n                                      symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                      name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                  <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                      <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.name}</strong></p>\r\n                                      <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.username}</p>\r\n                                  </div>\r\n                              </div>  \r\n                              <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                  <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                      <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} />\r\n                                  </OverlayTrigger>\r\n                              </span>\r\n                          </div>\r\n                          <ShowMoreContent classes={'mb-3'} content={item.content} idIndex={item.id} line={4} />\r\n                        </div>\r\n                      </div>\r\n                  </SplideSlide>\r\n                    }):null}\r\n                </SplideTrack>\r\n                {ugcData.data && ugcData.data.length > 1 ? <div className=\"splide__arrows\">\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--prev start-0\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                    </Button>\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--next end-0\">\r\n                      <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                  </Button>\r\n                </div> : null}\r\n              </Splide>\r\n            </div>\r\n\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HOST_URL } from '../../../../../../actions/api'\r\nimport { TOAST_ERROR } from '../../../../../../utils'\r\nimport { tinyRequest } from '../../../../../../actions/tinyUrlAction';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { logRoles } from '@testing-library/react';\r\n\r\nexport default class copyUrl extends Component {\r\n\r\n    state = { openSteps: false, copied: false, hash: 'yes', accountDetails: {}, postUrl: '' }\r\n    componentDidMount() {\r\n        this.copyText();\r\n    }\r\n\r\n    sendRequest = () => {\r\n        const { onRaiseRequest, setUserName } = this.props\r\n        // setUserName(this.state.accountDetails.username)\r\n        onRaiseRequest(this.state.hash)\r\n    }\r\n\r\n    copyText = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n        const postLink = ugcData?.data && ugcData?.data[0] ? ugcData?.data[0].link : ''\r\n        tinyRequest(postLink).then((response) => {\r\n            const { data } = response.data\r\n            this.setState({ postUrl: data?.tiny_url })\r\n        }).catch((ex) => {\r\n            this.setState({ postUrl: postLink })\r\n        })\r\n\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' ' + ugcData.bitlyurl)\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg}. Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n    }\r\n\r\n    raiseReq = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n\r\n        if (this.state.hash == '' || !this.state.hash) { TOAST_ERROR('Hashtag for UGC Rights is required!'); return; }\r\n        this.sendRequest()\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' Post : ' + this.state.postUrl + ' . Form Link : ' + ugcData.bitlyurl);\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg} Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n        if ((ugcData.data[0].networkId == 18 || ugcData.data[0].networkId == 2) && requestMode == 0) setTimeout(() => window.open(`https://ig.me/m/${ugcData.data[0].username}`, '_blank'), 400)\r\n        else setTimeout(() => window.open(ugcData.data[0].link, '_blank'), 400)\r\n        setTimeout(() => {\r\n            window.location.replace(`${HOST_URL}content/moderation/${localStorage.getItem('wallId')}`)\r\n        }, 400);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { ugcData, custom_msg, setStep, requestMode, isRequesting } = this.props\r\n        const { openSteps, copied, hash } = this.state;\r\n        return <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n           \r\n            <h3 className='mb-3'>Your UGC Request is Ready</h3>\r\n\r\n            <div className=\"form-group ugc_right_col\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={requestMode == 0 ? custom_msg : localStorage.getItem('ownerId') == '142546' ? `${custom_msg}` : `${custom_msg} Just reply with #${hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!` || \"\"} disabled />\r\n                </Form.Group>\r\n            </div>\r\n\r\n            {requestMode == 1 ? <>\r\n\r\n                <div className=\"form-group ugc_right_col\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"ugc_rights_hash_value\">Enter Hashtag for UGC Rights <span className=\"text-danger\">*</span> </Form.Label>\r\n                        <Form.Control as={'textarea'} id=\"ugc_rights_hash_value\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={hash} onChange={e => this.setState({ hash: e.target.value })} >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n            </> : null}\r\n            {requestMode == 0 ? <>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text className=\"cursor-pointer\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'link'}/>\r\n                    </InputGroup.Text>\r\n                    <Form.Control className=\"p-2\"  size='lg' value={ugcData.bitlyurl ? String(ugcData.bitlyurl):'---'} />\r\n                </InputGroup>\r\n                <Button variant='primary' className='w-100 mb-4' onClick={() => this.setState({ copied: true }, () => this.copyText())}>\r\n                    {!copied ? \"Copy Url\" : \"Url Copied\"}\r\n                </Button>\r\n            </> : null}\r\n\r\n                   \r\n            <h5> Steps to proceed </h5>\r\n            <ul className={`list-unstyled list-points fs-8`}>\r\n                <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n            </ul>\r\n                    \r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(2)}>Back</Button>\r\n            <Button className={isRequesting ? 'spinner' : ''} onClick={() => this.raiseReq()}>Raise Request</Button>\r\n        </div>\r\n        \r\n        </>\r\n    }\r\n}\r\n\r\n","import axios from \"axios\"; \r\nimport { TINY_URL } from \"./api\";\r\nconst apiToken = `YhhvoiyS1HLShf3CsiZAUsUZK2qTY1JGrJ045Z12sipRKGeEbM1FVHnQVd4f`\r\nexport const tinyRequest = (url) => {\r\n    var data = JSON.stringify({\r\n        \"url\": url\r\n    });\r\n    var config = {\r\n        method: 'post',\r\n        url: `${TINY_URL}?api_token=${apiToken}`,\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: data\r\n    };\r\n    return axios(config)\r\n}","import { Component } from \"react\";\r\nimport { Modal, Button, InputGroup, Form, Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { DashboardModal, Dashboard } from \"@uppy/react\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport $ from \"jquery\";\r\nimport { ADD_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\n\r\n\r\n\r\nclass CreateTemplate extends Component {\r\n  uppyUploader = new UppyUpload()\r\n  uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n  state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: this.props.editData.client_logo, selectedBrand: this.props.editData.client_logo_name, selectedBrandFile: this.props.editData.client_logo, tncFilename: this.props.editData.custom_terms, selectedtnc: this.props.editData.custom_terms_name, selectedtncFile: this.props.editData.custom_terms, selectedTemplate: null, acceptTnc: false, logoError: false, tncError: false, templateName: this.props.editData.name, custom_msg: this.props.editData.custom_message, tncerrorMsg: false, nameerrorMsg: false, msgerrorMsg: false, };\r\n\r\n  componentDidMount() {\r\n    this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedBrandFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          brandFilename: result.name,\r\n          selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          logoError: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedtncFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncFilename: result.name,\r\n          selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncerrorMsg: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    // this.props.ugcData\r\n  }\r\n\r\n\r\n  onClickToOpenBrand = () => {\r\n    this.setState({ brandModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploader.uppy.cancelAll();\r\n      this.setState({ brandModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseBrand = () => {\r\n    this.uppyUploader.uppy.cancelAll();\r\n    this.setState({ brandModalOpen: false });\r\n  };\r\n\r\n  onClickToOpenTnc = () => {\r\n    this.setState({ tncModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploaderPdf.uppy.cancelAll();\r\n      this.setState({ tncModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseTnc = () => {\r\n    this.uppyUploaderPdf.uppy.cancelAll();\r\n    this.setState({ tncModalOpen: false });\r\n  };\r\n\r\n  removeBrandLogo = () => {\r\n    this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n  }\r\n  removeTnc = () => {\r\n    this.setState({\r\n      tncFilename: null,\r\n      selectedtnc: \"\",\r\n      selectedtncFile: null,\r\n    })\r\n  }\r\n\r\n  onSaveTemplate = () => {\r\n    const { createTemplate, selectedBrand, tncFilename, brandFilename, selectedtnc, selectedtncFile, selectedTemplate, templateName, selectedBrandFile, custom_msg } = this.state;\r\n\r\n    if (!custom_msg || !templateName || !tncFilename || !brandFilename) {\r\n      if (!custom_msg) this.setState({ msgerrorMsg: true })\r\n      if (!templateName) this.setState({ nameerrorMsg: true })\r\n      if (!tncFilename) this.setState({ tncerrorMsg: true })\r\n      if (!brandFilename) this.setState({ logoError: true })\r\n    }\r\n    else {\r\n      var obj = { owner: localStorage.getItem('ownerId'), name: templateName, custom_message: custom_msg, custom_terms: selectedtnc, custom_terms_name: tncFilename, client_logo: selectedBrand, client_logo_name: brandFilename }\r\n      if (this.props.edit) obj = { ...obj, id: this.props.editData.id }\r\n      this.props.ADD_UGC_TEMPLATE(obj, this.props.onAddNewTemplate)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { show, onHide, saveTemplate, edit } = this.props;\r\n    const { brandModalOpen, tncModalOpen, createTemplate, selectedBrand, tncFilename, logoError, selectedtncFile, selectedTemplate, acceptTnc, tncError, selectedBrandFile, templateName, custom_msg, brandFilename, tncerrorMsg, nameerrorMsg, msgerrorMsg } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal size=\"lg\" show={show} onHide={onHide} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{edit ? 'Edit' : `Create New`} Template</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_name\">Template Name <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control placeholder=\"enter your template name\" autoComplete=\"off\" id=\"t_name\" className={`${nameerrorMsg ? `is-invalid` : ``}`} value={templateName} onChange={(e) => this.setState({ templateName: e.target.value, nameerrorMsg: false })} maxLength=\"255\" />\r\n                    <span id=\"t_nameerror\" className=\"invalid-feedback\" >{nameerrorMsg ? \"Name is required\" : ''}</span>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Custom Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control as={'textarea'} className={`${msgerrorMsg ? `is-invalid` : ``}`} id=\"t_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_msg} onChange={(e) => this.setState({ custom_msg: e.target.value, msgerrorMsg: false })} />\r\n                    <span id=\"t_msgerror\" className=\"invalid-feedback\" >{msgerrorMsg ? \"Custom message is required\" : ''}</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_logo\">Brand Logo <span className=\"text-danger\">*</span></Form.Label>\r\n                    {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer ${logoError ? `is-invalid border-danger` : ``}`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                      <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                    </div> :\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className=\"me-3 me-xxl-4\">\r\n                            <div className=\"symbol h-90px w-90px position-relative rounded-2 overflow-hidden\">\r\n                                <Image src={selectedBrandFile?.includes('https://cloud.tagshop.ai/') ? selectedBrandFile : `${WASABI_PATH}${UGC_UPLOAD_URL}/${selectedBrandFile}`} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center flex-wrap\">\r\n                            <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                    <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <span id=\"t_logoerror\" className=\"invalid-feedback\">Brand Logo is required</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Terms and Conditions<span className=\"text-danger\">*</span></Form.Label>\r\n                    <InputGroup className={`${tncerrorMsg ? `is-invalid` : ``}`}>\r\n                      <div className=\"form-control form-control-lg\">\r\n                        {selectedtncFile ? \r\n                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                        <span className=\"text-ellipsis fs-8 p-1 rounded-1\">{tncFilename}</span> \r\n                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                          <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </span>\r\n                      </div> : ''}\r\n                      </div>\r\n                      <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                    </InputGroup>\r\n                    <span id=\"tcError\" className=\"invalid-feedback\" >{tncerrorMsg ? \"Terms & Conditions is required\" : ''}</span>\r\n                  </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Button variant='secondary' className='ms-3 btn-min-w' onClick={onHide}>Cancel</Button>\r\n                <Button className='ms-3 btn-min-w' onClick={this.onSaveTemplate}>Save Template</Button>\r\n            </Modal.Footer>\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploader.uppy}\r\n            open={brandModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseBrand}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n          />\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploaderPdf.uppy}\r\n            open={tncModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseTnc}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Url\", \"Webcam\"]}\r\n          />\r\n\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // ugcData: state.moderation.ugcData,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    ADD_UGC_TEMPLATE: (data, callback) => dispatch(ADD_UGC_TEMPLATE(data, callback))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTemplate);\r\n","import { Component } from \"react\";\r\nimport { DashboardModal } from \"@uppy/react\";\r\nimport $ from \"jquery\";\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport CreateTemplate from \"./CreateTemplate\";\r\nimport { connect } from \"react-redux\";\r\nimport { DELETE_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GeneralRequest extends Component {\r\n\r\n    state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: null, selectedBrand: \"\", selectedBrandFile: null, tncFilename: null, selectedtnc: \"\", selectedtncFile: null, selectedTemplate: this.props.selectedTemplate, tncError: this.props.tncError, custom_message: this.props.custom_msg, isEdit: false, editData: {} };\r\n\r\n    uppyUploader = new UppyUpload()\r\n    uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n    componentDidMount() {\r\n        const { ugcData, setBrand_link, setTermslink, setTermstype, brand_link } = this.props\r\n\r\n        this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            setBrand_link(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            this.setState(\r\n                {\r\n                    selectedBrandFile: `${result.id}.${result.ext}`,\r\n                    brandFilename: result.name,\r\n                    selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploader.uppy.cancelAll();\r\n                        this.setState({ brandModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n        });\r\n\r\n        this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            this.setState(\r\n                {\r\n                    selectedtncFile: `${result.id}.${result.ext}`,\r\n                    tncFilename: result.name,\r\n                    selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploaderPdf.uppy.cancelAll();\r\n                        this.setState({ tncModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n            setTermslink(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            setTermstype(result.name)\r\n        });\r\n\r\n        this.onTemplateChange(this.props.selectedTemplate)\r\n        setTimeout(() => {\r\n            if (ugcData && ugcData.template && ugcData.template.length && !this.state.selectedTemplate) {\r\n                this.setState({ tncFilename: ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms, selectedtncFile: ugcData.template[0].custom_terms })\r\n            }\r\n            if (brand_link) this.setState({ selectedBrandFile: brand_link }, () => console.log('brand_link', brand_link, this.state.selectedBrandFile))\r\n        }, 500);\r\n\r\n    }\r\n\r\n    onClickToOpenBrand = () => {\r\n        this.setState({ brandModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseBrand = () => {\r\n        this.uppyUploader.uppy.cancelAll();\r\n        this.setState({ brandModalOpen: false });\r\n    };\r\n\r\n    onClickToOpenTnc = () => {\r\n        this.setState({ tncModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseTnc = () => {\r\n        this.uppyUploaderPdf.uppy.cancelAll();\r\n        this.setState({ tncModalOpen: false });\r\n    };\r\n\r\n    onCreateTemplate = () => {\r\n        this.setState({ createTemplate: true })\r\n    }\r\n\r\n    onAddNewTemplate = (id) => {\r\n\r\n        const tmp = this.getSelectedTemplate(id)\r\n        if (tmp) this.onTemplateChange(id)\r\n        // if(tmp) this.setState({selectedTemplate: id})\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n\r\n    onHideTemplate = () => {\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n    getSelectedTemplate = (value) => {\r\n        const { ugcData } = this.props\r\n        const { selectedTemplate } = this.state\r\n        const id = value ? value : selectedTemplate\r\n        localStorage.setItem('selectedTemplate',id)\r\n        if (ugcData && ugcData.template && ugcData.template.length) {\r\n            if (!id) { return ugcData.template[0] }\r\n            const template = ugcData.template.filter(t => t.id == id)[0]\r\n            return template\r\n        }\r\n        else return null\r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { acceptTnc, requestMode , onUpdateTemplate} = this.props\r\n        onUpdateTemplate()\r\n        if (requestMode == 1) {\r\n            this.props.setStep(2)\r\n        }\r\n        else if (acceptTnc && requestMode == 0) {\r\n            this.props.setStep(2)\r\n        }\r\n        else this.setState({ tncError: true }, () => this.props.setTncError(true))\r\n    }\r\n    //     this.setState({tncFilename : ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms,\r\n    //  selectedtncFile:ugcData.template[0].custom_terms, custom_message: ugcData.template[0].custom_message }, () => this.props.setCustom_msg(this.state.custom_message))\r\n\r\n    onTemplateChange = (e) => {\r\n        const tmp = this.getSelectedTemplate(e)\r\n        if (tmp) {\r\n            this.setState({ selectedTemplate: e }, () => {\r\n                this.setState({\r\n                    custom_message: tmp.custom_message,\r\n                    tncFilename: tmp.custom_terms_name,\r\n                    selectedtnc: tmp.custom_terms,\r\n                    selectedtncFile: tmp.custom_terms,\r\n                    brandFilename: tmp.client_logo_name,\r\n                    selectedBrand: tmp.client_logo,\r\n                    selectedBrandFile: tmp.client_logo,\r\n\r\n                });\r\n                this.props.setCustom_msg(tmp?.custom_message);\r\n                this.props.setSelectedTemplate(e);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onTemplateRemove = (data) => {\r\n        this.props.deleteTemplate({ owner: data.owner, id: data.id }, () => this.onTemplateChange(1))\r\n    }\r\n\r\n    onTemplateEdit = (data) => {\r\n        this.onCreateTemplate()\r\n        this.setState({ isEdit: true, editData: data })\r\n    }\r\n\r\n    removeBrandLogo = () => {\r\n        this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n    }\r\n    removeTnc = () => {\r\n        this.setState({\r\n            tncFilename: null,\r\n            selectedtnc: null,\r\n            selectedtncFile: null\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            brandModalOpen,\r\n            tncModalOpen,\r\n            createTemplate,\r\n            selectedBrand,\r\n            selectedBrandFile,\r\n            tncFilename,\r\n            selectedtncFile, selectedTemplate,\r\n            tncError,\r\n            custom_message,\r\n            isEdit,\r\n            editData,\r\n            brandFilename\r\n        } = this.state;\r\n\r\n        const { ugcData, setCustom_msg, setAcceptTnc, acceptTnc, hideUgc, setBrand_link, setTermslink, setTermstype, requestMode } = this.props\r\n        //   setBrand_link(selectedBrandFile)\r\n        //  setTermslink(ugcData.template[0].custom_terms) \r\n        // setTermstype(ugcData.template[0].custom_terms_name) \r\n\r\n        return (<>\r\n                {ugcData && ugcData.template && ugcData.template.length ?\r\n                <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n                        \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <div className=\"d-flex f-between mb-3\">\r\n                                <Form.Label className=\"mb-0\">Choose From Templates</Form.Label>\r\n                                <Button variant=\"link\" size=\"sm\" onClick={this.onCreateTemplate}>\r\n                                    <FontAwesomeIcon icon={'plus'}/>\r\n                                    Create Template\r\n                                </Button>\r\n                            </div>\r\n                            <Dropdown className=\"ugc-templates mb-3\" onSelect={(e) => this.onTemplateChange(e)}>\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"w-100 d-flex f-between\">\r\n                                    {this.getSelectedTemplate()?.name}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"w-100 dropdown-height\">\r\n                                    {ugcData.template && ugcData.template.map(t => (\r\n                                        <Dropdown.Item eventKey={t.id} className=\"f-between\" key={`drp_${t.id}`}>\r\n                                            <span className=\"text-ellipsis\">{t.name}</span> \r\n                                            {t.owner != 0 ?\r\n                                            <span className=\"dropdown-option\">\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateEdit(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'pen'}/>\r\n                                                </Button>\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateRemove(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </span>\r\n                                            : null\r\n                                        } </Dropdown.Item>\r\n                                    ))}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>  \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"r_msg\">Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                                <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_message} onChange={(e) => this.setState({ custom_message: e.target.value }, () => setCustom_msg(e.target.value))} >\r\n                                    {this.getSelectedTemplate()?.custom_message ? this.getSelectedTemplate()?.custom_message : `We loved your creative brilliance! Can we showcase your incredible work and give you the recognition you deserve? ✨📸🙌. \r\n                                Please approve our request so we can use your content in our marketing campaign.`}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                       \r\n                            <>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_logo\">Brand Logo</Form.Label>\r\n                                {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                                    <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                                </div> :\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"me-3 me-xxl-4\">\r\n                                        <div className=\"symbol h-90px w-90px position-relative rounded-2 bg-light overflow-hidden\">\r\n                                            <Image src={this.getSelectedTemplate()?.client_logo ? (this.getSelectedTemplate()?.client_logo?.includes('https://cloud.tagshop.ai') || this.getSelectedTemplate()?.client_logo?.includes('https://cloud.taggbox.com')) ? this.getSelectedTemplate()?.client_logo : `${WASABI_PATH}${UGC_UPLOAD_URL}/${this.getSelectedTemplate()?.client_logo}` : selectedBrand} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                                        <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_msg\">Terms and Conditions</Form.Label>\r\n                                <InputGroup className=\"mb-1\">\r\n                                    <div className=\"form-control p-2\">\r\n                                        {selectedtncFile ? \r\n                                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                                        <span className=\"text-ellipsis fs-8 bg-light p-1 rounded-1\">{tncFilename}</span> \r\n                                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                                        <FontAwesomeIcon icon={'xmark'}/>\r\n                                        </span>\r\n                                    </div> : ''}\r\n                                    </div>\r\n                                    <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                                </InputGroup>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Link to={baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx')} target=\"_blank\" className=\"btn btn-link p-0 text-nowrap btn-sm\" download={true}>\r\n                                        Use our predefined content\r\n                                        <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-1 d-flex\">\r\n                                <Form.Check type=\"checkbox\" id=\"ugc-tc\" className=\"me-2 mt-1\" value={acceptTnc} onChange={(e) => setAcceptTnc(e.target.checked)} checked={acceptTnc ? true : false}/>\r\n                                <Form.Label htmlFor=\"ugc-tc\">Accept our <a href=\"https://tagshop.ai/terms-of-service/\" rel=\"noreferrer\" className=\"fw-bold text-primary\" target=\"_blank\">Terms & Conditions</a> Click on Generate Request to proceed to next step.</Form.Label>\r\n                                \r\n                            </Form.Group>\r\n                            {tncError && !acceptTnc ? <span id=\"term_error\" className=\"text-danger\">Please accept Terms and Conditions</span> : null}\r\n                            </> \r\n\r\n                </div> : null}\r\n                <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                    <Button variant=\"secondary\" className=\"me-2\" onClick={() => {this.props.setStep(4); this.setState({tncError:false})}}>Back</Button>\r\n                    <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                </div>\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploader.uppy}\r\n                    open={brandModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseBrand}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                />\r\n\r\n\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploaderPdf.uppy}\r\n                    open={tncModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseTnc}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Url\", \"Webcam\"]}\r\n                />\r\n                {createTemplate ? <CreateTemplate show={true} edit={isEdit} editData={editData} onHide={this.onHideTemplate} onAddNewTemplate={this.onAddNewTemplate} /> : null}\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteTemplate: (data, callback) => dispatch(DELETE_UGC_TEMPLATE(data, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralRequest);\r\n","import React, { Component } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCookies, withCookies } from 'react-cookie';\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from '../../../../../../actions/sceneActions';\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { showAddAccounntAlert } from './utils';\r\nimport { useNavigate } from 'react-router';\r\nimport { addAccountFromId } from '../../../../../../utils/addAccount';\r\nimport { getTwitterAuth } from '../../../../../../utils/auth';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nconst SocialAccounts = (props) => {\r\n  const [cookies, setCookie] = useCookies([]);\r\n  const navigation = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const socialAccountsData = useSelector(state => state.userAccountData.socialAccounts)\r\n  return <SAccounts {...props} cookies={cookies} navigation={navigation} dispatch={dispatch} socialAccountsData={socialAccountsData} />\r\n}\r\nclass SAccounts extends Component {\r\n  state = { socialAccount: 0, authorName: null, authorAvatar: null, errorMsg: false, otherAc: false, accountDetails: {}, accountList: [], selectedPersonalAccount: null }\r\n\r\n  handleMessage = async (event) => {\r\n    try {\r\n      const response = JSON.parse(event.data);\r\n      const { code } = response;\r\n      const networkId = localStorage.getItem('networkId');\r\n      const type = localStorage.getItem('connectionType');\r\n      if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\r\n        if (type == 'moderation-ugc') {\r\n          if (code) {\r\n            if (networkId == 1) {\r\n              await getTwitterAuth(code, (response) => {\r\n                if (response && Object.keys(response).length > 0) this.filterAccountData(networkId, response);\r\n              })\r\n            } else {\r\n              await addAccountFromId(networkId, code, () => this.props.dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(null, () => this.filterAccountData(networkId, null))));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.filterAccountData(2, null);\r\n    document.cookie = \"callBackUrl=React\";\r\n    window.addEventListener(\"message\", this.handleMessage);\r\n    channel.addEventListener(\"message\", this.handleMessage);\r\n    if (window.Application) window.Application.reInit()\r\n    if (this.props.networkId == parseInt(JSON.parse(localStorage.getItem('instagram_ugc'))?.networkId)) {\r\n      this.setState({ accountDetails: JSON.parse(localStorage.getItem('instagram_ugc')) })\r\n    }\r\n    else this.setState({ accountDetails: null })\r\n  }\r\n\r\n  filterAccountData = (id, data) => {\r\n    const { socialAccountsData, setUserName } = this.props\r\n    let allAcc = []\r\n    socialAccountsData?.accountInformations?.forEach(acc => {\r\n      if (acc.Network.id == id && acc.ConnectedAccounts) {\r\n        acc.ConnectedAccounts.value2 = acc.ConnectedAccounts.accountName;\r\n        allAcc.push(acc);\r\n      }\r\n    });\r\n    if (id == 1 && data) {\r\n      allAcc.unshift({\r\n        ConnectedAccounts: {\r\n          id: data.id_str,\r\n          value2: data.name,\r\n          profilePicture: data.picture\r\n        },\r\n        Network: {\r\n          color: \"#0F1419\",\r\n          description: \"Twitter\",\r\n          icon: \"fa-twitter\",\r\n          id: 1,\r\n          name: \"Twitter\",\r\n          status: 1\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    this.setState({\r\n      accountList: allAcc,\r\n      selectedPersonalAccount: allAcc[0] || ''\r\n    }, () => setUserName(allAcc[0]?.ConnectedAccounts.value2 || ''));\r\n  };\r\n\r\n\r\n  sendRequest = () => {\r\n    const { setStep, setUserName } = this.props\r\n    if (this.state.accountDetails) {\r\n      setUserName(this.state.accountDetails.username)\r\n      setStep(3)\r\n    }\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { setStep } = this.props\r\n    if (this.state.selectedPersonalAccount) setStep(3)\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.removeItem(\"networkId\")\r\n    window.removeEventListener(\"message\", this.handleMessage);\r\n    channel.removeEventListener(\"message\", this.handleMessage);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { setStep, networkId, setUserName } = this.props\r\n    const { errorMsg, accountList, selectedPersonalAccount } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n          <div className=\"ugc_steps ugc-logged-ac modal-body\">\r\n            <>\r\n            {selectedPersonalAccount ? \r\n            <Dropdown style={{ minWidth: 220 }} id=\"connectedAll\">\r\n              <Dropdown.Toggle  variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`}>\r\n                <div className=\"d-flex align-items-center flex-grow-1\">\r\n                  <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                      imageSize={30}\r\n                      symbolClass={'symbol-label fs-8'}\r\n                      name={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''} \r\n                      profileUrl={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.profilePicture : ''} networkId={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.networkId :''} />\r\n                  <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                      <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''}</p>\r\n                  </div>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"w-100\">\r\n                <div className=\"navi flex-column navi-hover py-2 px-5 connectedAllAccounts\">Select Account:</div>\r\n                {accountList.map(acc => {        \r\n                  return <Dropdown.Item key={acc.ConnectedAccounts.id} onClick={() => { this.setState({ selectedPersonalAccount: acc }, () => setUserName(acc.ConnectedAccounts.value2)) }}>\r\n                      <div className=\"d-flex align-items-center\">\r\n                          <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                              imageSize={30}\r\n                              symbolClass={'symbol-label fs-8'}\r\n                              name={acc.ConnectedAccounts.value2} profileUrl={acc.ConnectedAccounts?.profilePicture} networkId={acc.ConnectedAccounts?.networkId} />\r\n                          <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                              <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{acc.ConnectedAccounts.value2}</p>\r\n                          </div>\r\n                      </div>\r\n                  </Dropdown.Item>\r\n                })}\r\n                <Dropdown.Item onClick={() => { localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId) }}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                        imageSize={30}\r\n                        symbolClass={'symbol-label fs-8'}\r\n                        name={''} profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={''} />\r\n                    <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                        <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Another Account</p>\r\n                    </div>\r\n                  </div>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown> :\r\n\r\n            <Button variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`} onClick={() => {localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId)}}>\r\n              <div className=\"d-flex align-items-center flex-grow-1\">\r\n                <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                    imageSize={30}\r\n                    symbolClass={'symbol-label fs-8'}\r\n                    name={''} \r\n                    profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={networkId} />\r\n                <div className=\"overflow-hidden f-between w-100 pe-3\" >\r\n                    <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Account</p>\r\n                    <FontAwesomeIcon icon={'plus'} />\r\n                </div>\r\n              </div>\r\n            </Button>\r\n            }\r\n            {errorMsg ? <span id=\"social_account_error\" className=\"invalid-feedback\">\r\n              Please connect account\r\n            </span> : null}\r\n            </>\r\n          </div>\r\n          <span id=\"reSearch_cookies\" onClick={() => this.getCookieData()}></span>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n          <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(1)}>Back</Button>\r\n          <Button onClick={() => this.nextStep()}>Next Step</Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default withCookies(SocialAccounts)","import { Component } from \"react\";  \r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport { TOAST_ERROR } from \"../../../../../../utils\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nclass ChooseMethod extends Component {\r\n\r\n    state = {\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { requestMode } = this.props\r\n        if (requestMode != null) {\r\n            this.props.setStep(1)\r\n        }\r\n        else TOAST_ERROR('Please select the mode for Right Request')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { setRequestMode, requestMode } = this.props\r\n\r\n        return (\r\n                <>\r\n                    <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                        <h3 className=\"mb-1 h5\">Select the mode for Right Request</h3>\r\n                        <p className=\"text-muted\">Tagshop offers two distinct modes to request rights. Comment Request and DM Request. </p>\r\n\r\n                        <div className=\"mb-3 d-flex flex-column\">\r\n                            <div value={'viaComments'} className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 1 ? 'border-success' : ''}`} onClick={() => setRequestMode(1)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'comment'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">Comment Request</p>\r\n                                        <span className=\"fs-9\">Request creators consent as a comment on their post.</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 1 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 1 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                            <div className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 0 ? 'border-success' : ''}`} onClick={() => setRequestMode(0)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'message'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">DM Request</p>\r\n                                        <span className=\"fs-9\">Send a Rights request directly into the DM of the creators!</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 0 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 0 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => this.props.hideUgc()}>Cancel</Button>\r\n                        <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                    </div>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseMethod);\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Modal, Button, Nav} from \"react-bootstrap\";\r\nimport { ADD_UGC_TEMPLATE, SEND_UGC } from \"../../../../../actions/moderationActions\";\r\nimport CardPreview from \"./Elements/CardPreview\"; \r\nimport CopyUrl from \"./Elements/CopyUrl\";\r\nimport GeneralRequest from \"./Elements/GeneralRequest\";\r\nimport SocialAccounts from \"./Elements/SocialAccounts\";\r\nimport './rights.scss'\r\nimport ChooseMethod from \"./Elements/ChooseMethod\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../../actions/sceneActions\";\r\nimport ErrorFound from \"../../../../ErrorFound\";\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { TOAST_ERROR } from \"../../../../../utils\";\r\n\r\n\r\nconst UgcModal = (props) => {\r\n  const { hideUgc, ugcData } = props\r\n  const [ugcTabKey, setUgcTabKey] = useState('general')\r\n  const [custom_msg, setCustom_msg] = useState(\"\")\r\n  const [selectedTemplate, setSelectedTemplate] = useState(localStorage.getItem('selectedTemplate') || '')\r\n  const [acceptTnc, setAcceptTnc] = useState(false)\r\n  const [tncError, setTncError] = useState(false)\r\n  const [step, setStep] = useState(4)\r\n  const [isAccount, setIsAccount] = useState('')\r\n  const [userName, setUserName] = useState('')\r\n  const [brand_link, setBrand_link] = useState('')\r\n  const [termslink, setTermslink] = useState('')\r\n  const [termstype, setTermstype] = useState('') \r\n  const [requestMode, setRequestMode] = useState()\r\n  const [isRequesting, setIsRequesting] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA())\r\n  }, [])\r\n \r\n  const sendRequest=()=>{\r\n    if(isAccount){\r\n      setStep(3)\r\n      onRaiseRequest()\r\n    }\r\n  }\r\n\r\n  const getPostIds = () => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    let postIds = []\r\n    if (data.length > 0) {\r\n      data.map((item, index) => {\r\n        postIds.push(item.referenceId)\r\n      })\r\n    }\r\n    return postIds.join(',')\r\n  }\r\n\r\n\r\n  const onRaiseRequest = (hash) => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    setIsRequesting(true)\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = {\r\n      custom_message: custom_msg,\r\n      feedId: data[0].feedId,\r\n      networkId: data[0].networkId,\r\n      selectedImage: data[0].postFile,\r\n      selectedVideo: '',\r\n      selectedUsername: data[0].username,\r\n      handle:userName,\r\n      postId: data.length > 1 ? getPostIds() : data[0].referenceId,\r\n      brand_link: brand_link ? brand_link :tempSelected?.client_logo,\r\n      termslink: termslink ? termslink:tempSelected?.custom_terms,\r\n      termstype: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      bitlylink: bitlyurl,\r\n      unique_code: unique_code,\r\n      rightsVia: requestMode,\r\n      hashtag: hash,\r\n      networkPostId: data[0].postId,\r\n      wallId:localStorage.getItem('wallId'),\r\n      client:localStorage.getItem('ownerId')\r\n    }\r\n    SEND_UGC(obj, ()=>setIsRequesting(false))\r\n  }\r\n\r\n\r\n\r\n const onUpdateTemplate = () => {\r\n    const { template } = ugcData\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = { \r\n      client_logo: brand_link ? brand_link :tempSelected?.client_logo,\r\n      custom_terms: termslink ? termslink:tempSelected?.custom_terms,\r\n      custom_terms_name: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      custom_message: custom_msg,\r\n      name:tempSelected?.name,\r\n      owner:localStorage.getItem('ownerId'),\r\n      id:tempSelected?.id\r\n    }\r\n  if(![1,2,3].includes(tempSelected?.id)){\r\n    if (!custom_msg ) {\r\n      TOAST_ERROR('Message field is required')\r\n    }\r\n    else {\r\n      dispatch(ADD_UGC_TEMPLATE(obj,''))\r\n    }\r\n  }\r\n  else{console.log('first')}\r\n  }\r\n\r\n  return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                  <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'}/>\r\n                  UGC Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={() => hideUgc()}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                  {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n\r\n                {step != 4 ? <div className=\"ugc-wizard-nav\">\r\n                        <Nav variant=\"nav\" className=\"bg-gray-200 justify-content-between row gx-0\">\r\n                        <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${[1,2,3].includes(step) ? `active` : ``}`} onClick={()=>setStep(1)}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[1,2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[1,2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">General Request</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 2 || step == 3 ? `active` : `disabled`}`} onClick={()=>acceptTnc ? setStep(2):''}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Social Account</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Preview</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </div>\r\n                    : <></>}\r\n\r\n\r\n\r\n                    {ugcData && step ==4? <ErrorFound><ChooseMethod ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setRequestMode={setRequestMode} hideUgc={hideUgc}/></ErrorFound> : null}\r\n\r\n                    {ugcData && step ==1?  <ErrorFound><GeneralRequest ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setAcceptTnc={setAcceptTnc} acceptTnc={acceptTnc} tncError={tncError} setTncError={setTncError} selectedTemplate={selectedTemplate} setSelectedTemplate={setSelectedTemplate} setCustom_msg={setCustom_msg} custom_msg={custom_msg} setBrand_link={setBrand_link} brand_link={brand_link} setTermslink={setTermslink} setTermstype={setTermstype}  termstype={termstype} hideUgc={hideUgc} onUpdateTemplate={onUpdateTemplate}/></ErrorFound> : null}\r\n\r\n                    {((acceptTnc && requestMode == 0) || requestMode == 1) && step ==2?  <ErrorFound><SocialAccounts  setStep={setStep} setUserName={setUserName} setIsAccount={setIsAccount} networkId={ugcData.data[0].networkId != 18 ? ugcData.data[0].networkId : 2} /></ErrorFound>:\"\"}\r\n\r\n                    {custom_msg && ugcData && step ==3 ? <ErrorFound><CopyUrl requestMode={requestMode} onRaiseRequest={onRaiseRequest} setUserName={setUserName} networkId={ugcData.data[0].networkId} setUgcTabKey={setUgcTabKey} setStep={setStep} ugcData={ugcData} custom_msg={custom_msg} isRequesting={isRequesting} /></ErrorFound> : null}\r\n\r\n                </div>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n};\r\n\r\nexport default (UgcModal);\r\n","import React, { Component } from 'react'\r\nimport HTMLReactParser from 'react-html-parser';\r\nimport moment from 'moment'\r\nimport { WASABI_PATH } from '../../../../../../actions/api'; \r\nimport { DOWNLOAD_CERTIFICATE } from '../../../../../../actions/ugcAction';\r\nimport {saveAs} from \"file-saver\";\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass UgcModalApproved extends Component {\r\n    onDownloadMedia = (data) => {\r\n        if (data.type != 5 && data.type != 3) {\r\n            saveAs(data.postFile, `${data.id}`);\r\n        }\r\n        else{\r\n            saveAs(data.mediaUrl, `${data.id}`);\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide } = this.props;\r\n        return ugcRequestData ? <>\r\n\r\n            <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                <Modal.Header className=\"justify-content-between py-0\">\r\n                    <span className='text-muted fw-medium'>\r\n                        <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1 text-success'}/>\r\n                        Access Image\r\n                    </span>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                    <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                        <h3 className='text-center mb-4'>Your UGC Request Approved</h3>\r\n                        <div className='mx-auto' style={{maxWidth:450}}>\r\n                            <div className={'d-flex flex-column w-100'}>\r\n                                <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                <div className='p-4'>\r\n                                    <div className=\"d-flex align-items-start mb-2\">\r\n                                        <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                            <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                imageSize={40}\r\n                                                symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                name={ugcRequestData.name} profileUrl={ugcRequestData.picture} networkId={ugcRequestData.networkId} />\r\n                                            <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </div>\r\n                                    <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"full_modal_sidebar position-relative\">\r\n                        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                            <div className=\"ugc-information\">\r\n                                <h2 className=\"mb-5 h3\">Information</h2>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User handle</span><span className=\" m_grid_uername\">{`@${ugcRequestData.username}`}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User name</span><span className=\" m_grid_name\">{ugcRequestData.name}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Device</span>\r\n                                        <span className=\" ugc-deviceupdate\">\r\n                                            {ugcRequestData.userAgent ?\r\n                                                HTMLReactParser(ugcRequestData.userAgent)\r\n                                                : null\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">IP Address</span><span className=\" ugc-userIP\"> {\r\n                                            ugcRequestData.userIP\r\n                                        }</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Location</span><span className=\" ugc-userLocation\">\r\n                                            {\r\n                                                ugcRequestData.userLocation\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Post Approval Date</span><span className=\" ugc-actionTime\">{moment(ugcRequestData.actionTime).utcOffset(0).format('YYYY-MM-DD  hh:mm:ss a')}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">TimeZone</span>\r\n                                        <span className=\" ugc-timezone\">{ugcRequestData.timezone ? HTMLReactParser(ugcRequestData.timezone) : null}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Terms &amp; Condition</span>\r\n                                        <span className=\" ugc-tncdownload\">\r\n                                            <a className='btn btn-link' href={(ugcRequestData.custom_terms) ? `${WASABI_PATH}test/${ugcRequestData.custom_terms}` : `${WASABI_PATH}test/${ugcRequestData.custom_term_type}`} target=\"_blank\"><span className=\"ugc-terms overflow-hidden text-ellipsis text-nowrap\">{ugcRequestData.custom_term_type}</span>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/></a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-top px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mb-2\">Approval Certificate</span>\r\n                                        <span className=\"f-between w-100\">\r\n                                            Rights Management \r\n                                            <a className='btn btn-dark ms-1' onClick={() => DOWNLOAD_CERTIFICATE(ugcRequestData.ugcid)}>Download\r\n                                                <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {ugcRequestData.comment ? <div className=\"ugc-user-comment mt-7\">\r\n                                <h2 className=\"mb-5\">User Comment</h2>\r\n                                <div className=\"user-comment-box p-5\">\r\n                                    <p>{ugcRequestData.comment}</p>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                            <Button variant=\"secondary\" className=\"me-3 btn-min-w\" onClick={onHide} >Close</Button>\r\n                            <Button className=\"btn-min-w\" onClick={() => this.onDownloadMedia(ugcRequestData)}>Download</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </> : null\r\n\r\n    }\r\n}\r\n\r\nexport default UgcModalApproved","import React, { Component } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\n\r\nclass RadialChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var days = (30 - props.ago) * 3.33;\r\n        this.state = {\r\n            series: [days],\r\n            options: {\r\n                chart: {\r\n                    height: 320,\r\n                    type: \"radialBar\"\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\",\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: true,\r\n                                fontWeight: '700',\r\n                                name: \"TEST\"\r\n                            },\r\n                            value: {\r\n                                color: [\"#545454\"],\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: false\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: [\"#f2f6f8\"],\r\n                            strokeWidth: '100%'\r\n                        },\r\n                        dataLabels: {\r\n                            show: true,\r\n                            name: {\r\n                                show: true,\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 600,\r\n                                color: '#545454',\r\n                                offsetY: -10\r\n                            },\r\n                            value: {\r\n                                show: false,\r\n                                fontSize: '14px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800,\r\n                                color: '#545454',\r\n                                offsetY: 16\r\n                            },\r\n                            total: {\r\n                                show: true,\r\n                                label: props.ago + \"Days\",\r\n                                color: '#373d3f',\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                colors: [\"#ffa800\"],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                }\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ago !== this.props.ago){\r\n            var days = (30 - this.props.ago) * 3.33;\r\n            this.setState({  \r\n                    series: [days],\r\n                    options: {\r\n                        chart: {\r\n                            height: 320,\r\n                            type: \"radialBar\"\r\n                        },\r\n                        plotOptions: {\r\n                            radialBar: {\r\n                                hollow: {\r\n                                    margin: 0,\r\n                                    size: \"65%\",\r\n                                },\r\n                                dataLabels: {\r\n                                    showOn: \"always\",\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontWeight: '700',\r\n                                        name: \"TEST\"\r\n                                    },\r\n                                    value: {\r\n                                        color: [\"#545454\"],\r\n                                        fontSize: \"30px\",\r\n                                        fontWeight: '700',\r\n                                        offsetY: 12,\r\n                                        show: false\r\n                                    }\r\n                                },\r\n                                track: {\r\n                                    background: [\"#f2f6f8\"],\r\n                                    strokeWidth: '100%'\r\n                                },\r\n                                dataLabels: {\r\n                                    show: true,\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 600,\r\n                                        color: '#545454',\r\n                                        offsetY: -10\r\n                                    },\r\n                                    value: {\r\n                                        show: false,\r\n                                        fontSize: '14px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800,\r\n                                        color: '#545454',\r\n                                        offsetY: 16\r\n                                    },\r\n                                    total: {\r\n                                        show: true,\r\n                                        label: this.props.ago + \"Days\",\r\n                                        color: '#373d3f',\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        colors: [\"#ffa800\"],\r\n                        stroke: {\r\n                            lineCap: \"round\",\r\n                        }\r\n                    }\r\n        \r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={350} />\r\n\r\n    }\r\n}\r\n\r\nexport default RadialChart;","\r\nimport moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport RadialChart from './RadialChart'\r\nimport { Link } from 'react-router-dom';\r\nimport CardPreview from '../Elements/CardPreview';\r\nimport { COPY_TO_CLIPBOARD } from '../../../../../../utils';\r\n\r\nexport default class Pending extends Component {\r\n    state={days:0, copied:false}\r\n\r\n    componentDidMount(){ this.getNewdata() }\r\n\r\n    getNewdata=()=>{\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        var new_date = moment().diff(moment(ugcRequestData.ugccreated, \"YYYY-MM-DD\"), 'days');\r\n        var ago = 30 - new_date;\r\n        this.setState({days:ago})\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ugcRequestData.ugccreated !== this.props.ugcRequestData.ugccreated){\r\n            this.getNewdata();\r\n        }\r\n    }\r\n    copyText = (id) => {\r\n        COPY_TO_CLIPBOARD(id)\r\n        this.setState({copied:true})\r\n        setTimeout(()=>{this.setState({copied:false})},1000)\r\n    }\r\n    render() {\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        const { days, copied} = this.state\r\n        return (<Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                    <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-warning'}/>\r\n                    Pending Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                    <h3 className='text-center mb-4'>Oops! Your UGC Request is pending now</h3>\r\n                    {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n                    <div className='p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard'>\r\n                        <div className='mb-3'>\r\n                            {days ? <RadialChart ago={ days} />:''}\r\n                        </div>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text>\r\n                                <FontAwesomeIcon type={'solid'} icon={'link'} />\r\n                            </InputGroup.Text>\r\n                            <Link id=\"rights_link\" className=\"form-control form-control-lg\" to={ugcRequestData.bitlyurl} target=\"_blank\">{ugcRequestData.bitlyurl}</Link>\r\n                        </InputGroup>\r\n                        <Form.Group className=\"mb-5\">\r\n                            <Button size='lg' onClick={()=>this.copyText('rights_link')} className='w-100'>{copied? 'Url Copied' :'Copy Url'}</Button>\r\n                        </Form.Group>\r\n                        <h5> Steps to proceed </h5>\r\n                        <ul className={`list-unstyled list-points fs-8`}>\r\n                            <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                            <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                            <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                            <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                            <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button className=\"btn-min-w\" onClick={onHide}>Done</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import moment from 'moment';\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass RejectModal extends Component {\r\n\r\n\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide, openugcModel } = this.props;\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                    <Modal.Header className=\"justify-content-between py-0\">\r\n                        <span className='text-muted fw-medium'>\r\n                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-danger'}/>\r\n                            Rejected Post\r\n                        </span>\r\n                        <div className='ms-5 d-flex justify-content-end'>\r\n                            <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                        <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                            <h3 className='text-center mb-4'>Rejected Post</h3>\r\n                            <div className='mx-auto' style={{maxWidth:450}}>\r\n                                <div className={'d-flex flex-column w-100'}>\r\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                    <div className='p-4'>\r\n                                        <div className=\"d-flex align-items-start mb-2\">\r\n                                            <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                    imageSize={40}\r\n                                                    symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                    name={ugcRequestData.name} profileUrl={ugcRequestData?.postFile} networkId={ugcRequestData.networkId} />\r\n                                                <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                                </div>\r\n                                            </div>  \r\n                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                    <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </div>\r\n                                        <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"full_modal_sidebar position-relative\">\r\n                            <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                                <h2 className=\"mb-5 text-center\">Sorry! Your UGC Request has been rejected</h2>\r\n                                <div className=\"mb-7\">\r\n                                    <Button size='lg' className=\"w-100\" onClick={openugcModel}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'user-check'}/>\r\n                                        Get Rights\r\n                                    </Button>\r\n                                </div>\r\n                                <ul className={`list-unstyled list-points fs-8`}>\r\n                                    <li className='mb-1'>Keep the request personalized</li>\r\n                                    <li className='mb-1'>Be clear about your intentions with the post</li>\r\n                                    <li className='mb-1'>Appreciate the post owner's efforts</li>\r\n                                    <li className='mb-1'>Offer rewards to users</li>\r\n                                    <li className='mb-1'>Add T&C with your request</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                                <Button className=\"btn-min-w\" onClick={onHide} >Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n    }\r\n}\r\n\r\nexport default RejectModal","import ApprovedModal from '../../UgcRights/Status/ApprovedModal'\r\nimport Pendingng from '../../UgcRights/Status/PendingModal'\r\nimport RejectModal from '../../UgcRights/Status/RejectModal'\r\n\r\nconst UgcStatus = (props) => {\r\n    const { ugcData, statusPopup, ugcRequestData, onHide, openugcModel } = props\r\n    return (<>\r\n        {statusPopup == 1 && ugcRequestData && ugcRequestData.username ? <Pendingng ugcData={ugcData} ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n        {statusPopup == 3 && ugcRequestData && ugcRequestData.username ? <RejectModal ugcRequestData={ugcRequestData} ugcData={ugcData} onHide={onHide}  openugcModel={openugcModel} /> : null}\r\n        {statusPopup == 2 && ugcRequestData && ugcRequestData.username ? <ApprovedModal ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n    </>)\r\n}\r\nexport default UgcStatus","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { generateRandomArray } from '../../../../../utils';\r\n\r\nconst ModerationSkeleton = () => {\r\n    return (\r\n        <div className=\"row gx-2\">\r\n            {generateRandomArray(20).map((_, index) => (\r\n                <div className='assetsItem' key={index}>\r\n                    <Card className='border-0'>\r\n                        <Card.Body className='p-0'>\r\n                            <div className=\"f-between flex-wrap flex-sm-nowrap border-bottom p-2\">\r\n                                <span className=\"d-flex\">\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                </span>\r\n                                <span className=\"sk_line h-10px w-20px\"></span>\r\n                            </div>\r\n                            <div className=\"sk_img rounded-0 w-100 flex-shrink-0 overflow-hidden\" style={{ paddingBottom: '100%' }}></div>\r\n                            <div className=\"d-flex align-items-center p-3\">\r\n                                <div className=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\">\r\n                                    <div className=\"sk_img symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                    <div className=\"overflow-hidden w-100\" style={{ maxWidth: '130px' }}>\r\n                                        <p className=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p>\r\n                                        <span className=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"d-flex align-items-end flex-column flex-shrink-0\" style={{ width: '100px' }}>\r\n                                    <div className=\"sk_img symbol symbol-28 rounded-1 flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                </span>\r\n                            </div>\r\n                            <div className='d-flex align-items-center p-3 border-top'>\r\n                                <div className='w-50 me-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                                <div className='w-50 ms-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModerationSkeleton;\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType';\r\nimport { connect } from 'react-redux';\r\nimport { REMOVE_TAGGED_PRODUCT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nclass ProductTags extends Component {\r\n    removeTaggProduct = (product_sku, productId, referenceId) => { if(checkPermission('contentGallery', 'editGallery', true)) {this.props.REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId, this.props.navigate); }};\r\n\r\n    render() {\r\n        const { item, listView , index, openContent} = this.props;\r\n        return (item.postproduct && item.postproduct.length > 0 ?\r\n                <Row className='d-flex gx-2 flex-nowrap product-scroll'>\r\n                    {item.postproduct.map((item, index) => {\r\n                        return <Col xs={2} key={index} style={{width:'20%'}}>\r\n                            <div className='w-100 position-relative'>\r\n                                <ImageType mediaClass=\"rounded-1 overflow-hidden position-relative bg-body\" size={100} url={item?.product?.product_image} height={50} width={50} alt={''} isCover={true} />\r\n                                <span className='h-16px w-16px rounded-circle bg-danger cursor-pointer position-absolute f-center text-white fs-10' style={{ top: -6, right: -6 }} onClick={() => this.removeTaggProduct(item.product.product_sku, item.product.id, item.post_id)}>\r\n                                <FontAwesomeIcon icon={'xmark'} />\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                    })}\r\n                    <Col xs={2} style={{width:'20%'}}>\r\n                        <Button variant='light-primary' className='f-center flex-shrink-0 p-0 h-100 w-100 fs-6' onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                            <FontAwesomeIcon icon={'plus'} iconClass={'me-0'}/>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Button variant='light-primary' className={`w-100 box-shadow`}  onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />Tag Products\r\n                </Button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { moderation: state.moderation, }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return { REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId, navigate) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)), }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTags)","import React, { Component } from 'react'\r\nimport { Badge, Button } from 'react-bootstrap';\r\n\r\nclass Tags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.item.tags ? String(this.props.item.tags).split(',') : [],\r\n            visibleCount: 5,\r\n        };\r\n    }\r\n\r\n \r\n    handleShowMore = () => {\r\n        this.setState(prevState => ({\r\n            visibleCount: prevState.items.length,\r\n        }));\r\n    };\r\n\r\n    handleShowLess = () => {\r\n        this.setState({\r\n            visibleCount: 5,\r\n        });\r\n    };\r\n    render() {\r\n\r\n        const { items, visibleCount } = this.state;\r\n        const visibleItems = items.slice(0, visibleCount);\r\n        return <>\r\n\r\n            {visibleItems && visibleItems.length > 0 ? <div className=\"d-flex align-items-center flex-wrap mb-2 w-100 overflow-hidden\">\r\n                <div className='w-100 d-flex flex-wrap'>\r\n                    {\r\n                        visibleItems.map((Item, index) => {\r\n                            return Item && String(Item).length > 0 ? <Badge key={index} bg='' className={`badge-outline-secondary ${index == 99999 ? 'border-gradient' : 'border'}`} onClick={this.props.onClickToPostTags(Item)}>{Item}</Badge> : null\r\n\r\n                        })\r\n                    }\r\n                    {items.length > 5 ? visibleCount < items.length ? (\r\n                        <Button variant='secondary' onClick={this.handleShowMore} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show More\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant='secondary' onClick={this.handleShowLess} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show Less\r\n                        </Button>\r\n                    ):null}\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    }\r\n}\r\nexport default Tags","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { connect } from 'react-redux';\r\nimport { GET_LIST_ALL_PIN_TO_TOP_POST } from '../../../../../reducer/keys';\r\nimport { GET_PIN_TO_TOP_LIST, GET_REORDER_PIN_TO_TOP } from '../../../../../actions/moderationActions';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Card, Image, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../utils'\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType'\r\nimport Author from '../../CommonComponents/Author/Author'\r\nimport { Loader } from '../../CommonComponents/Loader';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed); return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({ ...draggableStyle });\r\nconst getListStyle = isDraggingOver => ({});\r\n\r\nclass ChangeOrderModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [], newArray: [], spinner:false, updateOrder: false };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n    componentDidMount() { this.onLoadData(this.props); }\r\n\r\n\r\n    reArrangePosts = () => {\r\n        const { newArray, updateOrder } = this.state;\r\n        const postId = newArray.map(item => item.id);\r\n        const indexing = newArray.map((_, index) => index + 1);\r\n        if(updateOrder) {\r\n            this.setState({spinner:true})\r\n            this.props.GET_REORDER_PIN_TO_TOP(postId, indexing, \r\n                setTimeout(() => {\r\n                    this.setState({spinner:false})\r\n                }, 1000)\r\n                \r\n            )}\r\n        \r\n    };\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.openpinToTopModal !== this.props.openpinToTopModal) {\r\n            if (this.props.openpinToTopModal) this.props.GET_PIN_TO_TOP_LIST()\r\n        }\r\n        if (prevProps.pinToTop !== this.props.pinToTop) this.onLoadData(this.props)\r\n    }\r\n\r\n\r\n    onLoadData = (props) => {\r\n        const { pinToTop } = props;\r\n        this.setState({ items: pinToTop, newArray: pinToTop });\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        if (!result.destination) { return; }\r\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\r\n        this.setState({ items,  newArray: items , updateOrder:true});\r\n    }\r\n    render() {\r\n        const { openpinToTopModal, closeModalPop } = this.props\r\n        const {spinner} = this.state\r\n        return (\r\n\r\n            <Modal className='pintotop_modal' size=\"lg\" show={openpinToTopModal} onHide={closeModalPop} centered>\r\n                <Modal.Header closeButton >\r\n                    <Modal.Title>Change Order</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='mx-xl-4 px-lg-4 py-lg-2 mx-0 overflow-auto' style={{height:500}}>\r\n                        {this.state.items && this.state.items?.length > 0 ? \r\n                        <DragDropContext onDragEnd={this.onDragEnd} >\r\n                            <Droppable droppableId=\"droppable\">\r\n                                {(provided, snapshot) => (\r\n                                    <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\r\n                                        {this.state.items && this.state.items.length && this.state.items.map((item, index) => (\r\n                                            <Draggable key={`item-${index}`} draggableId={`item-${index}`} index={index}>\r\n                                                {(provided, snapshot) => (\r\n                                                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}>\r\n                                                        <Card data-id={item.id} className='mb-4'>\r\n                                                            <Card.Body className='p-2'>\r\n                                                                <span className='position-absolute start-0 translate-middle h-18px w-18px rounded-circle f-center bg-dark text-gray-100 top-50 fs-10 fw-medium' style={{ zIndex: 1 }}>{index + 1}</span>\r\n                                                                <div className=\"d-flex flex-lg-row flex-column\">\r\n                                                                    <div className='f-center h-100 text-gray-300 me-2 fs-6'>\r\n                                                                        <FontAwesomeIcon type={'solid'} icon={'grip-dots-vertical'} />\r\n                                                                    </div>\r\n                                                                    <div className='d-flex flex-shrink-0 flex-column cursor-pointer pe-lg-4 mx-auto mb-lg-0 mb-5' style={{ width: 120 }}>\r\n                                                                        <ImageType mediaClass={'position-relative rounded-1 overflow-hidden w-100'} size={100} height={120} width={120} url={item.newMedia} alt={''} isCover={true} />\r\n                                                                    </div>\r\n                                                                    <div className=\"d-flex flex-grow-1 flex-column pl-lg-5 w-100 overflow-hidden\">\r\n                                                                        <div className=\"d-flex align-items-start mb-1\">\r\n                                                                            <Link href={item.link} target='_blank' className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none text-gray-800\">\r\n                                                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                                                    imageSize={40}\r\n                                                                                    symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                                                    name={item.postname} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                                                <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.postname}</strong></p>\r\n                                                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.postname}</p>\r\n                                                                                </div>\r\n                                                                            </Link>\r\n                                                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                                                                    <Image className=\"h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                                                </OverlayTrigger>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <p className='line-clamp line-clamp-3 mb-1'>{item.postcontent}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                        :\r\n                        <Loader />}\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant='secondary' className='ms-3 btn-min-w' onClick={closeModalPop}>Cancel</Button>\r\n                    <Button className={`ms-3 btn-min-w ${spinner ? 'spinner':''}`} onClick={this.reArrangePosts}>Done</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pinToTop: state.moderation?.pinToTop\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        GET_LIST_ALL_PIN_TO_TOP_POST: () => dispatch(GET_LIST_ALL_PIN_TO_TOP_POST()),\r\n        GET_PIN_TO_TOP_LIST: () => dispatch(GET_PIN_TO_TOP_LIST()),\r\n        GET_REORDER_PIN_TO_TOP: (postId, indexing, calback) => dispatch(GET_REORDER_PIN_TO_TOP(postId, indexing, calback))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeOrderModal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, OverlayTrigger, Tooltip, Button, Image, Badge } from 'react-bootstrap';\r\nimport { GET_FIRST_LETTER, TOAST_ERROR } from '../../../../../../utils';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions';\r\nimport { DashboardModal } from '@uppy/react';\r\nimport UppyUpload from '../../../../../../utils/uppyUpload';\r\nimport $ from 'jquery'\r\nimport { WASABI_PATH } from '../../../../../../actions/api';\r\n\r\nconst uppyUploader = new UppyUpload()\r\nclass EditAside extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = { tagString: [], searchPost: '', selectedOption: [], isLoading: false, uppyProfileOpen: false, profile: '' };\r\n       }\r\n\r\n       componentDidMount() {\r\n              if (uppyUploader) {\r\n                     uppyUploader.uppy.on('transloadit:result', (stepName, result) => {\r\n                            this.props.onChangeAuthorImg(`${WASABI_PATH}tmp/${result.id}.${result.ext}`)\r\n                            setTimeout(() => {\r\n                                   uppyUploader.uppy.cancelAll()\r\n                                   this.setState({ uppyProfileOpen: false })\r\n                            }, 300)\r\n                     })\r\n              }\r\n              this.getTagsArray()\r\n       }\r\n\r\n       getTagsArray = () => {\r\n              let submitTags = (this.props?.tags || \"\").split(\",\").filter(tag => tag.trim().length > 0);\r\n              this.setState({ tagString: submitTags });\r\n\r\n       }\r\n       componentDidUpdate(prevProps) {\r\n              if (prevProps.tags !== this.props.tags) {\r\n                     this.getTagsArray();\r\n              }\r\n       }\r\n\r\n       onLoad = () => {\r\n              const { searchPost } = this.state;\r\n              if (searchPost?.length > 0) {\r\n                     this.setState({ isLoading: true });\r\n\r\n                     autoCompleteSearch(searchPost).then((response) => {\r\n                            const { responseData, responseCode } = response.data;\r\n                            if (responseCode === 200) {\r\n                                   const formattedTags = responseData?.totalTag.map(tag => ({ value: tag, label: tag.charAt(0).toUpperCase() + tag.slice(1) }));\r\n                                   this.setState({ selectedOption: formattedTags, isLoading: false });\r\n                            } else {\r\n                                   this.setState({ selectedOption: [], isLoading: false });\r\n                            }\r\n\r\n                     }).catch(() => {\r\n                            this.setState({ isLoading: false });\r\n                     });\r\n              } else {\r\n                     this.setState({ selectedOption: [], isLoading: false });\r\n              }\r\n       }\r\n\r\n\r\n       onSearchText = (textInput) => { this.setState({ searchPost: textInput }, () => this.onLoad()); }\r\n\r\n       handleSelectChange = (e) => {\r\n              const { tagString } = this.state;\r\n              if (e?.value?.length) {\r\n                     if (tagString.includes(e.value)) {\r\n                            TOAST_ERROR('Tag already exists');\r\n                     } else {\r\n                            this.setState({ tagString: [...tagString, e.value] }, () => this.props.onChangeTag(this.state.tagString.join(',')));\r\n                     }\r\n              }\r\n       };\r\n\r\n\r\n\r\n       onClickToRemoveTag = (index) => event => {\r\n              let { tagString } = this.state;\r\n              tagString.splice(index, 1)\r\n              this.setState({ tagString }, () => this.props.onChangeTag(tagString.join(',')))\r\n       }\r\n\r\n       handleOpen = event => {\r\n              this.setState({ uppyProfileOpen: true, })\r\n              $(\".uppy-Dashboard-close\").click(() => {\r\n                     uppyUploader.uppy.cancelAll()\r\n                     this.setState({ uppyProfileOpen: false })\r\n              })\r\n       }\r\n\r\n       handleSave = () => {\r\n              const { author, handle, onSavePost, content } = this.props;\r\n              if (author && handle && content) { onSavePost(); }\r\n       };\r\n\r\n\r\n       isValidNewOption = (inputValue) => {\r\n              return inputValue.length >= 3;\r\n            };\r\n\r\n       render() {\r\n              const { onChangeAuthor, onChangeHandle, onChangeContent, onClickRemoveAuthorImg, author, handle, authorImage, onSavePost, onSaveTag,  content, handleClose, loading, isTaggModal } = this.props\r\n              const { tagString, isLoading, selectedOption } = this.state\r\n\r\n              const tagsArrayFun = () => {\r\n                     const tagItem = tagString.map((tag, removeIndex) =>\r\n                            <Badge key={tag.toString()} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                   <span className=' text-ellipsis d-block'>{tag}</span>\r\n                                   <Button variant='link' size='sm' className=\"p-0 ms-1 \" onClick={this.onClickToRemoveTag(removeIndex)}>\r\n                                          <FontAwesomeIcon icon={'xmark'} />\r\n                                   </Button>\r\n                            </Badge>\r\n                     );\r\n                     return tagItem;\r\n              }\r\n              return (\r\n                     <div>\r\n                            <div className='p-4 m_sidebar_scroll_'>\r\n                                   {!isTaggModal &&\r\n                                          <Form.Group className='mb-3'>\r\n                                                 <Form.Label className=\"mb-2\" htmlFor=\"author_p_\">Author Profile</Form.Label>\r\n                                                 <div className=\"d-flex align-items-center mb-5\">\r\n                                                        <div className=\"me-3 me-xxl-4\">\r\n                                                               <div className=\"symbol h-70px w-70px position-relative rounded-circle bg-light overflow-hidden\">\r\n                                                                      {authorImage && authorImage != '' ? <Image src={authorImage} alt={author} height={70} width={70} className=\"iobject-center-cover\" load=\"lazy\" fluid />\r\n                                                                             : <span className=\"symbol-label bg-primary text-gray-100-alt fw-bold display-1 text-uppercase\">{GET_FIRST_LETTER(author)}</span>}\r\n\r\n                                                               </div>\r\n                                                        </div>\r\n                                                        <div className=\"d-flex align-items-start flex-column\">\r\n                                                               <div className=\"d-flex align-items-center\">\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={this.handleOpen}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'pen'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={onClickRemoveAuthorImg}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                               </div>\r\n                                                               <div className=\"form-text mt-2\">Allowed file types: png, jpg, jpeg.</div>\r\n                                                        </div>\r\n                                                 </div>\r\n                                          </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_n_\">Author Name <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_n_\" name=\"author_n_\" className={!author.length ? 'is-invalid' : ''} placeholder=\"Enter Author Name\" value={author} onChange={onChangeAuthor} />\r\n                                          {!author.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_h_\">Author Handle <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_h_\" name=\"author_h_\" className={!handle.length ? 'is-invalid' : ''} placeholder=\"Enter Author Handle\" value={handle} onChange={onChangeHandle} />\r\n                                          {!handle.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {isTaggModal ? <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"tags__\">Add Tag</Form.Label>\r\n                                          <div className=\"mb-3\">\r\n                                                 <CreatableSelect className=\"selectpicker\" placeholder={'Enter your Tag'} classNamePrefix=\"selectpicker\" isClearable isLoading={isLoading} options={selectedOption} onChange={this.handleSelectChange} onInputChange={this.onSearchText} value={selectedOption}  isValidNewOption={this.isValidNewOption} />\r\n                                          </div>\r\n                                          {/* <Button  onClick={()=>this.handleAddTagButton(searchPost)}>Add</Button> */}\r\n                                          <div className=\"mb-3 mb-xl-4\">\r\n                                                 <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                                                        {tagsArrayFun()}\r\n                                                 </div>\r\n                                          </div>\r\n                                   </Form.Group>:''}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"post_cont_\">Content</Form.Label>\r\n                                          <Form.Control as={'textarea'} className={`${!content.length ? 'is-invalid' : ''} textarea-min-row-7`} id=\"post_cont_\" placeholder=\"Enter Content\" value={content} onChange={onChangeContent} />\r\n                                          {!content.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                            </div>\r\n                            <div className=\"assets_btn_wrapper p-4 f-center flex-column\">\r\n                                   {!isTaggModal ? <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading || !(author && handle && content)} onClick={this.handleSave}>Save Changes</Button>\r\n                                          : <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading} onClick={()=> onSaveTag()}>Save Changes</Button>}\r\n                                   <Button variant='link' className='text-muted' onClick={handleClose}>Cancel</Button>\r\n                            </div>\r\n\r\n\r\n                            <DashboardModal\r\n                                   id=\"background-image\"\r\n                                   closeModalOnClickOutside\r\n                                   closeAfterFinish\r\n                                   open={this.state.uppyProfileOpen}\r\n                                   onRequestClose={this.handleClose}\r\n                                   uppy={uppyUploader.uppy}\r\n                                   hideUploadButton={false}\r\n                                   autoOpenFileEditor={false}\r\n                                   plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                                   animateOpenClose={true}\r\n                                   proudlyDisplayPoweredByUppy={false}\r\n                                   inline={false}\r\n                                   showProgressDetails={true}\r\n                                   height={750}\r\n                                   browserBackButtonClose={true}\r\n                                   showRemoveButtonAfterComplete={false}\r\n                            />\r\n                     </div>\r\n              );\r\n       }\r\n}\r\n\r\nexport default EditAside;","import ReactHtmlParser from 'react-html-parser';\r\nimport Rating from '../Rating';\r\n\r\n\r\nconst TextType = ({ content, mediaClass, rating, fontSize, lineCount, size }) => {\r\n  return <div className={`position-relative overflow-hidden ${mediaClass}`} style={{paddingBottom:`${size ? size : '100'}%`}}>\r\n            <div className=\"w-100 f-center flex-column position-absolute start-0 top-0 h-100 p-3\">\r\n              {rating ? \r\n              <div className=\"f-center ps-1 mb-4\">\r\n                <Rating className={'mx-1 fs-3'} iconClass=\"mx-1\" rating={rating} />\r\n              </div> \r\n              : null}\r\n              <div className=\"overflow-hidden\">\r\n                <p className={`text-center line-clamp-${lineCount ? lineCount : 4} line-clamp mb-0 ${!fontSize ?'fs-7':''}`} style={{fontSize:fontSize}}>{ReactHtmlParser(content)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n}\r\nexport default TextType\r\n","import React, { Component } from 'react';\r\nimport TextType from '../../../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../../../CommonComponents/MediaType/VideoType';\r\nimport { getImageWidthHeight } from '../../../../../../utils';\r\n\r\n\r\nclass ModalMedia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1,\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n            mediaSize: { height: 400, width: 400 },\r\n        };\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) {\r\n                this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n            }\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot })\r\n        }\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({\r\n                mediaSize: {\r\n                    height: modalData.mediaHeight,\r\n                    width: modalData.mediaWidth\r\n                }\r\n            })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { modalData, handleAllImageError,autoPlay,movePost } = this.props\r\n        const { winWidth, winHeight, mediaSize } = this.state\r\n        const scale = Math.min((winWidth - (winWidth > 1400 ? 850 : 650)) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n\r\n        return (\r\n            modalData.type == 1 ?\r\n                <div className='mx-auto w-100 p-4'>\r\n                    <TextType mediaClass=\"bg-gray-200\" size={120} content={modalData.postcontent} rating={modalData.rating} socialNetworkId={modalData.networkId} fontSize={'calc(14px + .3vw + .3vh)'} lineCount={10} />\r\n                </div>\r\n                :\r\n                <div className='w-100 m-auto' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n                    <div className=\"position-relative\">\r\n                        {(modalData.type == 2 || modalData.type == 4) ?\r\n                            <ImageType mediaClass={'content_img_'} size={paddingBottom} url={modalData.postFile} height={height} width={width} icon={modalData.networkId} rating={modalData.rating} alt={''} handleAllImageError={handleAllImageError} item={modalData} isCover={true} />\r\n                        :\r\n                        (modalData.type == 3 || modalData.type == 5) ?\r\n                            <VideoType key={movePost} item={modalData} mediaClass={'content_video'} size={paddingBottom} url={modalData.mediaUrl || modalData.mediaFile || modalData.mediaClip || modalData.postFile} poster={modalData.postFile} height={height} width={width} autoPlay={autoPlay ? autoPlay : true} muted={false} isCover={true} controls={true} loop={false} isupdate={1} />\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n              \r\n);\r\n    }\r\n}\r\n\r\nexport default ModalMedia;","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport EditAside from './EditAside';\r\nimport { editpost, onUpdateTags } from '../../../../../../actions/moderationActions';\r\nimport ModalMedia from '../Elements/ModalMedia';\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { author: '', handle: '', authorImage: '', postImage: '', content: '', tags: '', type: '', mediaUrl: '', mediaWidth: '', mediaHeight: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize);\r\n        const { modalData } = this.props\r\n        this.setState({ author: modalData.name, handle: modalData.username, authorImage: modalData.picture, postImage: modalData.postFile, content: modalData.postcontent, tags: modalData.tags, type: modalData.type, loading: false, mediaUrl: modalData.mediaUrl, mediaWidth: modalData.mediaUrl, mediaHeight: modalData.mediaUrl })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    onChangeAuthor = event => this.setState({ author: event.target.value })\r\n    onChangeHandle = event => this.setState({ handle: event.target.value })\r\n    onChangeAuthorImg = value => this.setState({ authorImage: value })\r\n    onClickRemoveAuthorImg = event => this.setState({ authorImage: \"\" })\r\n    onChangePostImg = value => this.setState({ postImage: value })\r\n    onChangePostType = value => this.setState({ type: 4 })\r\n    onChangeContent = event => this.setState({ content: event.target.value })\r\n    onChangeTag = value => this.setState({ tags: value })\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n\r\n    onClickTouploadImage = (value, callBack) => this.setState({ postImage: value }, () => callBack())\r\n\r\n\r\n\r\n    onSavePost = event => {\r\n        const { modalData, handleClose } = this.props\r\n        const { authorImage, author, content, handle } = this.state;\r\n        this.setState({ loading: true })\r\n        const postpayload = { content: content,  wallId: localStorage.getItem('wallId'), postId: modalData.imageList?.length ? String(modalData.ptPost) :  String(modalData.id), postauthor: author, posthandle: handle, authorpicture: authorImage }\r\n        this.props.editpost(postpayload, handleClose);\r\n    }\r\n\r\n    onSaveTag = event => {\r\n        const { modalData, handleClose, isTaggModal } = this.props\r\n        this.setState({ loading: true })\r\n        const tagPayload = { postId: modalData.imageList?.length ? String(modalData.ptPost) :  String(modalData.id), wallId: String(localStorage.getItem('wallId')), tags: this.state.tags };\r\n        this.props.onUpdateTags(tagPayload, isTaggModal, handleClose)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { modalData, handleClose, isTaggModal, handleAllImageError } = this.props\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>{isTaggModal ? 'Add Tag' : 'Edit Post'}</span>   \r\n                <div className='d-flex align-items-center h-100'>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-wrap\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n                    <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                </div>\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    <EditAside modalData={modalData} onChangeAuthor={this.onChangeAuthor} onChangeHandle={this.onChangeHandle} onChangeAuthorImg={this.onChangeAuthorImg} onChangePostImg={this.onChangePostImg} onChangeContent={this.onChangeContent} onChangeTag={this.onChangeTag} onClickRemoveAuthorImg={this.onClickRemoveAuthorImg} handleClose={handleClose} onSavePost={this.onSavePost} onSaveTag={this.onSaveTag} isTaggModal={isTaggModal} {...this.state} />\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editpost: (payload, callback) => dispatch(editpost(payload, callback)),\r\n        onUpdateTags: (data, isTaggModal, callback) => dispatch(onUpdateTags(data, isTaggModal, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","    import React, { useEffect } from \"react\";\r\n    import Draggable from \"react-draggable\";\r\n    import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\n    const Hotspot = ({\r\n      ImageClass,\r\n      item,\r\n      enableHotspot,\r\n      activeCarousalPostsList,\r\n      activeCarousalPost,\r\n      spotWidth,\r\n      spotHeight,\r\n      onControlledDrag,\r\n      changePrdId,\r\n      ctaData,\r\n    }) => {\r\n      useEffect(() => {}, [activeCarousalPostsList?.length ? activeCarousalPostsList : item.postproduct]);\r\n\r\n      const getCarousal = activeCarousalPostsList?.length\r\n        ? item?.imageList?.find((e) => e.referenceId === activeCarousalPost)\r\n        : null;\r\n\r\n\r\n      const renderHotspots = (hotspotList) =>\r\n        hotspotList.map((Item, index) => {\r\n          const left = (spotWidth * Item.hotspot.left.replace(\"%\", \"\")) / 100;\r\n          const top = (spotHeight * Item.hotspot.top.replace(\"%\", \"\")) / 100;\r\n\r\n          return (\r\n            <Draggable\r\n              bounds=\"parent\"\r\n              onStop={onControlledDrag}\r\n              key={`hotspot_${Item.ugc_product}`}\r\n              onStart={() => changePrdId(Item.ugc_product)}\r\n              defaultPosition={{ x: left, y: top }}\r\n            >\r\n              <div className=\"h-16px w-16px position-absolute\">\r\n                <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                    <Tooltip data-theme=\"light\">\r\n                      <div className=\"text-start\">\r\n                        {Item.product?.product_title || \"\"}\r\n                        {((Item.product?.product_discount > 0) || Item.product?.product_price > 0) && (\r\n                          <div className=\"fw-bold fs-6\">\r\n                            {Item.product?.price_currency_symbol}\r\n                            {Item.product?.product_discount > 0\r\n                              ? Item.product.product_discount\r\n                              : Item.product?.product_price}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <div\r\n                    className={`blob ${ctaData?.hotspot_type === 1 ? \"blob_002\" : \"blob_001\"}`}\r\n                    style={{ backgroundColor: ctaData?.hotspot_color }}\r\n                  >\r\n                    <div\r\n                      className=\"f-center fw-medium fs-8\"\r\n                      style={{ color: ctaData?.hotspot_type_color, lineHeight: \"20px\" }}\r\n                    >\r\n                      {ctaData?.hotspot_type === 1 ? index + 1 : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </Draggable>\r\n          );\r\n        });\r\n\r\n\r\n      return (\r\n        <div className={`h-100 w-100 ${ImageClass}`}>\r\n          {enableHotspot == 1 && spotWidth ? (\r\n            activeCarousalPostsList?.length && getCarousal?.hotspot\r\n              ? renderHotspots(activeCarousalPostsList)\r\n              : item.postproduct?.length && !activeCarousalPost\r\n              ? renderHotspots(item.postproduct)\r\n              : null\r\n          ) : null}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    export default Hotspot;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\nimport ModalMedia from \"./Elements/ModalMedia\";\r\nimport { CAROUSAL_POST_PRODUCTS } from \"../../../../../actions/moderationActions\";\r\nimport getImageSize from 'react-image-size';\r\n\r\nconst CarousalPost = (props) => {\r\n\r\n    const { updateCarousalPost, item, handleAllImageError } = props\r\n\r\n    const arrowShow = item.imageList.length > 1;\r\n    const splideRef = useRef(null);\r\n    const  winWidth = window.innerWidth\r\n    const  winHeight = window.innerHeight\r\n    const [mediaSize, setmediaSize] = useState({ height: 400, width: 400 })\r\n    const [movePost, setmovePost] = useState(0)\r\n\r\n    const settings = {\r\n        type: \"slide\",\r\n        perPage: 1,\r\n        pagination: true,\r\n        arrows: arrowShow,\r\n        start: 0,\r\n    };\r\n\r\n    useEffect(() => {\r\n        const ids = item.imageList.map(item => item.referenceId).join(',');\r\n        onMediaLoad(item.imageList[0])\r\n\r\n        CAROUSAL_POST_PRODUCTS(ids).then(({ data: { responseCode, responseData } }) => {\r\n            if (responseCode === 200) {\r\n                setmovePost(item.imageList[0].referenceId)\r\n                updateCarousalPost(item.imageList[0].referenceId, responseData.postproduct)\r\n            } \r\n        }).catch((error) => {\r\n            console.log(\"error\", error)\r\n            updateCarousalPost([])\r\n        })\r\n    }, [item]);\r\n\r\n\r\n    const onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            setmediaSize({\r\n                height: modalData.mediaHeight,\r\n                width: modalData.mediaWidth\r\n            })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageSize(modalData.newMedia);\r\n                setmediaSize({\r\n                    height: height,\r\n                    width: width\r\n                })\r\n            } catch (error) {\r\n                setmediaSize({\r\n                    height: 100,\r\n                    width: 100\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const splideInstance = splideRef.current?.splide;\r\n        if (splideInstance) splideInstance.on(\"move\", () => {\r\n            onMediaLoad(item.imageList[splideInstance.index])\r\n            updateCarousalPost(item.imageList[splideInstance.index].referenceId)\r\n            setmovePost(item.imageList[splideInstance.index].referenceId)\r\n        })\r\n\r\n        return () => {\r\n            splideInstance?.destroy();\r\n        };\r\n    }, [item.imageList]);\r\n\r\n    return (\r\n        <div className=\"m_c_p m-auto\">\r\n            {  item.imageList && item.imageList.length > 0 ? (\r\n                <Splide\r\n                    ref={splideRef}\r\n                    hasTrack={false}\r\n                    options={settings}\r\n                    key={item.id}\r\n                >\r\n                    <SplideTrack>\r\n                        {item.imageList.map((assetItem, assetKey) => (\r\n                            <SplideSlide key={assetKey} className={'f-center'}>\r\n                                <ModalMedia\r\n                                    modalData={assetItem}\r\n                                    movePost={movePost}\r\n                                    handleAllImageError={handleAllImageError}\r\n                                    autoPlay={assetItem.referenceId==movePost}\r\n                                />\r\n                            </SplideSlide>\r\n                        ))}\r\n                    </SplideTrack>\r\n                </Splide>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarousalPost;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Modal, Dropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { ENABLE_HOTSPOT_ACTION, REMOVE_TAGGED_PRODUCT_ACTION, UPDATE_HOTSPOT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { getUserInfo_afterChanges } from '../../../../../actions/loginActions';\r\nimport EditPost from './EditElements';\r\nimport Hotspot from './Elements/Hotspot';\r\nimport ModalMedia from './Elements/ModalMedia';\r\nimport './modal.scss';\r\nimport ErrorFound from '../../../../ErrorFound';\r\nimport { getImageWidthHeight } from '../../../../../utils';\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\nimport CarousalPost from './CarousalPost';\r\n\r\nconst ContentModalAside = React.lazy(() => import('./Elements/ContentModalAside'));\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spotWidth: 0, spotHeight: 0, searchTag: '', selectedTag: [], productId: 0, enableHotspot: this.props.modalData?.hotspot, loading: false,\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n            paddingBottom: 100,\r\n            mediaSize: { height: 400, width: 400 },\r\n            editPost: false,\r\n            isTaggModal: false,\r\n            activeCarousalPost: 0,\r\n            activeCarousalPostsList: [],\r\n            carousalPostsList: [],\r\n        }\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot, activeCarousalPost: 0, activeCarousalPostsList: [], carousalPostsList: [], })\r\n        }\r\n    }\r\n\r\n    handleResizeg = () => {\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    \r\n\r\n    updateCarousalPost = (e, data, refId = 0, status) => {\r\n\r\n        // status=1 add product,2=remove product\r\n\r\n        const { modalData } = this.props\r\n\r\n        const getFilteredData = (list) => list.filter((obj) => obj.post_id == e);\r\n\r\n        if (data) this.setState({ carousalPostsList: data })\r\n\r\n        if (status) {\r\n            const getPostData =\r\n                status == 2 ? data.filter((item) => item.id != refId) : [...data];\r\n            if (status == 1) getPostData.push(refId)\r\n            const filteredData = getFilteredData(getPostData);\r\n            this.setState(\r\n                {\r\n                    carousalPostsList: getPostData,\r\n                    activeCarousalPostsList: []\r\n                },\r\n                () => this.updateCarousalPostList(filteredData)\r\n            );\r\n        } else {\r\n\r\n \r\n            const hotspotValue = modalData?.imageList?.find(item => item.referenceId == e);\r\n            const filteredData = getFilteredData(data || this.state.carousalPostsList);\r\n\r\n            this.setState(\r\n                {\r\n                    activeCarousalPost: e,\r\n                   enableHotspot: hotspotValue?.hotspot || false,\r\n                    activeCarousalPostsList: [],\r\n                },\r\n                () => this.updateCarousalPostList(filteredData)\r\n            );\r\n        }\r\n    }\r\n\r\n    updateCarousalPostList = (e) =>{\r\n        \r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) {\r\n                this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n            }\r\n        }, 100);\r\n\r\n         this.setState({ activeCarousalPostsList: e })}\r\n\r\n   \r\n\r\n    updateHotspot = (productId, location_hotspot) => {\r\n\r\n        const { carousalPostsList, activeCarousalPost } = this.state\r\n\r\n        const updatedData = carousalPostsList?.length && carousalPostsList.map(item => (\r\n            item.ugc_product == productId ?\r\n                {\r\n                    ...item, // Keep other properties unchanged\r\n                    hotspot: location_hotspot,\r\n                    product: {\r\n                        ...item.product, // Spread the child object\r\n                        hotspot: location_hotspot // Update the `age` value\r\n                    }\r\n                } : item\r\n        ));\r\n\r\n        this.updateCarousalPost(activeCarousalPost, updatedData)\r\n    }\r\n\r\n    onControlledDrag = (e, position) => {\r\n        const { x, y } = position;\r\n        const { spotWidth, spotHeight, productId, activeCarousalPost } = this.state;\r\n        const { modalData } = this.props;\r\n        let l = x * 100 / spotWidth;\r\n        let t = y * 100 / spotHeight;\r\n        const location_hotspot = { 'left': `${l}%`, 'top': `${t}%` }\r\n        const hostpot = `left:${l}%;top:${t}%;`\r\n        this.props.UPDATE_HOTSPOT_ACTION(productId, activeCarousalPost ? activeCarousalPost : modalData?.referenceId, location_hotspot, hostpot, activeCarousalPost ? this.updateHotspot : null)\r\n    };\r\n\r\n\r\n    changeHotspotStatus = (hotspotEnable, referenceId) => { \r\n        const { activeCarousalPost } = this.state;\r\n        let isHotspotEnable = hotspotEnable == 1 ? 0 : 1;\r\n        this.setState({ enableHotspot: isHotspotEnable })\r\n        this.props.ENABLE_HOTSPOT_ACTION(isHotspotEnable, activeCarousalPost ? activeCarousalPost : referenceId, this.onSaveCallBack, activeCarousalPost);\r\n    };\r\n\r\n    changePrdId = (id) => {\r\n        this.setState({ productId: id })\r\n    }\r\n\r\n    onSaveCallBack = () => { \r\n\r\n        const { activeCarousalPost } = this.state;\r\n        const { modalData } = this.props;\r\n\r\n        var enableHotspot = this.props.modalData?.hotspot\r\n\r\n        if(activeCarousalPost){\r\n            const getCarousal = modalData?.imageList?.find((e)=>e.referenceId==activeCarousalPost)\r\n            enableHotspot = getCarousal.hotspot\r\n        }\r\n        \r\n        this.setState({ enableHotspot: enableHotspot })\r\n    }\r\n    \r\n\r\n    responceApi = () => {\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    handleClose = () => this.props.modalCallback(false)\r\n    editPostFun = (status) => this.setState({ editPost: !this.state.editPost, isTaggModal: status })\r\n\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({ mediaSize: { height: modalData.mediaHeight, width: modalData.mediaWidth } })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    editPostFun = (status) => checkPermission('contentGallery', 'editGallery', true) ? this.setState({ editPost: !this.state.editPost, isTaggModal: status }) : {}\r\n\r\n    render() {\r\n        const { modalToggle, modalData, onRefreshPost, filter, ctaData, postPostUpdate, currentIndex, clickToPin, clickToGetUgc, clickToDeletePost, clickToBlockUser, handleAllImageError } = this.props\r\n        const { spotWidth, spotHeight, enableHotspot, winWidth, winHeight, mediaSize, editPost, isTaggModal, activeCarousalPost, activeCarousalPostsList, carousalPostsList } = this.state;\r\n        const scale = Math.min((winWidth - 450) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n\r\n        return <Modal size={'full'} show={modalToggle} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n\r\n\r\n                <span className='text-muted fw-medium'>{editPost ? 'Edit Post' : 'General Info'}</span>\r\n                <div className='d-flex align-items-center h-100'>\r\n                    {!editPost ?\r\n                        <>\r\n                            <div className=\"d-none d-lg-flex h-100\">\r\n                                {\r\n                                    <>\r\n                                        {[18, 2].includes(modalData?.networkId) ?\r\n                                            <Button variant={'secondary'} className={`p-0 f-center border-0 me-3 btn-active-primary flex-shrink-0 refresh_post_media_Popup${modalData.id}`} onClick={() => onRefreshPost(modalData)} style={{ display: 'none' }}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'arrows-rotate'} iconClass={'me-1'} />\r\n                                                Refresh Post\r\n                                            </Button> : null}\r\n                                        {(((modalData.networkId == 3 && modalData.feedFilter == 62) || modalData.networkId == 7 || (modalData.networkId == 18 && (modalData.feedFilter == 24 || modalData.feedFilter == 25 || modalData.feedFilter == 26))) && modalData.ugcstatus == null && modalData.type != 1) ?\r\n                                            <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={clickToGetUgc(modalData)}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'} />\r\n                                                Get Rights\r\n                                            </Button> : null}\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(true)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />\r\n                                            Tags\r\n                                        </Button>\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(false)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'pen'} iconClass={'me-1'} />\r\n                                            Edit Post\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <Dropdown align=\"end\" className=\"f-center position-relative ms-4 h-100\">\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary arrow_disabled h-100\">\r\n                                    <FontAwesomeIcon icon={'ellipsis'} iconClass={'me-1'} />More\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {(modalData.ugcstatus != 1 || modalData.ugcstatus != 2) ?\r\n                                        <Dropdown.Item onClick={clickToDeletePost(modalData, modalData.id, modalData.status, currentIndex, modalData.feedId, modalData.feedFilter)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'trash-can'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">Delete Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : null}\r\n                                    <Dropdown.Item onClick={clickToBlockUser(currentIndex, modalData.id, modalData.username, 'grid', localStorage.getItem('wallId'))}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'ban'} iconClass={'me-1'} />\r\n                                        <span className=\"navi-text\">Block User</span>\r\n                                    </Dropdown.Item>\r\n                                    {modalData.newlink != '' && modalData.newlink != null ?\r\n                                        <Dropdown.Item href={modalData.newlink} target=\"_blank\">\r\n                                            <FontAwesomeIcon type={'solid'} icon={'paper-plane'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">View Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : <></>}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </>\r\n                        : null}\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={this.handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_left rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex - 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-left'} />\r\n                    </Button>\r\n                    <div className='w-100 position-relative' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n\r\n                        {\r\n                            modalData.imageList && Object.keys(modalData.imageList).length ?\r\n                                <CarousalPost carousalPostsList={carousalPostsList} updateCarousalPost={this.updateCarousalPost} item={modalData} handleAllImageError={handleAllImageError} />\r\n                                :\r\n                                <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                        }\r\n\r\n\r\n                        {!(modalData.type == 3 || modalData.type == 5) ? <div className=\"position-absolute top-0 start-0 w-100 h-100\" style={{ zIndex: 1 }} ref={this.hotspotRef}>\r\n                            <Suspense fallback={<></>}>\r\n                                <ErrorFound><Hotspot ImageClass={'hotspot-section'} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} ImageUrl={modalData?.newMedia} spotWidth={spotWidth} spotHeight={spotHeight} enableHotspot={enableHotspot} item={modalData} width={width} height={height} onControlledDrag={this.onControlledDrag} changePrdId={this.changePrdId} imgHeight={modalData?.mediaHeight} imgWidth={modalData?.mediaWidth} ctaData={ctaData} /></ErrorFound>\r\n                            </Suspense>\r\n                        </div> : null}\r\n                    </div>\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_right rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex + 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'} />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    {editPost ?\r\n                        <EditPost handleClose={() => this.editPostFun(false)} modalData={modalData} filter={filter} isTaggModal={isTaggModal} handleAllImageError={handleAllImageError} />\r\n                        :\r\n                        <Suspense fallback={<></>}>\r\n                            {modalData ? <ContentModalAside updateCarousalPost={this.updateCarousalPost} carousalPostsList={carousalPostsList} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} modalData={modalData} changeHotspotStatus={this.changeHotspotStatus} enableHotspot={enableHotspot} postPostUpdate={postPostUpdate} key={modalData?.id} modalCallback={this.props.modalCallback} /> : null}\r\n                        </Suspense>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        UPDATE_HOTSPOT_ACTION: (productId, item, referenceId, location_hotspot, hostpot, callBack) => dispatch(UPDATE_HOTSPOT_ACTION(productId, item, referenceId, location_hotspot, hostpot, callBack)),\r\n        REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)),\r\n        ENABLE_HOTSPOT_ACTION: (id, referenceId, callBack, isCarousal) => dispatch(ENABLE_HOTSPOT_ACTION(id, referenceId, callBack, isCarousal)),\r\n        getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","import React, { Component, useEffect, useState } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport { ExpiredPostInstaQueue } from '../../../../../actions/moderationActions'\r\nimport { isRefresh } from '../../../../../utils'\r\nclass RefreshPostData extends Component {\r\n    state = {\r\n        isRequest: false\r\n    }\r\n    componentDidMount() {\r\n        const { isRequest } = this.state\r\n        const { item } = this.props\r\n        if (isRefresh(item)) {\r\n            this.setState({ isRequest: true }, () => ExpiredPostInstaQueue(item))\r\n        }\r\n    }\r\n    render() {\r\n        const { refreshPostLoading, onRefreshPost, item } = this.props\r\n        return <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh Post</Tooltip>} >\r\n            <span className={`refresh_post_media_${item.id} me-2 cursor-pointer ${refreshPostLoading ? \"disabled\" : \"\"}`} onClick={() => onRefreshPost(item)} style={{ display: 'none' }}>\r\n                <span className={`refresh-icon-${item.id} d-inline-block`}><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n            </span>\r\n        </OverlayTrigger>\r\n    }\r\n}\r\n\r\nexport default RefreshPostData","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\nimport moment from 'moment';\r\nimport { clickToPostPin, clickToDeletePost, clickToBlockUser, clickToPostStatus, GET_UGC_POST_DETAIL, ugcModal, GET_UGC_REQUEST, UPDATE_INSTA_POST_ACTION } from '../../../../actions/moderationActions'\r\nimport ProductTags from './Elements/TagedProducts'\r\nimport Tags from './Elements/Tags'\r\nimport { TIKTOK_UPDATE_STATUS, GET_NETWORK_ICON, GET_NETWORK_NAME, isRefresh } from '../../../../utils';\r\nimport ChangeOrderModal from './Elements/ChangeOrderModal'\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\r\nimport { OverlayTrigger, Dropdown, Tooltip, Card, Form, Button, Image } from 'react-bootstrap'\r\nimport { baseUrl, ImagePlaceholder } from '../../../../Assets/AssetsHelper';\r\nimport ContentModal from './ContentModal/ContentModal';\r\nimport Masonry from \"react-masonry-component\";\r\nimport Author from '../CommonComponents/Author/Author';\r\nimport TextType from '../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../CommonComponents/MediaType/VideoType';\r\nimport RefreshPostData from './Elements/RefreshPost'\r\nimport Rating from '../CommonComponents/Rating';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\n\r\n\r\n\r\nclass MasonryView extends Component {\r\n    imageQueue = [];\r\n    state = { postID: null, id: null, data: null, itemIndex: null, modalData: null, firstRequest: false, openpinToTopModal: false, showModal: false, currentIndex: null }\r\n\r\n\r\n    clickToPin = (index, postId, status) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostPin(index, postId, status) }\r\n\r\n    clickToGetUgc = (item) => event => {if(checkPermission('contentGallery', 'editGallery', true)) { this.props.getUgcDetails(item); this.openUgcModal() }}\r\n\r\n    clickToDeletePost = (item, index) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToDeletePost(item, index, this.props.navigate)}\r\n\r\n    clickToBlockUser = (index, userName) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToBlockUser(index, userName)}\r\n\r\n    clickToPostStatus = (index, postId, value) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatus(index, postId, value)}\r\n\r\n    onClickToPostTags = (tags) => event => { this.props.searchTagsFilter(tags) }\r\n\r\n    openUgcModal = (data) => { this.props.ugcModal(true) }\r\n\r\n    clickToGetLink = (type, item) => event => {\r\n        this.props.getUgcDetails(item)\r\n        this.props.GET_UGC_REQUEST(item)\r\n        this.props.onShow(type, item.ugcmodified)\r\n    }\r\n\r\n    handleImageError = (e) => {\r\n        const src = e.target.getAttribute(\"data-id\");\r\n        if (!this.imageQueue.includes(src)) {\r\n            this.imageQueue.push(src);\r\n            if (!this.state.firstRequest) this.processImageQueue();\r\n        }\r\n    };\r\n\r\n    processImageQueue = async () => {\r\n        this.setState({ firstRequest: true })\r\n        const src = this.imageQueue[0];\r\n        const imgTarget = document.getElementById(`imgID${src}`);\r\n        if (src) {\r\n            TIKTOK_UPDATE_STATUS(src).then(({ data }) => {\r\n                this.imageQueue.shift();\r\n                if (imgTarget) imgTarget.src = data.media;\r\n                this.processImageQueue()\r\n            })\r\n                .catch((error) => {\r\n                    this.imageQueue.shift();\r\n                    if (imgTarget) imgTarget.src = ImagePlaceholder;\r\n                    this.processImageQueue()\r\n                })\r\n        }\r\n    };\r\n\r\n    onRefreshPost = async (item) => {\r\n        const { UPDATE_INSTA_POST_ACTION } = this.props\r\n        if(checkPermission('contentGallery', 'editGallery', true)) await UPDATE_INSTA_POST_ACTION(item)\r\n\r\n    }\r\n\r\n    handleModalShow = (data, index) =>  {\r\n        this.setState({ showModal: true, modalData: data, currentIndex: index })\r\n    }\r\n\r\n    handleCallback = (dataEvent) => {\r\n        this.setState({\r\n            showModal: dataEvent, modalData: dataEvent ? this.state.modalData : null, currentIndex: null\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.listData !== prevProps.listData) {\r\n            this.setState({ modalData: this.props.listData[this.state.currentIndex] });\r\n        }\r\n    }\r\n\r\n\r\n    slideAssets = (currentIndex) => event => {\r\n        const { listData } = this.props\r\n        if (currentIndex === -1) {\r\n            let count = listData.length - 1\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n        else {\r\n            let count = listData.length == currentIndex ? 0 : currentIndex\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const PersonalizationUgcRights = 1\r\n        const { total, activeTab, filter, moderation, getUgcDetails, ugcData, ugcPopup, ugcRequestData, onShow, postCarosal, handleAllImageError } = this.props\r\n        const { openpinToTopModal, showModal, modalData } = this.state;\r\n        let selection = filter?.tags.join()\r\n\r\n        return (<div className=\"w-100 mb-4 mb-lg-0\">\r\n            <Masonry className={`row gx-2`} elementType={\"div\"} disableImagesLoaded={false} updateOnEachImageLoad={true} enableResizableChildren > {\r\n                (moderation?.listData && moderation?.listData.length > 0) ? moderation?.listData.map((item, index) => {\r\n                    return (item.status == activeTab || activeTab == 0) ?\r\n                        <div key={`post${index}_${item.id}`} total-items={total} className={`assetsItem`} id={`content_id-${item.id}`} data-post-id={item.id} data-highlight={item.highlight} data-pinned={item.pin} data-created={item.createdAt}>\r\n                            <ErrorFound>\r\n                                <Card className='border-0'>\r\n                                    <Card.Body className=\"p-0\">\r\n                                        <div className=\"f-between p-2\" style={{ boxShadow: '0px 1px 0px rgba(0,0,0,.1)' }}>\r\n                                            <div className=\"d-flex align-items-center list-inline mb-0\" id={`post-actions-${item.id}`}>\r\n                                                <Form.Check className='me-2' checked={item.isChecked} value={item.isChecked} onChange={this.props.clickPostChecked(index)} />\r\n\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Pin to Top</Tooltip>}>\r\n                                                    <span className={`w-18px f-center fs-8 me-2 cursor-pointer ${item.pin ? 'text-primary' : 'text-muted'}`} onClick={this.clickToPin(index, item.imageList?.length ? item.ptPost : item.postId, item.pin)} data-value={item.pin}>\r\n                                                        <FontAwesomeIcon type={'solid'} icon={'thumbtack'} />\r\n                                                    </span>\r\n                                                </OverlayTrigger>\r\n                                                {(((item.networkId == 3 && item.feedFilter == 62) || (item.networkId == 18 && (item.feedFilter == 24 || item.feedFilter == 25 || item.feedFilter == 26))) && item.ugcstatus == null && item.type != 1 && localStorage.getItem('wallLimitExceed') != 'true') ?\r\n                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Get Rights</Tooltip>}>\r\n                                                        <span className=\"w-18px f-center fs-8 me-2 cursor-pointer\" onClick={() => { if(checkPermission('contentGallery', 'editGallery', true)){getUgcDetails(item); this.openUgcModal()} }}>\r\n                                                            {item.ugcRights == null || item.ugcstatus == 4 ?\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-muted'} />\r\n                                                                : item.ugcstatus == 2 ?\r\n                                                                    <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-success'} />\r\n                                                                    : item.ugcstatus == 1 ?\r\n                                                                        <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'text-warning'} />\r\n                                                                        : item.ugcstatus == 3 ?\r\n                                                                            <FontAwesomeIcon type={'solid'} icon={'user-xmark'} iconClass={'text-danger'} />\r\n                                                                            : ''}\r\n                                                        </span>\r\n                                                    </OverlayTrigger>\r\n                                                    : null}\r\n\r\n                                                {[18, 2].includes(item?.networkId) ?\r\n                                                    <RefreshPostData onRefreshPost={this.onRefreshPost} item={item} />\r\n                                                    : null}\r\n                                            </div>\r\n\r\n                                            <Dropdown>\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>More Actions</Tooltip>}>\r\n                                                    <Dropdown.Toggle variant='secondary' className=\"arrow_disabled dropdown-toggle border-0 p-0\">\r\n                                                        <FontAwesomeIcon icon={'ellipsis'} />\r\n                                                    </Dropdown.Toggle>\r\n                                                </OverlayTrigger>\r\n                                                <Dropdown.Menu>\r\n                                                    {item.ugcstatus != 1 || item.ugcstatus != 2 ?\r\n                                                        <Dropdown.Item onClick={this.clickToDeletePost(item, index)}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'trash-can'} /></span>\r\n                                                            Delete Post\r\n                                                        </Dropdown.Item> : null}\r\n                                                    <Dropdown.Item onClick={this.clickToBlockUser(index, item.username)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                                                        <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'ban'} /></span>\r\n                                                        Block User\r\n                                                    </Dropdown.Item>\r\n                                                    {item.newlink != '' && item.newlink != null ?\r\n                                                        <Dropdown.Item href={item.newlink} target=\"_blank\">\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'paper-plane'} /></span>\r\n                                                            View Post\r\n                                                        </Dropdown.Item>\r\n                                                        : null}\r\n                                                    {item.pin ?\r\n                                                        <Dropdown.Item onClick={() => this.setState({ openpinToTopModal: true })}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'right-left'} /></span>\r\n                                                            Change Order\r\n                                                        </Dropdown.Item>\r\n                                                        : ''}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center cursor-pointer flex-column\">\r\n                                            <div className='position-relative w-100'>\r\n                                                <div onClick={()=>localStorage.getItem('wallLimitExceed') != 'true' ? this.handleModalShow(item, index) : {}}>\r\n\r\n                                                    { item.imageList && item.imageList.length ? \r\n                                                    <span className='position-absolute top-0 end-0 p-2' style={{zIndex:2}}>\r\n                                                        <FontAwesomeIcon type={'solid'} icon={'clone'} iconClass={'text-white filter-shadow'} />\r\n                                                    </span> : null }\r\n\r\n                                                    {item.type == 1 ?\r\n                                                        <TextType mediaClass={'bg-light'} content={item.postcontent} rating={item.rating} socialNetworkId={item.networkId} />\r\n                                                        :\r\n                                                        (item.type == 2 || item.type == 4) ?\r\n                                                            <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} isCover={true} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} item={item} />\r\n                                                            :\r\n                                                            (item.type == 3 || item.type == 5) ?\r\n                                                                <>{item.mediaClip ?\r\n                                                                    <VideoType item={item} mediaClass={'content_video'} size={false} url={item.mediaClip} poster={item.postFile} height={item.mediaHeight} width={item.mediaWidth} autoPlay={true} muted={true} isCover={true} controls={false} loop={true} />\r\n                                                                    : <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} isCover={true} item={item} />}\r\n                                                                    <div className='position-absolute f-center h-100 w-100 start-0 top-0 text-white' style={{ fontSize: 45 }}>\r\n                                                                        <FontAwesomeIcon icon={'circle-play'} iconClass={'filter-shadow'} />\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null}\r\n                                                </div>\r\n                                                <div className=\"position-absolute w-100 start-0 bottom-0 p-3 w-100\" style={{ overflowX: 'auto', zIndex: 1 }}>\r\n                                                <ErrorFound><ProductTags item={item} openContent={(item, index) => this.handleModalShow(item, index) } index={index} navigate={this.props.navigate}/></ErrorFound>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {(PersonalizationUgcRights == 1) ? (item.ugcstatus == 1 || item.ugcstatus == 2 || item.ugcstatus == 3 || item.ugcstatus == 4) ?\r\n                                                <div className=\"w-100\">\r\n                                                    {item.ugcstatus == 1 ?\r\n                                                        <div onClick={this.clickToGetLink(1, item)} className=\"bg-warning f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-clock'} />\r\n                                                            </span>\r\n                                                            Pending\r\n                                                            {item.ugccreated ?\r\n                                                                <small>\r\n                                                                    ({item.ugccreated ? moment(moment(item.ugcmodified, 'YYYY-MM-DD  HH:mm:ss').utcOffset(0)).fromNow() : null})\r\n                                                                </small>\r\n                                                                : null}\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 2 ?\r\n                                                        <div onClick={this.clickToGetLink(2, item)} className=\"bg-success f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} />\r\n                                                            </span>\r\n                                                            Approved\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 3 ?\r\n                                                        <div onClick={this.clickToGetLink(3, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Rejected\r\n                                                        </div>\r\n                                                        : null}\r\n\r\n                                                    {item.ugcstatus == 4 ?\r\n                                                        <div onClick={this.clickToGetLink(4, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Expired\r\n                                                        </div>\r\n                                                        : null}\r\n                                                </div>\r\n                                                : null\r\n                                                : null}\r\n\r\n                                            {item.ctastatus == 1 && item.buttonText != '' ?\r\n                                                <div className={`d-flex p-2 w-100 grid-cta-status-${item.id}`}>\r\n                                                    <a className=\"btn font-weight-bold text-nowrap w-100\" title={item.buttonText} target=\"_blank\" href={`${item.buttonUrl && item.buttonUrl.includes('http') ? item.buttonUrl : `//${item.buttonUrl}`}`} style={{ backgroundColor: item.ctaButtonColor, color: item.ctaTextColor }} >\r\n                                                        <span>{item.buttonText}</span>\r\n                                                    </a>\r\n                                                </div>\r\n                                                : null}\r\n                                        </div>\r\n                                        {item.rating > 0 && item.type != 1 ? <div className='d-flex justify-content-start p-3 pb-0'>\r\n                                            <Rating className={'fs-5'} iconClass=\"me-1\" rating={item.rating}/>\r\n                                        </div>: null}\r\n                                        <div className=\"p-3\">\r\n                                            <Tags item={item} onClickToPostTags={this.onClickToPostTags} selection={selection} key={item.tags} />\r\n                                            <div className=\"f-between\">\r\n                                                <div className=\"d-flex align-items-center pe-2\" style={{ maxWidth: 'calc(100% - 25px)' }}>\r\n                                                    <div className='d-flex align-items-center overflow-hidden' style={{ maxWidth: '100%' }}>\r\n                                                        <Author imageSize={36}\r\n                                                            symbolClass={'symbol-label fs-5'}\r\n                                                            className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                            name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                        <div className=\"d-flex flex-column flex-grow-1 overflow-hidden\">\r\n                                                            {item?.link ?\r\n                                                            <a href={item?.link} target=\"_blank\" className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</a>\r\n                                                            : \r\n                                                            <span className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</span>}\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\">@{parse(item.username)}</span>\r\n                                                                <span className=\"h-4px w-4px rounded-circle mx-1 d-flex flex-shrink-0\" style={{ backgroundColor: 'var(--bs-gray-600)' }}></span>\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\"> {moment(new Date(item.createdAt * 1000)).fromNow()}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className=\"d-flex align-items-center h-24px w-24px flex-shrink-0\">\r\n                                                    <Image src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={24} width={24} alt={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center p-3 border-top\">\r\n                                            {item.status != 3 ? <div className=\"w-50 me-1\">\r\n                                                <Button variant='public' size='sm' onClick={this.clickToPostStatus(index, item.imageList?.length ? item.ptPost : item.postId, 1)} className={`${item.status == 1 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Public</Button>\r\n                                            </div> : null}\r\n                                            {item.status != 3 ? <div className=\"w-50 ms-1\">\r\n                                                <Button variant='private' size='sm' onClick={this.clickToPostStatus(index,  item.imageList?.length ? item.ptPost : item.postId, 2)} className={`${item.status == 2 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Private</Button>\r\n                                            </div> : null}\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </ErrorFound>\r\n                        </div>\r\n                        : null\r\n                }) : null\r\n            }\r\n            </Masonry>\r\n            {modalData ?\r\n                <ContentModal clickToPin={this.clickToPin} clickToGetUgc={this.clickToGetUgc} clickToDeletePost={this.clickToDeletePost} clickToBlockUser={this.clickToBlockUser} modalCallback={this.handleCallback} modalToggle={showModal} modalData={modalData} exportDonwloadMedia={this.exportDonwloadMedia} slideAssets={this.slideAssets} currentIndex={this.state.currentIndex} filter={filter} handleAllImageError={handleAllImageError} onRefreshPost={this.onRefreshPost} />\r\n                : null}\r\n            <ChangeOrderModal openpinToTopModal={openpinToTopModal} closeModalPop={() => this.setState({ openpinToTopModal: false })} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isEditing: state.moderation?.isEditing,\r\n        ugcData: state.moderation?.ugcData,\r\n        ugcPopup: state.moderation?.ugcPopup,\r\n        ugcRequestData: state.moderation?.ugcRequestData,\r\n        moderation: state.moderation,\r\n        limits : state.limitExceed\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickToPostStatus: (index, ptPost, id, value) => dispatch(clickToPostStatus(index, ptPost, id, value)),\r\n        clickToPostPin: (index, postId, status) => dispatch(clickToPostPin(index, postId, status)),\r\n        clickToDeletePost: (item, index, navigate) => dispatch(clickToDeletePost(item, index, navigate)),\r\n        clickToBlockUser: (index, userName) => dispatch(clickToBlockUser(index, userName)),\r\n        getUgcDetails: (data) => dispatch(GET_UGC_POST_DETAIL(data)),\r\n        ugcModal: (state) => dispatch(ugcModal(state)),\r\n        UPDATE_INSTA_POST_ACTION: (obj) => dispatch(UPDATE_INSTA_POST_ACTION(obj)),\r\n        GET_UGC_REQUEST: (data) => dispatch(GET_UGC_REQUEST(data))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MasonryView);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header'\r\nimport { Container } from 'react-bootstrap';\r\nimport { getModeration, updateCheckAll, selectPostUpdate, activeTabActionFilter, dateRangeFilter, clickToPostStatusALL, clickToPostDeleteALL, searchTagsFilter, limitUpdate, onNextNavigateClick, onPrevNavigateClick, onUpdatePage, clickToRefresh, removeAllFilterBody, searchPostFilter, removeCheckAll, updateCheckStatusAll, CLEAR_UGC_REQUEST, CLEAR_UGC_DATA, ugcModal, postCarosal } from '../../../../actions/moderationActions'\r\nimport { IMG_LOAD_AFTER_COMPLETE_LAYOUT, fadeOutEffect } from '../../../../utils'\r\nimport { TOGGLE_ADD_GALLERY } from '../../../../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { getUserInfo_afterChanges } from '../../../../actions/loginActions';\r\nimport withRouter from '../../../routes/WithRouter';\r\nimport './moderation.scss';\r\nimport FilterBody from './Filters';\r\nimport FilterTab from './Filters/filterTab';\r\nimport AddUgcRights from './UgcRights';\r\nimport UgcStatus from './UgcRights/Status';\r\nimport Skeleton from './Elements/Skeleton'\r\nimport MasonryView from './MasonryView'\r\nimport EmptyWithIcon from '../CommonComponents/Empty/EmptyWithIcon';\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\nimport { GALLERY_WALL_UPDATE } from '../../../../actions/sceneActions';\r\n\r\nclass Moderation extends Component {\r\n  allImageQueue = [];\r\n  state = { total: 0, isCheckAll: false, isCheckedPostCount: 0, perPageCount: 10, activePage: 1, filters: [], allFirstImage: false, statusPopup: 0 }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.moderation.changeModeration_wall !== this.props.moderation.changeModeration_wall && this.props.moderation.changeModeration_wall) this.setState({ activeTab: this.props.moderation?.filter?.status }, this.clickToUncheckAll)\r\n    if (prevProps.wallsLoader !== this.props.wallsLoader) {\r\n      // if (!this.props.wallsLoader && !this.props.moderation?.listData?.length && this.props.moderation?.loding) this.props.getModeration();\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { params } = this.props;\r\n    const currentUrl = window.location.href;\r\n    const newUrl = currentUrl.replace(params?.id, localStorage.getItem('wallId'));\r\n    window.history.pushState(null, '', newUrl);\r\n    window.feedId = params.feedId;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.location.href.includes(\"ob_success\")) this.onBoardingSuccess()\r\n    document.cookie = \"callBackUrl=React\";\r\n    localStorage.removeItem('createFeedObj')\r\n    this.props.getModeration();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.allImageQueue = [];\r\n    this.props.removeAllFilterBody(true)\r\n  }\r\n\r\n  onBoardingSuccess = () => {\r\n    setTimeout(() => {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: `<strong>You are almost there!</strong>`,\r\n        html: `Tag products to curate a Shoppable Gallery & publish it on your pages.`,\r\n        showCloseButton: true,\r\n        showCancelButton: false,\r\n        focusConfirm: true,\r\n        confirmButtonText: `Got it!`,\r\n        confirmButtonAriaLabel: `Got it!`,\r\n        cancelButtonText: '<i class=\"fa fa-thumbs-down\"></i>',\r\n        cancelButtonAriaLabel: 'Thumbs down'\r\n      }).then(result => {\r\n        if (result.isConfirmed) { this.props.getUserInfo_afterChanges(); this.props.navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`) }\r\n      })\r\n    }, 1000);\r\n  }\r\n\r\n  clickToCheckAll = event => {\r\n    const { isCheckAll } = this.state;\r\n    this.setState({ isCheckAll: !isCheckAll }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.updateCheckAll(this.state.isCheckAll)\r\n    })\r\n  }\r\n\r\n  clickToCheckStatusAll = (status) => event => {\r\n    this.onActionUpdateOpcity()\r\n    this.props.updateCheckStatusAll(status)\r\n  }\r\n\r\n  clickToUncheckAll = event => {\r\n    this.setState({ isCheckAll: false }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.removeCheckAll(false)\r\n    })\r\n  }\r\n\r\n  clickPostChecked = (index) => event => this.props.selectPostUpdate(index, this.onActionUpdateOpcity())\r\n\r\n  onActionUpdateOpcity = () => {\r\n    const { isCheckAll, isCheckedPostCount } = this.state;\r\n    if (isCheckAll || (isCheckedPostCount > 0)) {\r\n      if (document.getElementsByClassName(\"modSelectNo\") && document.getElementsByClassName(\"modSelectNo\")[0])\r\n        fadeOutEffect(document.getElementsByClassName(\"modSelectNo\")[0])\r\n      if (document.getElementsByClassName(\"filter-bar\") && document.getElementsByClassName(\"filter-bar\")[0]) fadeOutEffect(document.getElementsByClassName(\"filter-bar\")[0])\r\n    }\r\n  }\r\n\r\n  clickToTab = (activeTab) => event => this.props.activeTabActionFilter(activeTab)\r\n\r\n  onDateRangeFilter = (startDate, endDate) => this.props.dateRangeFilter(startDate, endDate)\r\n\r\n  onClickToFilterUpdateStatus = (status) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatusALL(status)}\r\n  onClickToFilterDeleteAll = event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostDeleteALL(this.props.navigate)}\r\n  onClickNextPage = event => this.props.onNextNavigateClick()\r\n  onClickPrevPage = event => this.props.onPrevNavigateClick()\r\n  onChangePage = (page) => event => { this.props.onUpdatePage(page) }\r\n\r\n\r\n  onClickReset = (item) => {\r\n    let tempFilter = this.state.filters.filter(i => i.key === item.key)\r\n    tempFilter = tempFilter.filter((it) => {\r\n      if ([\"postType\", \"socialFeed\", \"other\"].includes(it.key))\r\n        return it.value.filter((j) => !item.value.includes(j));\r\n    });\r\n    this.setState({ filters: tempFilter }, () => this.props.clickToRefresh())\r\n  }\r\n\r\n  onClickAllReset = event => {\r\n    this.setState({ filters: [] }, () => this.props.getModeration())\r\n  }\r\n\r\n\r\n  handleAllImageError = (e) => {\r\n    try {\r\n      const src = e.target.getAttribute(\"data-id\");\r\n      if (!this.allImageQueue.some(item => item.src === src)) {\r\n        this.allImageQueue.push({ src, e });\r\n      }\r\n      if (!this.state.allFirstImage) {\r\n        this.processAllImageQueue();\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  processAllImageQueue = async () => {\r\n    const queue = this.allImageQueue;\r\n    if (queue.length && !this.state.allFirstImage) {\r\n      this.setState({ allFirstImage: true });\r\n      this.processNextImage();\r\n    }\r\n  };\r\n\r\n  processNextImage = () => {\r\n    try {\r\n      const { src, e } = this.allImageQueue[0];\r\n      if (src) {\r\n        IMG_LOAD_AFTER_COMPLETE_LAYOUT(e, this.nextProcessAllImageQueue);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  nextProcessAllImageQueue = () => {\r\n    try {\r\n      this.allImageQueue.shift();\r\n      if (this.allImageQueue.length) {\r\n        this.processNextImage();\r\n      } else {\r\n        this.setState({ allFirstImage: false });\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  updatepostCarosal=(status)=>{\r\n    const { allWalls, galleryUpdate, postCarosal } = this.props\r\n    postCarosal(status)\r\n\r\n    const getWallData = allWalls?.length && allWalls.find((e)=>e.id==localStorage.getItem('wallId'))\r\n    if(getWallData) galleryUpdate({ name: getWallData.name, status, carouselPost : status, autoUpdate: getWallData.autoUpdate || 0, deleted: 0, id: getWallData.id, action: 2 })\r\n  }\r\n\r\n  openugcModel = () => this.props.ugcModal(true)\r\n  onShow = (id) => this.setState({ statusPopup: id })\r\n\r\n  render() {\r\n    const { isCheckAll, perPageCount, activePage, filters } = this.state;\r\n    const { moderation, searchTagsFilter, limitUpdate, loader, postCarosal, clickToRefresh, ugcModal, clearUgcData, removeAllFilterBody, searchPostFilter, allWalls, wallsLoader, feeds, ugcData, ugcPopup, CLEAR_UGC_REQUEST_DATA, navigate } = this.props;\r\n    return (\r\n      !wallsLoader && !(allWalls && allWalls.length > 0) ?\r\n        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n          <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Create a Gallery, to add feed! ⌛'} desc={'Oops! Looks like you have deleted your gallery, create one by simply clicking on the button below.'} icon={'media'} button={{ action: () => checkPermission('contentGallery', 'createGallery', true) ? this.props.TOGGLE_ADD_GALLERY(true) : {}, text: 'Create Gallery' }} isFullScreen={false} />\r\n        </div>\r\n        :\r\n        <div className=\"d-flex flex-column flex-column-fluid full-content moderation__\">\r\n          <Header postCarosal={this.updatepostCarosal} clickToRefresh={clickToRefresh} allWalls={allWalls} clickToCheckAll={this.clickToCheckStatusAll} clickToUncheckAll={this.clickToUncheckAll} isCheckAll={isCheckAll} isCheckedPostCount={moderation?.isCheckedPostCount} searchPostFilter={searchPostFilter} onClickToViewFilter={this.onClickToViewFilter} total={moderation?.total} perPageCount={perPageCount} activePage={activePage} moderation={moderation} clickToTab={this.clickToTab} onDateRangeFilter={this.onDateRangeFilter} onClickToFilterUpdateStatus={this.onClickToFilterUpdateStatus} onClickToFilterDeleteAll={this.onClickToFilterDeleteAll} searchTagsFilter={searchTagsFilter} limitUpdate={limitUpdate} onNextNavigateClick={this.onClickNextPage} onPrevNavigateClick={this.onClickPrevPage} onChangePage={this.onChangePage} onAppliedFilter={this.onAppliedFilter} activeTab={moderation?.filter?.status} key={moderation?.filter?.status} />\r\n          <Container fluid className='position-relative pt-10'>\r\n            <FilterBody {...this.props} filterBody={moderation.filterBody} />\r\n            <FilterTab  {...this.props} filterBody={moderation.filterBody} />\r\n            <UgcStatus {...this.props} statusPopup={this.state.statusPopup} onHide={() => { this.setState({ statusPopup: 0 }); CLEAR_UGC_REQUEST_DATA() }} openugcModel={this.openugcModel} />\r\n\r\n            {moderation?.total == 0 && !moderation?.loding ?\r\n              <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n                <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Whoops! You have not created a feed! ⌛'} desc={''} icon={'media'} button={{ action: () => checkPermission('networkManager', 'manageFeed', true) ? navigate(`/content/addfeed/${localStorage.getItem('wallId')}`) : {}, text: 'Create feed' }} isFullScreen={false} />\r\n              </div>\r\n              :\r\n              <div className=\"moderation_card tab-content pb-10 pb-lg-0 h-100\">\r\n                {loader.filterLoader ? <Skeleton {...this.props} /> : <ErrorFound><MasonryView clickPostChecked={this.clickPostChecked}  {...moderation} removeAllFilterBody={removeAllFilterBody} activeTab={moderation?.filter?.status} searchTagsFilter={searchTagsFilter} onAppliedFilter={this.onAppliedFilter} handleAllImageError={this.handleAllImageError} filters={filters} onClickAllReset={this.onClickAllReset} onClickReset={this.onClickReset} onShow={this.onShow} navigate={navigate}/></ErrorFound>}\r\n              </div>}\r\n\r\n            {ugcPopup && ugcData && ugcData.template && ugcData.template.length ? <ErrorFound><AddUgcRights ugcData={ugcData} hideUgc={() => { ugcModal(false); clearUgcData() }} /></ErrorFound> : ''}\r\n          </Container>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => { \r\n  return {\r\n    moderation: state.moderation,\r\n    loader: state.loader,\r\n    ctaData: state.ctaData?.data,\r\n    allFont: state.allFont,\r\n    showAddFeed: state.modalReducer?.showAddFeed,\r\n    showManageFeed: state.modalReducer?.showManageFeed,\r\n    showCta: state.modalReducer?.showCta,\r\n    wallsLoader: state.dashboardData?.wallsLoader,\r\n    addGalleryNow: state.dashboardData?.addGalleryNow,\r\n    ctaData: state.ctaData?.data,\r\n    ugcData: state.moderation?.ugcData,\r\n    ugcPopup: state.moderation?.ugcPopup,\r\n    ugcRequestData: state.moderation?.ugcRequestData,\r\n    feeds: state.manageFeeds?.feeds,\r\n    allWalls: state.dashboardData?.dashboarddata?.allWalls,\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getModeration: (callback) => dispatch(getModeration(callback)),\r\n    activeTabActionFilter: (status) => dispatch(activeTabActionFilter(status)),\r\n    updateCheckAll: (status) => dispatch(updateCheckAll(status)),\r\n    selectPostUpdate: (index, callBack) => dispatch(selectPostUpdate(index, callBack)),\r\n    dateRangeFilter: (startDate, endDate) => dispatch(dateRangeFilter(startDate, endDate)),\r\n    clickToPostStatusALL: (status) => dispatch(clickToPostStatusALL(status)),\r\n    clickToPostDeleteALL: (navigate) => dispatch(clickToPostDeleteALL(navigate)),\r\n    searchTagsFilter: (searchTags) => dispatch(searchTagsFilter(searchTags)),\r\n    searchPostFilter: (searchPost) => dispatch(searchPostFilter(searchPost)),\r\n    limitUpdate: (limit) => dispatch(limitUpdate(limit)),\r\n    onNextNavigateClick: () => dispatch(onNextNavigateClick()),\r\n    onPrevNavigateClick: () => dispatch(onPrevNavigateClick()),\r\n    onUpdatePage: (page) => dispatch(onUpdatePage(page)),\r\n    clickToRefresh: () => dispatch(clickToRefresh()),\r\n    postCarosal: (status) => dispatch(postCarosal(status)),\r\n    removeAllFilterBody: (status) => dispatch(removeAllFilterBody(status)),\r\n    removeCheckAll: (data) => dispatch(removeCheckAll(data)),\r\n    updateCheckStatusAll: (data) => dispatch(updateCheckStatusAll(data)),\r\n    TOGGLE_ADD_GALLERY: (status) => dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }),\r\n    getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    ugcModal: (state) => dispatch(ugcModal(state)),\r\n    clearUgcData: () => dispatch(CLEAR_UGC_DATA()),\r\n    galleryUpdate: (action) => dispatch(GALLERY_WALL_UPDATE(action)),\r\n    CLEAR_UGC_REQUEST_DATA: () => dispatch(CLEAR_UGC_REQUEST()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(withRouter(Moderation)));\r\n"],"names":["_ref","rating","className","iconClass","_jsx","children","generateRandomArray","map","rate","index","FontAwesomeIcon","type","icon","QuickSearch","Component","constructor","arguments","state","tagSearchList","searchPost","selected","openSearch","onLoad","this","length","autoCompleteSearch","then","response","responseData","totalTag","responseCode","data","setState","onSearchText","text","onClickToSearchTags","selectSearch","event","props","searchTagsFilter","onClickToSearchPost","String","searchPostFilter","render","_jsxs","_Fragment","Button","variant","size","onClick","Dropdown","show","style","display","InputGroup","id","Form","Control","minHeight","placeholder","value","onChange","e","target","autoComplete","Menu","overflowY","item","Item","maxDate","handleOnApply","startDate","endDate","DateRangePicker","onApply","initialSettings","locale","format","separator","showDropdowns","ranges","Today","moment","Yesterday","subtract","startOf","endOf","DateRange","picker","onDateRangeFilter","componentWillReceiveProps","nextProps","moderation","Object","keys","filter","filterBody","dateRanges","DateRanges","uuidv4","withRouter","isCarosal","setisCarosal","useState","useEffect","_props$allWalls","foundItem","allWalls","find","params","carouselPost","marginRight","marginTop","padding","Check","checked","postCarosal","Number","checkPermission","navigate","localStorage","getItem","onNextNavigateClick","onPrevNavigateClick","onChangePage","paginateData","currentPage","pages","pagesIndex","parseInt","totalPages","onHide","Modal","centered","Body","Image","src","baseUrl","height","width","fluid","maxWidth","Link","to","addStatus","setAddTag","selectedEntry","selectedEntryFun","label","permissionError","setPermissionError","ugcError","setUgcError","showGetRight","setShowGetRight","fromSnapup","setFromSnapup","activeTab","dispatch","useDispatch","checkGetRight","check_uncheck_all","flag","post","ugcstatus","networkId","feedFilter","Container","clickToCheckAll","status","OverlayTrigger","placement","overlay","Tooltip","clickToRefresh","onClickToFilterUpdateStatus","onClickToFilterDeleteAll","getRights","userId","username","GET_UGC_POST_DETAIL","is_carausel","postId","ugcModal","Select","classNamePrefix","isSearchable","options","updateLimit","limitUpdate","ModerationPagination","PermissionError","ErrorModal","isLoaded","details","totalpost","publicpost","privatepost","tabName","TabTotal","upcomingpost","Nav","eventKey","clickToTab","disabled","Badge","bg","Toggle","NavDropdown","Filters","ModSubHeader","PostTagSearch","searchData","loading","textSearch","textInput","onClickToSearch","removeFilterPostTags","push","updateFilterPostTags","postTags","autocomplete","Text","sItem","isChecked","includes","PostTypeCheck","onClickPostType","selecteds","postType","fin","OtherInput","_ref2","onClickOther","other","key","FilterBody","super","toogleFilter","isActiveAside","setTimeout","offcanvas","document","querySelector","classList","add","onSelectFeeds","removeFilterSocialFeeds","updateFilterSocialFeeds","removeFilterPostType","updateFilterPostType","removeFilterOthers","updateFilterOthers","socialFeeds","feeds","bind","componentDidMount","addEventListeners","window","feedId","name","componentDidUpdate","filterAside","getElementById","addEventListener","_moderation$filterBod","UserRuleEnableAI","Offcanvas","Accordion","flush","defaultactivekey","Header","socialFeed","Label","htmlFor","filterId","GET_NETWORK_ICON","parse","removeAllFilterBody","connect","_state$manageFeeds","manageFeeds","FilterTab","onClickRemovePostTags","onClickToDateRangeRemove","removeDateRanges","filters","onClickReset","HtmlParser","CardPreview","handleThumbs","mainRef","current","go","React","ugcData","Splide","hasTrack","arrows","SplideTrack","SplideSlide","ImageType","mediaClass","url","postFile","alt","isCover","Author","imageSize","symbolClass","profileUrl","picture","GET_NETWORK_NAME","ShowMoreContent","classes","content","idIndex","line","copyUrl","openSteps","copied","hash","accountDetails","postUrl","sendRequest","onRaiseRequest","setUserName","copyText","custom_msg","requestMode","postLink","link","JSON","stringify","config","method","TINY_URL","headers","axios","tinyRequest","tiny_url","catch","ex","navigator","clipboard","writeText","bitlyurl","raiseReq","open","location","replace","HOST_URL","TOAST_ERROR","setStep","isRequesting","Group","as","maxLength","cols","rows","CreateTemplate","uppyUploader","UppyUpload","uppyUploaderPdf","postauthor","posthandle","authorpicture","postcarousel","modalOpen","createTemplate","brandFilename","editData","client_logo","selectedBrand","client_logo_name","selectedBrandFile","tncFilename","custom_terms","selectedtnc","custom_terms_name","selectedtncFile","selectedTemplate","acceptTnc","logoError","tncError","templateName","custom_message","tncerrorMsg","nameerrorMsg","msgerrorMsg","onClickToOpenBrand","brandModalOpen","$","click","uppy","cancelAll","onClickToCloseBrand","onClickToOpenTnc","tncModalOpen","onClickToCloseTnc","removeBrandLogo","removeTnc","onSaveTemplate","obj","owner","edit","ADD_UGC_TEMPLATE","onAddNewTemplate","on","stepName","result","TEMP_URL","ext","saveTemplate","closeButton","Title","WASABI_PATH","UGC_UPLOAD_URL","load","Footer","DashboardModal","animateOpenClose","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestCloseModal","closeAfterFinish","doneButtonHandler","plugins","callback","GeneralRequest","isEdit","onCreateTemplate","getSelectedTemplate","onTemplateChange","onHideTemplate","setItem","template","t","onNextStep","onUpdateTemplate","setTncError","tmp","setCustom_msg","setSelectedTemplate","onTemplateRemove","deleteTemplate","onTemplateEdit","setBrand_link","setTermslink","setTermstype","brand_link","console","log","_this$getSelectedTemp","_this$getSelectedTemp2","_this$getSelectedTemp3","_this$getSelectedTemp4","_this$getSelectedTemp5","_this$getSelectedTemp6","_this$getSelectedTemp7","_this$getSelectedTemp8","_this$getSelectedTemp9","_this$getSelectedTemp10","setAcceptTnc","hideUgc","onSelect","download","href","rel","DELETE_UGC_TEMPLATE","channel","BroadcastChannel","SAccounts","socialAccount","authorName","authorAvatar","errorMsg","otherAc","accountList","selectedPersonalAccount","handleMessage","async","code","origin","getTwitterAuth","filterAccountData","addAccountFromId","TAGGSHOP_SOCIAL_ACCOUNT_DATA","error","_socialAccountsData$a","socialAccountsData","allAcc","accountInformations","forEach","acc","Network","ConnectedAccounts","value2","accountName","unshift","id_str","profilePicture","color","description","_allAcc$","nextStep","_JSON$parse","cookie","Application","reInit","componentWillUnmount","removeItem","removeEventListener","_selectedPersonalAcco","_selectedPersonalAcco2","_selectedPersonalAcco3","_selectedPersonalAcco4","minWidth","_acc$ConnectedAccount","_acc$ConnectedAccount2","showAddAccounntAlert","getCookieData","withCookies","cookies","setCookie","useCookies","navigation","useNavigate","useSelector","userAccountData","socialAccounts","ChooseMethod","setRequestMode","Input","ugcTabKey","setUgcTabKey","step","isAccount","setIsAccount","userName","termslink","termstype","setIsRequesting","getPostIds","unique_code","postIds","referenceId","join","_tempSelected","_tempSelected2","_tempSelected3","findIndex","tempSelected","selectedImage","selectedVideo","selectedUsername","handle","bitlylink","rightsVia","hashtag","networkPostId","wallId","client","SEND_UGC","backdrop","ErrorFound","_tempSelected4","_tempSelected5","_tempSelected6","_tempSelected7","_tempSelected8","_tempSelected9","SocialAccounts","CopyUrl","UgcModalApproved","onDownloadMedia","saveAs","mediaUrl","ugcRequestData","userAgent","HTMLReactParser","userIP","userLocation","actionTime","utcOffset","timezone","custom_term_type","DOWNLOAD_CERTIFICATE","ugcid","comment","RadialChart","days","ago","series","chart","plotOptions","radialBar","hollow","margin","dataLabels","showOn","fontWeight","fontSize","offsetY","track","background","strokeWidth","fontFamily","total","colors","stroke","lineCap","prevProps","ReactApexChart","Pending","getNewdata","diff","ugccreated","COPY_TO_CLIPBOARD","RejectModal","openugcModel","statusPopup","Pendingng","ApprovedModal","ModerationSkeleton","_","Card","paddingBottom","ProductTags","removeTaggProduct","product_sku","productId","REMOVE_TAGGED_PRODUCT_ACTION","listView","openContent","postproduct","Row","_item$product","Col","xs","product","product_image","top","right","post_id","Tags","handleShowMore","prevState","visibleCount","items","handleShowLess","tags","split","visibleItems","slice","onClickToPostTags","ChangeOrderModal","reArrangePosts","newArray","updateOrder","indexing","spinner","GET_REORDER_PIN_TO_TOP","onLoadData","pinToTop","onDragEnd","openpinToTopModal","GET_PIN_TO_TOP_LIST","destination","reorder","list","startIndex","endIndex","Array","from","removed","splice","source","_this$state$items","closeModalPop","DragDropContext","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","Draggable","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","zIndex","newMedia","postname","postcontent","getItemStyle","Loader","_state$moderation","GET_LIST_ALL_PIN_TO_TOP_POST","calback","EditAside","getTagsArray","_this$props","submitTags","tag","trim","tagString","isLoading","formattedTags","charAt","toUpperCase","selectedOption","handleSelectChange","_e$value","onChangeTag","onClickToRemoveTag","handleOpen","uppyProfileOpen","handleSave","author","onSavePost","isValidNewOption","inputValue","profile","onChangeAuthorImg","onChangeAuthor","onChangeHandle","onChangeContent","onClickRemoveAuthorImg","authorImage","onSaveTag","handleClose","isTaggModal","GET_FIRST_LETTER","CreatableSelect","isClearable","onInputChange","tagsArrayFun","removeIndex","toString","closeModalOnClickOutside","onRequestClose","hideUploadButton","autoOpenFileEditor","lineCount","Rating","ReactHtmlParser","ModalMedia","handleResize","modalData","winWidth","innerWidth","winHeight","innerHeight","onMediaLoad","mediaHeight","mediaWidth","mediaSize","getImageWidthHeight","count","hotspotRef","hotspotSection","spotWidth","clientWidth","spotHeight","clientHeight","_this$props$modalData","enableHotspot","hotspot","handleAllImageError","autoPlay","movePost","scale","Math","min","TextType","socialNetworkId","VideoType","mediaFile","mediaClip","poster","muted","controls","loop","isupdate","ContentModal","onChangePostImg","postImage","onChangePostType","onClickTouploadImage","callBack","_modalData$imageList","postpayload","imageList","ptPost","editpost","_modalData$imageList2","tagPayload","onUpdateTags","_state$ctaData","ctaData","authorized","payload","_item$imageList","_item$postproduct","ImageClass","activeCarousalPostsList","activeCarousalPost","onControlledDrag","changePrdId","getCarousal","renderHotspots","hotspotList","_Item$product","_Item$product2","_Item$product3","_Item$product4","_Item$product5","_Item$product6","left","bounds","onStop","onStart","ugc_product","defaultPosition","x","y","product_title","product_discount","product_price","price_currency_symbol","hotspot_type","backgroundColor","hotspot_color","hotspot_type_color","lineHeight","updateCarousalPost","arrowShow","splideRef","useRef","setmediaSize","setmovePost","settings","perPage","pagination","start","ids","CAROUSAL_POST_PRODUCTS","getImageSize","_splideRef$current","splideInstance","splide","destroy","assetItem","assetKey","ContentModalAside","_this","_this$props$modalData2","handleResizeg","refId","undefined","getFilteredData","carousalPostsList","getPostData","filteredData","updateCarousalPostList","hotspotValue","updateHotspot","location_hotspot","updatedData","position","l","hostpot","UPDATE_HOTSPOT_ACTION","changeHotspotStatus","hotspotEnable","isHotspotEnable","ENABLE_HOTSPOT_ACTION","onSaveCallBack","responceApi","modalCallback","editPostFun","editPost","searchTag","selectedTag","_this$props$modalData3","modalToggle","onRefreshPost","postPostUpdate","currentIndex","clickToPin","clickToGetUgc","clickToDeletePost","clickToBlockUser","align","newlink","slideAssets","CarousalPost","Suspense","fallback","Hotspot","ImageUrl","imgHeight","imgWidth","EditPost","isCarousal","getUserInfo_afterChanges","RefreshPostData","isRequest","isRefresh","ExpiredPostInstaQueue","refreshPostLoading","MasonryView","imageQueue","postID","itemIndex","firstRequest","showModal","clickToPostPin","getUgcDetails","openUgcModal","clickToPostStatus","clickToGetLink","GET_UGC_REQUEST","onShow","ugcmodified","handleImageError","getAttribute","processImageQueue","imgTarget","TIKTOK_UPDATE_STATUS","shift","media","ImagePlaceholder","UPDATE_INSTA_POST_ACTION","handleModalShow","handleCallback","dataEvent","listData","ugcPopup","selection","Masonry","elementType","disableImagesLoaded","updateOnEachImageLoad","enableResizableChildren","_item$imageList2","_item$imageList3","highlight","pin","createdAt","boxShadow","clickPostChecked","ugcRights","overflowX","fromNow","ctastatus","buttonText","title","buttonUrl","ctaButtonColor","ctaTextColor","Date","exportDonwloadMedia","_state$moderation2","_state$moderation3","_state$moderation4","isEditing","limits","limitExceed","Moderation","allImageQueue","isCheckAll","isCheckedPostCount","perPageCount","activePage","allFirstImage","onBoardingSuccess","Swal","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","isConfirmed","onActionUpdateOpcity","updateCheckAll","clickToCheckStatusAll","updateCheckStatusAll","clickToUncheckAll","removeCheckAll","selectPostUpdate","getElementsByClassName","fadeOutEffect","activeTabActionFilter","dateRangeFilter","clickToPostStatusALL","clickToPostDeleteALL","onClickNextPage","onClickPrevPage","page","onUpdatePage","tempFilter","i","it","j","onClickAllReset","getModeration","some","processAllImageQueue","processNextImage","IMG_LOAD_AFTER_COMPLETE_LAYOUT","nextProcessAllImageQueue","updatepostCarosal","galleryUpdate","getWallData","autoUpdate","deleted","action","_this$props$moderatio","_this$props$moderatio2","changeModeration_wall","wallsLoader","componentWillMount","newUrl","history","pushState","_moderation$filter","_moderation$filter2","_moderation$filter3","loader","clearUgcData","CLEAR_UGC_REQUEST_DATA","onClickToViewFilter","onAppliedFilter","UgcStatus","loding","filterLoader","Skeleton","EmptyWithIcon","desc","button","isFullScreen","AddUgcRights","TOGGLE_ADD_GALLERY","_state$modalReducer","_state$modalReducer2","_state$modalReducer3","_state$dashboardData","_state$dashboardData2","_state$ctaData2","_state$dashboardData3","_state$dashboardData4","allFont","showAddFeed","modalReducer","showManageFeed","showCta","dashboardData","addGalleryNow","dashboarddata","searchTags","limit","CLEAR_UGC_DATA","GALLERY_WALL_UPDATE","CLEAR_UGC_REQUEST"],"sourceRoot":""}