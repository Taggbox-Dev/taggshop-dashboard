{"version":3,"file":"static/js/5754.0e80b312.chunk.js","mappings":"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","sources":["app/Layout/Main/LimitExceed/Components/utils.js","app/Layout/Main/LimitExceed/Components/RevokeList.js","app/Layout/Main/LimitExceed/Components/RevokeModal.js","app/Layout/Main/LimitExceed/Components/RevokeFeeds.js","app/Layout/Main/LimitExceed/index.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { TOAST_SUCCESS } from \"../../../../../utils/index\";\r\n\r\n\r\nexport const onDeleteWall = (callback) => {\r\n    Swal.fire({\r\n        title: \"Are you sure?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n    }).then((result) => {\r\n        if (result.value) {\r\n            callback();\r\n        }\r\n        else if (result.dismiss === \"cancel\") { }\r\n    });\r\n}","import { onDeleteWall } from \"./utils\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Container, Card, Table, Tooltip, OverlayTrigger, Button, Form } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\n\r\nexport default function RevokeList({ feeds, wallId, deleteExtraFeed, navigate}) {\r\n\r\n  const getAddFeedsId = (feedsList) => {\r\n    if (feedsList?.length > 0) return feedsList.map((feed) => `${feed.id}`)\r\n  }\r\n  const getNetworkId = (feedsList) => {\r\n    if (feedsList?.length > 0) return feedsList.map((feed) => `${feed.Network.Networkid}`)\r\n  }\r\n\r\n\r\n  const getfeedTag = (tag) => {\r\n    if (tag) {\r\n      if (tag.includes('<i class')) {\r\n        return <>{ReactHtmlParser(tag)}{\" \"}</>\r\n      }\r\n      return tag;\r\n    } else return '';\r\n  }\r\n  return (<Table className='mb-0 pb-3' size='lg' responsive>\r\n    <thead className=\"thead-light\">\r\n      <tr>\r\n        <th className=\"fw-bold\">\r\n          Feeds\r\n        </th>\r\n        <th className=\"fw-bold text-nowrap\" style={{ minWidth: 50 }}>Total Posts</th>\r\n        <th className=\"fw-bold text-nowrap pe-6 text-end\" style={{ minWidth: 100 }}>\r\n          <Button variant=\"danger\" size='sm' onClick={() => onDeleteWall(() => deleteExtraFeed(wallId, getAddFeedsId(feeds), getNetworkId(feeds)))} wallid={wallId}>\r\n            <FontAwesomeIcon type=\"solid\" icon={'trash-can'} iconClass=\"me-1\" />\r\n            Delete All\r\n          </Button>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {feeds.length > 0 ? feeds.map((feed, index) => (<tr key={index}>\r\n        <th className=\"fw-bold text-nowrap\" style={{ minWidth: 50 }}>\r\n          <p className=\"mb-0 line-clamp-2 line-clamp\" style={{ maxWidth: 300 }}>{getfeedTag(feed.feedsFilterprefix)}\r\n            {feed.name} - {feed.feedsFiltername}</p>\r\n        </th>\r\n        <th className=\"fw-bold text-nowrap\" style={{ minWidth: 100 }}>\r\n          {`${feed.totalrecords > 1 ? 'Posts' : 'Post'}: ${feed.totalrecords}`}\r\n        </th>\r\n        <td className=\"text-end pe-6\">\r\n          <div className=\"d-flex align-items-center justify-content-end\">\r\n              <Button variant='dark' size=\"sm\" className=\"me-2\" onClick={() => { navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') :''}`) }}>\r\n                Moderate\r\n              </Button>\r\n            <OverlayTrigger placement='top' overlay={<Tooltip>Delete</Tooltip>} >\r\n              <Button variant='icon' className=\"btn-active-primary border-0\" onClick={() => onDeleteWall(() => deleteExtraFeed(wallId, [`${feed.id}`], [`${feed?.Network?.Networkid}`]))}>\r\n                <FontAwesomeIcon type=\"solid\" icon={'trash-can'} />\r\n              </Button>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      ))\r\n        : null}\r\n    </tbody>\r\n  </Table>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, Image } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { Loader } from '../../CommonComponents/Loader';\r\n\r\n\r\nfunction RevokeModal(props) {\r\n    const [show, setShow] = useState(true);\r\n    const navigation = useNavigate()\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} backdrop=\"static\" size='lg' aria-labelledby=\"revoke\" keyboard={false} centered>\r\n            <Modal.Body style={{minHeight:347}}>\r\n                {props.isLoading ? <Loader/> : \r\n                <>\r\n                    <Button variant='close' className=\"position-absolute end-0 top-0 m-5\" onClick={handleClose}></Button>\r\n                    <div className=\"py-lg-8 py-5 text-center\">\r\n                        <Image className='mb-6' src={baseUrl('media/images/error/warning.svg')} width=\"65\" height=\"65\" fluid/>\r\n                        <h2 className='h3'>Limit Exceeded: {props.isExtra ? \"You Have Extra Posts or Products Tagged!\" :  \"You're Running Extra Gallery/Feeds!\"}</h2>\r\n                        \r\n                        <p className=\"mb-6 fs-8 text-muted fw-medium\">{`Your account has been paused! ${props.isExtra ? \"Your feed has reached the maximum limit of posts fetched and products that can be tagged in your current plan. To continue, take action.\" : \"To enjoy uninterrupted services,kindly revoke the additional  gallery/feed or upgrade your plan.\"} `}</p>\r\n                        <div className=\"text-center mb-4\">\r\n                            <Button variant='primary' className='m-2 btn-min-w' onClick={() => { navigation(`/price`); handleClose() }}>Upgrade Now</Button>\r\n                            <Button variant='outline-primary' className='m-2 btn-min-w' onClick={handleClose}>Revoke</Button>\r\n                        </div>\r\n                        <div className='f-center'>\r\n                            <Button variant='link' onClick={() => { navigation(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') :''}`); handleClose() }}>Skip</Button>\r\n                        </div>\r\n                    </div>\r\n                </> }\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\nexport default RevokeModal;","import React, { useEffect, useState } from \"react\";\r\nimport { onDeleteWall } from \"./utils\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Accordion, OverlayTrigger, Tooltip, Button, Card, Row, Col, Image, Popover } from \"react-bootstrap\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../../utils\";\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport RevokeList from \"./RevokeList\";\r\nimport RevokeModal from \"./RevokeModal\";\r\nimport { TOAST_SUCCESS } from \"../../../../../utils\";\r\nimport HttpClient from \"../../../../../actions/http-client\";\r\nimport { DELETE_EXTRA_FEED, DELETE_EXTRA_FEED_WALL } from \"../../../../../actions/api\";\r\nimport { GALLERY_WALL_UPDATE } from '../../../../../actions/sceneActions';\r\n\r\n\r\n\r\nconst RevokeFeeds = ({ feedsList, deleteWall, deleteFeedFromWall, extraGallery, extraFeeds, extraProducts, extraPosts, isLoading }) => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const [accKey, setAccKey] = useState('')\r\n  const deleteExtraFeed = (wallId, feedsList, networkId) => {\r\n    new HttpClient().delete(DELETE_EXTRA_FEED, { data: { wallId: wallId, feedId: feedsList, networkId } }).then((response) => {\r\n      if (response.data && Object.keys(response.data).length > 0) {\r\n        const { message } = response.data;\r\n        TOAST_SUCCESS(message);\r\n        deleteFeedFromWall(wallId, feedsList);\r\n      }\r\n    }).catch((ex) => {\r\n\r\n    });\r\n  }\r\n\r\n  const deleteExtraFeedWall = (wallData) => dispatch(GALLERY_WALL_UPDATE({ action: 3, name: wallData.wallname, status: 0, autoUpdate: 0, id: wallData.wallId, deleted: 1 }, navigate, ()=>deleteWall(wallData.wallId)))\r\n\r\n\r\n  useEffect(()=>{\r\n    if((extraPosts || extraProducts) && feedsList.length >0) setAccKey(feedsList[0]?.wallId)\r\n  },[extraProducts, extraPosts])\r\n\r\n  return (\r\n    <Card className=\"limit_excced_ py-4\">\r\n      <Card.Body>\r\n        <Row className=\"me-6 gx-0 px-3\">\r\n          {['Gallery', 'Feeds', 'Network', 'Action'].map((text, index) => (\r\n            <Col key={index}>\r\n              <p className={`fw-bold text-nowrap p-2 mb-0 ${text === 'Action' ? 'text-end' : ''}`}>\r\n                {text}\r\n              </p>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Accordion onSelect={(key) => setAccKey(key)} flush activeKey={accKey}>\r\n          {feedsList.map((feed, i) => {\r\n            const networkIconList = feed?.feed?.length > 0 ? feed.feed.map((network) => network?.Network?.Networkid) : [];\r\n            const feedLength = feed?.feed?.length > 0 || false\r\n            return <Accordion.Item eventKey={feed.wallId} key={feed.wallId} className=\"mb-4\">\r\n              <Accordion.Header className={!feedLength ? 'arrow_disabled' : ''}>\r\n                <Row className=\"w-100\">\r\n                  <Col>\r\n                    <div className=\"overflow-hidden p-2\" style={{ maxWidth: 200 }}>\r\n                      <p className=\"fw-bold mb-0 line-clamp-2 line-clamp\">{feed.wallname}</p>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <p className=\"fw-bold text-nowrap p-2 mb-0\">{feed.feed.length}</p>\r\n                  </Col>\r\n                  <Col>\r\n                    <p className=\"fw-bold text-nowrap px-2 mb-0\">{networkIconList && networkIconList.length > 0 ?\r\n                      <div className=\"symbol-group symbol-hover flex-nowrap\">\r\n                        {networkIconList.slice(0, 3).map((Item, Index) => {\r\n                          return <OverlayTrigger key={Index} placement='top' overlay={<Tooltip>{GET_NETWORK_NAME(Item)}</Tooltip>}><div className=\"symbol symbol-34 symbol-circle border\">\r\n                            <span className=\"symbol-label bg-gray-200 fw-bold text-uppercase fs-8\">\r\n                              <Image src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(Item)}.svg`)} height={16} width={16} alt={GET_NETWORK_NAME(Item)} fluid />\r\n                            </span>\r\n                          </div></OverlayTrigger>\r\n                        })}\r\n                        {networkIconList.length > 3 ?\r\n                          <OverlayTrigger placement='top' overlay={\r\n                            <Popover>\r\n                              <div className=\"tooltip_symbol d-flex flex-wrap p-3\">\r\n                                {\r\n                                  networkIconList.slice(3, networkIconList.length).map((Item, Index) => (<div key={Index} className=\"symbol symbol-34 symbol-circle border m-1\">\r\n                                    <span className=\"symbol-label bg-gray-200 fw-bold text-uppercase fs-8\">\r\n                                      <Image src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(Item)}.svg`)} height={16} width={16} alt={GET_NETWORK_NAME(Item)} fluid />\r\n                                    </span>\r\n                                  </div>\r\n                                  ))\r\n                                }\r\n                              </div>\r\n                            </Popover>\r\n                          }>\r\n                            <div className=\"symbol symbol-34 symbol-circle cursor-pointer\">\r\n                              <span className=\"symbol-label bg-primary fs-9 fw-medium\">+{networkIconList.length - 3}</span>\r\n                            </div>\r\n                          </OverlayTrigger>\r\n                          : null}\r\n                      </div>\r\n                      : ' -- '}</p>\r\n                  </Col>\r\n                  <Col className=\"text-end\">\r\n                    <OverlayTrigger placement='top' overlay={<Tooltip>Delete</Tooltip>} >\r\n                      <Button variant='icon' size=\"sm\" className=\"btn-active-primary\" onClick={() => onDeleteWall(() => deleteExtraFeedWall(feed))}>\r\n                        <FontAwesomeIcon type=\"solid\" icon={'trash-can'} />\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </Col>\r\n                </Row>\r\n              </Accordion.Header>\r\n              {feedLength ? <Accordion.Body className=\"px-0\">\r\n                <div className=\"border rounded-1 p-3 overflow-hidden\">\r\n                  <RevokeList feeds={feed.feed} wallId={feed.wallId} deleteExtraFeed={deleteExtraFeed} navigate={navigate}/>\r\n                </div>\r\n              </Accordion.Body> : null}\r\n            </Accordion.Item>\r\n          })}\r\n        </Accordion>\r\n        <RevokeModal isExtra={extraPosts > 0  || extraProducts > 0 ? true : false} isLoading={isLoading}/>\r\n        <div className=\"mt-5\">\r\n          <p className=\"fs-8 text-muted text-center mb-0\">\r\n            You have exceeded your plan's limit. Delete extra <strong>\r\n              {extraGallery > 0 && `Gallery (${extraGallery})`} {extraFeeds > 0 && `Feeds (${extraFeeds})`}\r\n            </strong> for a seamless experience.\r\n          </p>\r\n        </div>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RevokeFeeds;","import React, { useEffect, useState } from 'react'\r\nimport RevokeFeeds from './Components/RevokeFeeds'\r\nimport { Container, Image } from 'react-bootstrap';\r\nimport HttpClient from '../../../../actions/http-client';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { GET_EXTRA_FEEDS_API } from '../../../../actions/api';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { getUserInfo } from '../../../../actions/loginActions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./limit_excced.scss\"\r\nimport { SET_EXTRA_LIMITS } from '../../../../reducer/keys';\r\n\r\nfunction LimitExceed() {\r\n    const [feeds, setFeeds] = useState([]);\r\n    const [extraGallery, setExtraGallery] = useState(0)\r\n    const [extraFeeds, setExtraFeeds] = useState(0)\r\n    const [extraPosts, setExtraPosts] = useState(0)\r\n    const [extraProducts, setExtraProducts] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const UserRule = useSelector(state => state.authorized?.userData?.user_data, shallowEqual);\r\n    const dispatch = useDispatch()\r\n    const navigation = useNavigate()\r\n    useEffect(() => {\r\n        getFeeds();\r\n    }, [])\r\n\r\n\r\n    const getFeeds = () => {\r\n        new HttpClient().get(GET_EXTRA_FEEDS_API).then((response) => {\r\n            if (response.data && Object.keys(response.data).length > 0) {\r\n                const { responseData } = response.data;\r\n                if (responseData && Object.keys(responseData).length > 0) {\r\n                    const { wallList, delete_extra_feed, delete_extra_gallery, delete_posts, delete_tagged_products } = responseData;\r\n                    if (delete_extra_gallery > 0) setExtraGallery(delete_extra_gallery)\r\n                    if (delete_extra_feed > 0) setExtraFeeds(delete_extra_feed)\r\n                    if (wallList.length > 0) setFeeds(wallList);\r\n                    if (delete_tagged_products > 0) setExtraProducts(delete_tagged_products)\r\n                    if (delete_posts > 0) setExtraPosts(delete_posts)\r\n                    setIsLoading(false)\r\n                    dispatch({type:SET_EXTRA_LIMITS, payload:responseData})\r\n\r\n                }\r\n            }\r\n        }).catch((ex) => {\r\n            setIsLoading(false)\r\n        });\r\n    }\r\n\r\n    const deleteWall = (wallId) => {\r\n        const updateFeeds = feeds.filter(feed => feed.wallId != wallId);\r\n        setFeeds(updateFeeds);\r\n        getFeeds()\r\n        dispatch(getUserInfo(() => { }))\r\n        if (parseInt(UserRule?.feeds) <= updateFeeds.length) navigation('/home')\r\n\r\n    }\r\n\r\n    const deleteFeedFromWall = (wallId, feedIdList) => {\r\n        const toDeleteFeeds = feedIdList.map(feedId => Number(feedId));\r\n        const updateWallFeeds = feeds.map(wall => {\r\n            if (wall.wallId === wallId) {\r\n                const updatedFeedList = wall.feed.filter((item) => toDeleteFeeds.indexOf(item.id) === -1);\r\n                wall.feed = updatedFeedList;\r\n            }\r\n            return wall;\r\n        });\r\n        setFeeds(updateWallFeeds);\r\n        getFeeds()\r\n        dispatch(getUserInfo(() => { }))\r\n        if (parseInt(UserRule?.feeds) <= updateWallFeeds.length) navigation('/home')\r\n\r\n    }\r\n\r\n    return <div className=\"d-flex flex-column flex-column-fluid align-items-center justify-content-center w-100 flex-position-center full-content\">\r\n        <Container>\r\n            <div className='mb-6 f-center'>\r\n                <Image src={baseUrl('media/logo/tagshop-icon.svg')} height={50} width={50} alt='Tagshop' fluid />\r\n            </div>\r\n            <RevokeFeeds feedsList={feeds} extraFeeds={extraFeeds} extraGallery={extraGallery} deleteWall={deleteWall} deleteFeedFromWall={deleteFeedFromWall} extraPosts={extraPosts} extraProducts={extraProducts} isLoading={isLoading}/>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport default LimitExceed"],"names":["onDeleteWall","callback","Swal","title","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","dismiss","RevokeList","_ref","feeds","wallId","deleteExtraFeed","navigate","_jsxs","Table","className","size","responsive","children","_jsx","style","minWidth","Button","variant","onClick","feedsList","length","map","feed","concat","id","getAddFeedsId","Network","Networkid","getNetworkId","wallid","FontAwesomeIcon","type","iconClass","index","maxWidth","tag","feedsFilterprefix","includes","_Fragment","ReactHtmlParser","name","feedsFiltername","totalrecords","localStorage","getItem","OverlayTrigger","placement","overlay","Tooltip","_feed$Network","props","show","setShow","useState","navigation","useNavigate","handleClose","useDispatch","Modal","onHide","backdrop","keyboard","centered","Body","minHeight","isLoading","Loader","Image","src","baseUrl","width","height","fluid","isExtra","deleteWall","deleteFeedFromWall","extraGallery","extraFeeds","extraProducts","extraPosts","dispatch","accKey","setAccKey","networkId","HttpClient","delete","DELETE_EXTRA_FEED","data","feedId","response","Object","keys","message","TOAST_SUCCESS","catch","ex","useEffect","_feedsList$","Card","Row","text","Col","Accordion","onSelect","key","flush","activeKey","i","_feed$feed","_feed$feed2","networkIconList","network","_network$Network","feedLength","Item","eventKey","Header","wallname","slice","Index","GET_NETWORK_NAME","GET_NETWORK_ICON","alt","Popover","deleteExtraFeedWall","wallData","GALLERY_WALL_UPDATE","action","status","autoUpdate","deleted","RevokeModal","setFeeds","setExtraGallery","setExtraFeeds","setExtraPosts","setExtraProducts","setIsLoading","UserRule","useSelector","state","_state$authorized","_state$authorized$use","authorized","userData","user_data","shallowEqual","getFeeds","get","GET_EXTRA_FEEDS_API","responseData","wallList","delete_extra_feed","delete_extra_gallery","delete_posts","delete_tagged_products","SET_EXTRA_LIMITS","payload","Container","RevokeFeeds","updateFeeds","filter","getUserInfo","parseInt","feedIdList","toDeleteFeeds","Number","updateWallFeeds","wall","updatedFeedList","item","indexOf"],"sourceRoot":""}