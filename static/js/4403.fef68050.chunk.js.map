{"version":3,"file":"static/js/4403.fef68050.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : children.ref);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["usePrevious","value","ref","useRef","useEffect","current","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","_excluded","useRTGTransitionProps","_ref","onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","nodeRef","mergedRef","useMergedRefs","normalize","callback","param","handleEnter","useCallback","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","assign","status","innerProps","cloneElement","React","component","Component","transitionProps","_jsx","ImperativeTransition","_ref2","in","inProp","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","renderTransition","runTransition","RTGTransition","NoopTransition","resolveContainerRef","document","canUseDOM","ownerDocument","body","getBoundingClientRect","useWaitForDOMRef","onResolved","window","useWindow","resolvedRef","setRef","earlyRef","nextRef","isEscKey","e","code","keyCode","hasClass","className","classList","contains","baseVal","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","size","scrollbarSize","recalc","scrollDiv","createElement","style","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","active","nodeName","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","arguments","undefined","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","add","modal","modalIdx","push","state","splice","isTopModal","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","rest","ownerWindow","isMounted","useMounted","prevShow","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","defaultPrevented","dialogProps","tabIndex","unmountOnExit","mountOnEnter","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","marginProp","el","sharedManager","ModalBody","bsPrefix","as","useBootstrapPrefix","classNames","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","propTypes","PropTypes","variant","CloseButton","ariaLabel","type","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}