{"version":3,"file":"static/js/8768.afc23e0f.chunk.js","mappings":"iPAMA,MAAMA,UAAqBC,EAAAA,UACvBC,MAAAA,GACI,MAAM,MAACC,EAAK,QAAEC,EAAO,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,GAAaC,KAAKC,MACtDC,EAAQJ,EAAkB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MAAgB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUO,MAC9CC,EAAQP,EAAmB,OAATC,QAAS,IAATA,OAAS,EAATA,EAAWO,oBAA+B,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWQ,cACpE,IAAIC,EAAWC,SAAUJ,GAASH,GAAgB,KAAQ,KAY1D,OAAOQ,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,UAAU,gCAA+BC,UAClDC,EAAAA,EAAAA,MAACH,EAAAA,EAAKI,KAAI,CAAAF,SAAA,EACNC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,KAAIC,SAAElB,IAEpBa,GAAY,IAAKM,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CAACC,QAAQ,kBAAkBC,KAAM,KAAMN,UAAU,OAAOO,QAASC,EAAAA,GAAcP,SAAA,EACpGH,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAACC,KAAM,UAAWC,UAAW,SAAS,oBAI1Db,EAAAA,EAAAA,KAACc,EAAAA,EAAc,CAACC,UAAU,MAAMC,SAAShB,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,CAAAd,SAAEjB,IAAmBiB,UAClEH,EAAAA,EAAAA,KAAA,QAAAG,UAAMH,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAACO,KAAM,QAASN,KAAM,cAAeC,UAAW,uBAI9ET,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,KAAIC,SAAA,CAAER,GAAY,EAAE,IAAEH,GAAY,MACjDQ,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CAACZ,SA5BRa,EA4B0BtB,EA3BnCsB,GAAK,GACE,SACAA,GAAK,GACL,UACAA,GAAK,EACL,UAEA,WAoBuClB,UAAU,SAASmB,IAAKvB,GAAkB,YA5B/EsB,KAiCzB,EAEA,MAOA,GAAeE,EAAAA,EAAAA,KAPSC,IAAU,IAADC,EAAAC,EAC7B,MAAO,CACHtC,SAA6C,QAArCqC,EAAED,EAAMG,WAAWC,SAASC,iBAAS,IAAAJ,OAAA,EAAnCA,EAAqCK,SAC/CxC,UAA6B,QAApBoC,EAACF,EAAMO,qBAAa,IAAAL,OAAA,EAAnBA,EAAqBM,cAClC,GAGL,CAAwCjD,E","sources":["app/Layout/Main/Home/Dashboard/OverallCount.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { OverlayTrigger, Tooltip, Col, Card, ProgressBar, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { OPEN_INTERCOM } from '../../../../../utils';\r\n\r\nclass OverallCount extends Component {\r\n    render(){\r\n        const {title, tooltip, userRule, gallery, dashBoard} = this.props\r\n        const total = gallery ? userRule?.walls : userRule?.feeds\r\n        const count = gallery ? dashBoard?.numberOfActiveWalls : dashBoard?.allfeedsCount\r\n        let progress = parseInt((count / (total ? total : 100)) * 100);\r\n        const getColor = e => { \r\n            if (e >= 70) {\r\n                return 'danger';\r\n            } else if (e >= 50) {\r\n                return 'warning';\r\n            } else if (e >= 0) {\r\n                return 'success';\r\n            } else {\r\n                return 'unknown';\r\n            }\r\n        }\r\n        return <Card className=\"card-50 card-stretch gutter-b\">\r\n            <Card.Body>\r\n                <div className=\"f-between mb-3\">\r\n                    <div className=\"h4\">{title}</div>\r\n\r\n                    {progress >= 50 ? <Button variant='outline-primary' size={'sm'} className='ms-3' onClick={OPEN_INTERCOM}>\r\n                        <FontAwesomeIcon icon={'comment'} iconClass={'me-1'}/>\r\n                        Talk to Sales\r\n                    </Button>\r\n                    :\r\n                    <OverlayTrigger placement='top' overlay={<Tooltip>{tooltip}</Tooltip>} >\r\n                        <span><FontAwesomeIcon type={'solid'} icon={'circle-info'} iconClass={'text-muted'}/></span>\r\n                    </OverlayTrigger>\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                    <div className=\"h4\">{count?count:0}/{total?total:0}</div>\r\n                    <ProgressBar variant={getColor(progress)} className=\"h-10px\" now={progress?progress:0} />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    return <h1>HELLO</h1>\r\n}}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userRule: state.authorized.userData.user_data?.UserRule,\r\n        dashBoard:state.dashboardData?.dashboarddata\r\n    }\r\n}   \r\n\r\nexport default connect(mapStateToProps)(OverallCount)"],"names":["OverallCount","Component","render","title","tooltip","userRule","gallery","dashBoard","this","props","total","walls","feeds","count","numberOfActiveWalls","allfeedsCount","progress","parseInt","_jsx","Card","className","children","_jsxs","Body","Button","variant","size","onClick","OPEN_INTERCOM","FontAwesomeIcon","icon","iconClass","OverlayTrigger","placement","overlay","Tooltip","type","ProgressBar","e","now","connect","state","_state$authorized$use","_state$dashboardData","authorized","userData","user_data","UserRule","dashboardData","dashboarddata"],"sourceRoot":""}