{"version":3,"file":"static/js/9603.eadcab63.chunk.js","mappings":"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","sources":["app/Layout/Main/Feeds/AddFeed/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { GET_ADD_FEED } from '../../../../../actions/moderationActions';\nimport { SNAPUP_DETAILS_ACTION } from '../../../../../actions/addFeedActions';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME, generateRandomArray } from '../../../../../utils';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { Image, Badge, Container, Card } from 'react-bootstrap';\n\nconst AddFeed = () => {\n    const { wallId } = useParams();\n    const dispatch = useDispatch()\n    const addFeedData = useSelector(state => state.addFeedReducer)\n    const manageFeed = useSelector(state => state.manageFeeds)\n\n    useEffect(() => {\n        dispatch(GET_ADD_FEED())\n        // if (!addFeedData?.details?.wall) dispatch(SNAPUP_DETAILS_ACTION())\n    }, [])\n\n    const getLinkProps = (networkId) => {\n        if (networkId === 33) return { to: \"/creators\" };\n        if (networkId === 0) return { to: \"/manual-upload\" };\n        return { to: `/content/addfeed/${wallId}/${networkId}` };\n    };\n\n    const renderNetworkBlocks = (network) => {\n        return <div key={network.id} className=\"px-2 mb-4\">\n            <Link className='btn btn-secondary position-relative' {...getLinkProps(network.id)} >\n                <Image height={20} width={20} className='me-2' src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} alt={GET_NETWORK_NAME(network.id)} fluid />\n                {network.name}\n                {network.id === 33 && <Badge bg=\"\" className='position-absolute badge-primary py-1' style={{ top: -16, right: 10 }}>New</Badge>}\n            </Link>\n        </div >\n    }\n\n    return (<div className='d-flex flex-column flex-column-fluid full-content'>\n        <div className=\"subheader\">\n            <Container fluid>\n                <div className='f-between'>\n                    <h1 className=\"me-2 h4 my-3\">Feeds</h1>\n                </div>\n            </Container>\n        </div>\n        <Container fluid>\n            <Card>\n                <Card.Header className='f-between d-flex'>\n                    <h2 className=\"me-2 h4 my-3\">Add Feeds</h2>\n                    <div className=\"f-center\">\n                    {manageFeed.feeds?.length > 0 ? <Link to={`/content/managefeed/${localStorage.getItem('wallId')}`} className=\"btn btn-primary btn-sm text-nowrap btn-min-w\">\n                        Manage Feeds\n                    </Link> : null}\n                    </div>\n                </Card.Header>\n                <Card.Body>\n                    <div className='f-center add_feed_ m-auto'>\n                        <div className='f-center flex-column mb-10'>\n                            <div className=\"text-center mb-5\">\n                                <h3>Choose Source Network</h3>\n                                <p>Select the social platform from which you want to add the feeds</p>\n                            </div>\n                            <div className=\"f-center flex-wrap mb-10\">\n                                {addFeedData?.addFeedNetworks?.networks?.length > 0 ?\n                                    addFeedData.addFeedNetworks.networks.map(renderNetworkBlocks)\n                                    : generateRandomArray(12).map((_, index) => <div key={index} className=\"px-2 mb-4\"><div className=\"sk_rect h-40px me-2 btn-min-w\" style={{ width: 120 }}></div></div>)}\n                            </div>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n        </Container>\n    </div>\n    )\n}\n\nexport default AddFeed"],"names":["AddFeed","_manageFeed$feeds","_addFeedData$addFeedN","_addFeedData$addFeedN2","wallId","useParams","dispatch","useDispatch","addFeedData","useSelector","state","addFeedReducer","manageFeed","manageFeeds","useEffect","GET_ADD_FEED","_jsxs","className","children","_jsx","Container","fluid","Card","Header","feeds","length","Link","to","concat","localStorage","getItem","Body","addFeedNetworks","networks","map","network","networkId","id","Image","height","width","src","baseUrl","GET_NETWORK_ICON","alt","GET_NETWORK_NAME","name","Badge","bg","style","top","right","generateRandomArray","_","index"],"sourceRoot":""}