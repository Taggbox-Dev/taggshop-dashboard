{"version":3,"file":"static/js/911.42646e89.chunk.js","mappings":"sQAQA,MAAMA,UAAiBC,EAAAA,UACnBC,MAAAA,GACI,MAAM,SAAEC,EAAQ,OAAEC,GAAWC,KAAKC,MAC5BC,EAAQ,CAAC,OAAQ,SAAU,SAAU,SAC3C,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,KAAIC,SAAC,uBACnBC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,SACCP,IAAaC,EAASD,EAASU,KAAI,CAACC,EAAMC,KACvC,MAAMC,EAAQF,EAAKE,MAAQC,SAASH,EAAKE,OAAS,EAC5CE,EAAkBJ,EAAKI,gBAAkBD,SAASH,EAAKI,iBAAmB,EAC1EC,EAASH,EAAQE,EAEvB,OAAOP,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAEZ,UACrBC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,aAAed,UACnBC,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAAChB,UAAS,wBAAAiB,OAA0BnB,EAAMQ,IAASL,UACpDF,EAAAA,EAAAA,MAACiB,EAAAA,EAAKE,KAAI,CAAAjB,SAAA,EACNF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SACxCI,EAAKc,SAEVjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,UAAU,MAAMC,SAASpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAO,CAAAtB,SAAEI,EAAKmB,WAAoBvB,UACxEC,EAAAA,EAAAA,KAAA,QAAAD,UAAMC,EAAAA,EAAAA,KAACuB,EAAAA,GAAe,CAACC,KAAM,QAASC,KAAM,cAAeC,UAAW,uBAG9E7B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,UAAE4B,EAAAA,EAAAA,IAAWtB,KAClCA,GAASE,GAAkBV,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CAACC,GAAG,GAAG/B,UAAS,eAAAiB,OAAiBP,EAAM,UAAe,SAAQ,cAAaT,SAAA,EACzGC,EAAAA,EAAAA,KAACuB,EAAAA,GAAe,CAACC,KAAM,QAASC,KAAMjB,EAAS,WAAa,aAAckB,UAAW,UACpFI,EAAAA,EAAAA,IAAoBzB,EAAOE,GAAiBwB,QAAQ,GAAG,OACjD,gBAjBA3B,EAsBzB,KAGN4B,EAAAA,EAAAA,IAAoB,GAAG9B,KAAI,CAAC+B,EAAO7B,KAAWJ,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAEZ,UAC5DC,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAAChB,UAAU,WAAUC,UACtBF,EAAAA,EAAAA,MAACiB,EAAAA,EAAKE,KAAI,CAAAjB,SAAA,EACNC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+CACbE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,8EAJ6CM,SAUtF,EAIJ,MAOA,GAAe8B,EAAAA,EAAAA,KAPSC,IACb,CACH3C,SAAU2C,EAAMC,cAAc5C,SAC9BC,OAAQ0C,EAAMC,cAAcC,mBAII,KAAxC,CAA8ChD,E","sources":["app/Layout/Main/Home/Dashboard/Overview.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { calculatePercentage, kFormatter, generateRandomArray } from \"../../../../../utils\";\nimport { OverlayTrigger, Tooltip, Row, Col, Card, Badge } from \"react-bootstrap\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\n\n\nclass Overview extends Component {\n    render() {\n        const { overview, loader } = this.props\n        const color = ['blue', 'orange', 'yellow', 'green']\n        return <div className=\"businessOverview_section\">\n            <h4 className=\"h3\">Business Overview</h4>\n            <Row>\n                {overview && !loader ? overview.map((Item, Index) => {\n                    const total = Item.total ? parseInt(Item.total) : 0\n                    const total_last_week = Item.total_last_week ? parseInt(Item.total_last_week) : 0\n                    const status = total > total_last_week ? true : false\n\n                    return <Col lg={3} sm={6} key={Index}>\n                        <Link to={`/analytics`}>\n                            <Card className={`gutter-b card-shadow ${color[Index]}`}>\n                                <Card.Body>\n                                    <div className=\"f-between\">\n                                        <p className=\"fs-8 fw-medium text-muted mb-2\">\n                                            {Item.label}\n                                        </p>\n                                        <OverlayTrigger placement='top' overlay={<Tooltip>{Item.tool_tip}</Tooltip>} >\n                                            <span><FontAwesomeIcon type={'solid'} icon={'circle-info'} iconClass={'text-muted'}/></span>\n                                        </OverlayTrigger>\n                                    </div>\n                                    <div className=\"d-flex align-items-center\">\n                                        <p className=\"h1 mb-0\">{kFormatter(total)}</p>\n                                        {total && total_last_week ? <Badge bg='' className={`badge-light-${status ? `success` : 'danger'} ms-1 py-1`}>\n                                            <FontAwesomeIcon type={'solid'} icon={status ? 'caret-up' : 'caret-down'} iconClass={'me-1'}/>\n                                            {calculatePercentage(total, total_last_week).toFixed(0)}%\n                                        </Badge> : null}\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                    </Col>\n                })\n                    :\n                    generateRandomArray(4).map((count, Index) => (<Col lg={3} sm={6} key={Index}>\n                        <Card className=\"gutter-b\">\n                            <Card.Body>\n                                <p className=\"mb-6 sk_line sk_line_50 sk_line_height_10\"></p>\n                                <p className=\"fs-8 fw-medium text-muted mb-3 sk_line sk_line_30 sk_line_height_20\"></p>\n                            </Card.Body>\n                        </Card>\n                    </Col>))}\n            </Row>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        overview: state.dashboardData.overview,\n        loader: state.dashboardData.overview_loader\n    }\n}\n\nexport default connect(mapStateToProps, null)(Overview)"],"names":["Overview","Component","render","overview","loader","this","props","color","_jsxs","className","children","_jsx","Row","map","Item","Index","total","parseInt","total_last_week","status","Col","lg","sm","Link","to","Card","concat","Body","label","OverlayTrigger","placement","overlay","Tooltip","tool_tip","FontAwesomeIcon","type","icon","iconClass","kFormatter","Badge","bg","calculatePercentage","toFixed","generateRandomArray","count","connect","state","dashboardData","overview_loader"],"sourceRoot":""}