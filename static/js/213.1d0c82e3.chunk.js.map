{"version":3,"file":"static/js/213.1d0c82e3.chunk.js","mappings":"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","sources":["app/Layout/Header/index.js","app/Layout/Main/CommonComponents/ContentSwitcher/AddContentModal.js","app/Layout/Main/CommonComponents/ContentSwitcher/index.js","utils/close_modal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { baseUrl, FontAwesomeIcon } from '../../../Assets/AssetsHelper'\nimport { Dropdown, Navbar, Button, Image } from 'react-bootstrap';\nimport { connect, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ContentSwitcher from '../Main/CommonComponents/ContentSwitcher';\nimport { Cookies } from 'react-cookie';\nconst UserDropdown = React.lazy(() => import('./UserDropdown'));\nconst Notifications = React.lazy(() => import('../Main/CommonComponents/Notifications'));\nconst cookies = new Cookies();\n\n\nconst DropdownItem = (props) => {\n       return <Dropdown.Item {...props}>\n              <FontAwesomeIcon type={'solid'} icon={props.iconText} />\n              {props.text}\n       </Dropdown.Item>\n}\n\nclass Header extends Component {\n       constructor(props) {\n              super(props);\n              this.state = { isActiveAside: false, appThemeSkin: cookies.get('appThemeSkin') ? cookies.get('appThemeSkin') == 'light' ? true : false : true, isNotification: false };\n              if (cookies.get('appThemeSkin')) {\n                     const htmlTag = document.getElementsByTagName(\"html\")[0];\n                     htmlTag.setAttribute(\"data-theme\", cookies.get('appThemeSkin'));\n              }\n       }\n       // const Header = ({ navigate, authorized }) => {\n       //        const [isNotification, setNotificationToggle] = useState(false)\n       //        const [ThemeSkin, setThemeSkin] = useState('light')\n       //        const onNotificationToggle = event => setNotificationToggle(!isNotification)\n       //        const latestNotifionList = useSelector(state => state.notification?.latestNotifionList)\n       //        const getNotificationAction = (action, getNotificationUrl, message) => {\n       //               if (action === 'init') {\n       //                      return <a href={`${getNotificationUrl}`} className={`resetAction ${action != 'init' ? action : ''}`}>\n       //                             {ReactHtmlParser(message)}\n       //                      </a>\n       //               } else if (action === 'popup') {\n       //                      return <a className={`resetAction ${action != 'init' ? action : ''}`} onClick={() => this.togglePlanSection(true)}>\n       //                             {ReactHtmlParser(message)}\n       //                      </a>\n       //               } else if (action === 'ugc') {\n       //                      return <a href={getNotificationUrl} className={`resetAction ${action != 'init' ? action : ''}`} target='_blank'>\n       //                             {ReactHtmlParser(message)}\n       //                      </a>\n       //               }\n       //               return <a href={`${getNotificationUrl}`} className={`resetAction ${action != 'init' ? action : ''}`}>\n       //                      {ReactHtmlParser(message)}\n       //               </a>\n       //        }\n       //        useEffect(() => {\n       //               getNotificationCount()\n       //        }, [latestNotifionList])\n\n\n\n       // 'getNotificationCount' = () => {\n       //        if (latestNotifionList && latestNotifionList.length > 0) {\n       //               let notificationCount = document.getElementById(\"notificationCount\");\n       //               if (notificationCount) {\n       //                      if (latestNotifionList.filter((a) => a.status == 0).length > 0) {\n       //                             notificationCount.style.display = 'block';\n       //                             notificationCount.innerText = latestNotifionList.filter((a) => a.status == 0).length;\n       //                      }\n       //                      else {\n       //                             notificationCount.style.display = 'none';\n       //                             notificationCount.innerText = ''\n       //                      }\n       //               }\n       //        }\n       // }\n       setMode = () => {\n              const htmlTag = document.getElementsByTagName(\"html\")[0];\n              this.setState({ appThemeSkin: !this.state.appThemeSkin }\n                     //,() => this.props.setAppThemeSkin(ele)\n              ,() => {\n                     htmlTag.setAttribute(\"data-theme\", this.state.appThemeSkin ? 'light' : 'dark')\n                     cookies.set(\"appThemeSkin\", this.state.appThemeSkin ? 'light' : 'dark', { path: '/' })\n              }\n              );\n\n       };\n       componentDidMount() {\n              \n       }\n\n       onNotificationToggle = () => this.setState({ isNotification: !this.state.isNotification })\n       render() {\n              const { navigate, authorized, notificationList} = this.props\n              const { isNotification, appThemeSkin } = this.state\n              const notifications_count = notificationList.filter((a) => a.status == 0).length\n\n              return <Navbar className=\"header-main fixed-top f-center border-bottom py-0 bg-body flex-nowrap\" expand=\"lg\">\n                     <div className=\"app-logo f-center flex-shrink-1 border-end\">\n                            <Link to={\"/\"} className=\"f-center header_logo\">\n                                   <span className=\"d-flex w-100\">\n                                          <Image src={baseUrl('media/logo/tagshop-icon.svg')} width=\"44\" height=\"44\" alt='Tagshop' fluid/>\n                                   </span>\n                            </Link>\n                     </div>\n                     <div className=\"app-container f-between flex-grow-1 h-100\">\n                            <div className=\"d-flex flex-grow-1 w-75\">\n                                   <div className=\"d-lg-none d-flex align-items-center justify-content-center mob_toggle_icon me-3\">\n                                          <Button id=\"main_menu_toggle\" variant='icon' size='sm' className=\"p-0 custom_burger_icon bg-tansparent\">\n                                                 <span></span>\n                                                 <span></span>\n                                                 <span></span>\n                                          </Button>\n                                   </div>\n                                   <div className='w-100 header_swticher'>\n                                          {/\\/(moderation|addfeed|managefeed|more-apps|manual-upload)/.test(window.location.pathname) ? <ContentSwitcher header={true}/> : ''}\n                                   </div>\n                            </div>\n                            <div className=\"header-menu d-flex align-items-center justify-content-end w-xs-100 h-100\">\n                                   <div className=\"d-flex align-items-center h-100 flex-shrink-0\">\n                                          {authorized?.userData && !authorized?.userData?.user_data?.UserPlan?.planId?.includes('39') && (\n                                                 <Link to={`/price`} className=\"btn btn-primary text-nowrap btn-sm mx-1 d-none d-sm-flex\" style={{ minWidth: 34 }}>\n                                                        Upgrade Now!\n                                                 </Link>\n                                          )}\n\n                                          <Button variant=\"icon\" size='sm' className=\"fs-6 border-0 ms-sm-1\" onClick={this.setMode}>\n                                                 <i className={`fa-duotone fa-solid fa-${appThemeSkin ? 'moon' : 'sun-bright'}`}></i>\n                                          </Button>\n\n                                          <Dropdown className='h-100 f-center' align=\"end\">\n                                                 <Dropdown.Toggle variant='icon' size='sm' className='fs-6 border-0 arrow_disabled ms-sm-1'>\n                                                        <i className=\"fa-duotone fa-solid fa-circle-question\"></i>\n                                                 </Dropdown.Toggle>\n                                                 <Dropdown.Menu>\n                                                        <DropdownItem iconText=\"comments\" text=\"Chat\" onClick={window.Intercom ? (e) => { window.Intercom('show') } : () => { }} />\n                                                        <DropdownItem iconText=\"phone\" text=\"Call\" href=\"https://calendly.com/taggbox/csm\" target='_blank' />\n                                                        <DropdownItem iconText=\"envelope\" text=\"Email\" href=\"mailto:support@tagshop.ai\" target='_blank' />\n                                                        <DropdownItem iconText=\"book-open-cover\" text=\"Knowledge Base\" href=\"https://tagshop.ai/support/\" target='_blank' />\n                                                 </Dropdown.Menu>\n                                          </Dropdown>\n                                          <Dropdown className=\"head_notifications_ h-100 f-center\" align=\"end\" show={isNotification} onToggle={this.onNotificationToggle}>\n                                                 <Dropdown.Toggle variant=\"icon\" size='sm' className=\"fs-6 border-0 arrow_disabled ms-sm-1 position-relative\">\n                                                        {notifications_count ? <span className=\"notifications_count bg-primary text-white position-absolute rounded-4\" id=\"notificationCount\" style={{zIndex:9}}>{notifications_count}</span> : null}\n                                                        <i className=\"fa-duotone fa-solid fa-bell\"></i>\n                                                 </Dropdown.Toggle>\n                                                 <Dropdown.Menu className=\"p-0\">\n                                                        <Suspense fallback={<></>}>\n                                                               <Notifications notificationList={notificationList} onNotificationToggle={this.onNotificationToggle} />\n                                                        </Suspense>\n                                                 </Dropdown.Menu>\n                                          </Dropdown>\n                                          <Suspense fallback={<></>}><UserDropdown navigate={navigate} authorized={authorized} /></Suspense>\n                                   </div>\n                            </div>\n                     </div>\n              </Navbar>\n       }\n}\n\nconst mapStateToProps = (state) => {\n       return {\n           notificationList: state.notification.notificationList\n       }\n   }\n   export default connect(mapStateToProps)(Header);","import React, { useEffect, useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nconst AddContentModal = ({ show, title, apiError, setApiError, onCreate, onUpdate, editContent, handleClose, isStatus , deleteContent, spinner}) => {\n    const [name, setName] = useState('');\n    const [autoUpdate, setAutoUpdate] = useState(1);\n    const [status, setStatus] = useState(1);\n    const [error, setError] = useState(false);\n\n    const closePopup = () => {\n        setName('');\n        handleClose('');\n    };\n\n    const onSave = () => {\n        if (name && name.length > 0){ setError(false) ; onCreate(name,autoUpdate,status)}\n        else setError(true);\n    };\n\n    const Update = (id) => {\n        if (name && name.length > 0){ setError(false) ;  onUpdate(id, name, status, autoUpdate)}\n        else setError(true);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            if (editContent && Object.keys(editContent).length > 0) {\n                Update(editContent.id,  name, status, autoUpdate);\n            } else {\n                onSave();\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (editContent && Object.keys(editContent).length > 0) {\n            setName(editContent.name);\n            setAutoUpdate(Number(editContent.autoUpdate));\n            setStatus(Number(editContent.status));\n        } else {\n            resetForm();\n        }\n    }, [editContent]);\n\n    const resetForm = () => {\n        setName('');\n        setAutoUpdate(1);\n        setStatus(1);\n        setError(false);\n    };\n\n    return (\n        <Modal show={show} size='sm' onHide={handleClose} id=\"cont_modal\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {editContent && Object.keys(editContent).length > 0 ? 'Edit' : 'Create'} {title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group className='mb-4'>\n                    <Form.Control id=\"g_name\" className={`fw-semibold  ${error || apiError?'is-invalid':''}`} placeholder='Enter Gallery Name' value={name} onChange={(e) => { setError(false) ; setApiError('') ; setName(e.target.value)}} onKeyPress={handleKeyPress} />\n                    <span className=\"invalid-feedback\">{error ?  `${title} name is required` : apiError ? `${apiError}` :''}</span>\n                </Form.Group>\n                <Form.Group className=\"f-between mb-4\">\n                    <Form.Label htmlFor='cont_a_u'>Auto Update</Form.Label>\n                    <Form.Check type=\"switch\" id=\"cont_a_u\" checked={autoUpdate} onChange={() => setAutoUpdate(Number(!autoUpdate))} />\n                </Form.Group>\n                <Form.Group className=\"f-between mb-4\">\n                    <Form.Label htmlFor='cont_s'>Status</Form.Label>\n                    <Form.Check type=\"switch\" id=\"cont_s\" checked={status} onClick={() => setStatus(Number(!status))} />\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n               {editContent && Object.keys(editContent).length > 0 ? <>\n                  <Button variant='outline-danger' size='sm'  id='con_delete_btn'  onClick={()=>deleteContent(editContent)}>Delete</Button>\n                    <Button size='sm' id='con_update_btn'  className={`${spinner ? 'spinner':''}`} disabled={spinner}  onClick={() => Update(editContent.id)}>Update</Button>\n                    </>\n               : (\n                    <Button size='sm' id='con_save_btn' className={`${spinner ? 'spinner':''}`} disabled={spinner} onClick={onSave}>Save</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AddContentModal;\n","import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AddContentModal from './AddContentModal';\nimport { CHANGE_MODERATION_WALLID, MODERATION_LODING, MODERATION_RESET, TOGGLE_ADD_GALLERY } from '../../../../../reducer/keys';\nimport { activeTabActionFilter, getModeration, removeAllFilterBody } from '../../../../../actions/moderationActions';\nimport { GET_FEEDS } from '../../../../../actions/manageFeedsAction';\nimport { closePricingModal } from '../../../../../utils/close_modal';\nimport { GALLERY_WALL_UPDATE } from '../../../../../actions/sceneActions';\nimport Swal from 'sweetalert2';\n\nconst ContentSwitcher = ({ contentList, selectedContent, title, iswebsite, onlySwitcher, modifyContent, selectLoader, header }) => {\n    const allWalls = useSelector(state => state.dashboardData?.dashboarddata?.allWalls)\n    const user = useSelector(state => state.authorized?.userData?.user_data);\n    const { wallsLoader, addGalleryNow } = useSelector(state => state?.dashboardData)\n\n    const [selectedWall, setSelectedWall] = useState(null);\n    const [addContent, setAddContent] = useState(false);\n    const [editContent, setEditContent] = useState([]);\n    const [loader, setLoader] = useState(true)\n    const [spinner, setSpinner] = useState(false)\n    const [apiError, setApiError] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const changeContent = (item) => {\n        setSelectedWall(item);\n        if (user?.role == 'Collaborator') {\n            localStorage.setItem(\"wallId\", item.wallId)\n        }\n        else {\n            localStorage.setItem(\"wallId\", item.id)\n        }\n        if (title?.includes('Email') || title?.includes('Shop') || title?.includes('Website')) {\n            modifyContent(item)\n        }\n        else {\n            if (window.location.pathname?.includes('/more-apps')) {\n                navigate(`/more-apps/${item.id}`);\n            }\n\n            else if (window.location.pathname?.includes('/moderation')) {\n                dispatch({ type: CHANGE_MODERATION_WALLID, payload: true });\n                dispatch({ type: MODERATION_RESET, payload: true });\n                dispatch(GET_FEEDS())\n                dispatch(removeAllFilterBody(true))\n                dispatch(activeTabActionFilter(0))\n                navigate(`/content/moderation/${item.id}`);\n                closePricingModal(dispatch)\n            }\n            else {\n                dispatch({ type: CHANGE_MODERATION_WALLID, payload: true });\n                dispatch({ type: MODERATION_RESET, payload: true });\n                dispatch(GET_FEEDS())\n                setTimeout(() => {\n                    if (item?.totalPost > 0) navigate(`/content/managefeed/${item.id}`);\n                    else navigate(`/content/addfeed/${item.id}`);\n                }, 1000);\n            }\n        }\n\n\n    }\n\n    const callback = (msg) => {\n        if (msg) {\n            setApiError(msg)\n            setSpinner(false)\n        }\n        else {\n            openAddModal(false);\n            setEditContent([])\n            setSpinner(false)\n        }\n    };\n\n    const openAddModal = (status) => { dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }) }\n\n\n    const isGalleryNameExist = (galleryName) => allWalls?.some(wall => wall?.name?.toLowerCase() === galleryName?.toLowerCase());\n\n    const onAddGallery = (name, autoUpdate, status) => {\n        const galleryName = name?.trim();\n\n        if (isGalleryNameExist(galleryName)) {\n            setApiError(\"Gallery name already exists.\");\n            return;\n        }\n\n        if (galleryName) {\n            setSpinner(true);\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName, status, autoUpdate: autoUpdate || 0, deleted: 0, id: '', action: 1 }, navigate, callback));\n        }\n    };\n\n\n    const deleteContent = (item) => {\n        Swal.fire({\n            title: \"Are You Sure?\",\n            text: 'You are about to delete a Gallery that is used in Publish. Deleting the gallery would also delete the corresponding Publish sections.',\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n            confirmButtonText: \"Yes, Delete it\",\n        }).then((result) => {\n            if (result.value) {\n                dispatch(GALLERY_WALL_UPDATE({ name: item.name, status: item.status, autoUpdate: item.autoUpdate || 0, id: item.id, deleted: 0, action: 3 }, navigate, callback))\n            }\n            else if (result.dismiss === \"cancel\") { }\n        });\n    }\n\n    const onUpdate = (id, galleryName, status, autoupdate) => {\n        if (galleryName && galleryName.length > 0) {\n            setSpinner(true)\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName?.trim(), status: status, id: id, autoUpdate: autoupdate || 0, deleted: 0, action: 2 }, navigate, callback))\n        }\n    }\n\n    const editGallery = (item) => {\n        setEditContent(item);\n        openAddModal(true)\n    }\n\n    useEffect(() => {\n        const getSelectedWall = allWalls?.find((wall) => wall.id == localStorage.getItem('wallId'))\n        if ((selectedContent && Object.keys(selectedContent).length > 0)) {\n            setSelectedWall(selectedContent)\n            setLoader(false)\n        } else if (selectLoader) setLoader(true)\n        else {\n            setSelectedWall(getSelectedWall ? getSelectedWall : allWalls && allWalls[0] ? allWalls[0] : '');\n            setLoader(false)\n        }\n    }, [, selectedContent, selectLoader, allWalls, localStorage.getItem('wallId')])\n\n    return (<><div className='d-flex align-items-center'>\n        <Dropdown className='w-100'>\n            {wallsLoader || loader ? <div className=\"w-100 sk_rect rounded-1 h-34px\"></div> :\n                selectedWall && Object.keys(selectedWall).length > 0 ? <Dropdown.Toggle id=\"content_btn\" variant=\"secondary\" size={'sm'} className=\"d-flex align-items-center w-100 justify-content-between\" style={{ padding: header ? 2 : 4 }}>\n                    <div className=\"d-flex align-items-center flex-grow-1\">\n                        <div className={`symbol symbol-${header ? '28' : '32'} radius-2 flex-shrink-0 me-2`}>\n                            <span className=\"symbol-label fs-8\">{(selectedWall?.name)?.charAt(0).toUpperCase()}</span>\n                        </div>\n                        <div className=\"overflow-hidden w-100 text-start d-flex flex-column\" style={{ maxWidth: 130 }}>\n                            <p className=\"fw-bold mb-0 text-ellipsis fs-9 lh-sm\">{selectedWall?.name}</p>\n                            <span className='fs-10 text-muted'>{selectedWall?.totalPost ? `${selectedWall?.totalPost} Posts` : '0 Post'}</span>\n                        </div>\n                    </div>\n                </Dropdown.Toggle>\n                    :\n                    <Button variant='secondary' size='lg' className='w-100' onClick={() => window.location.href.includes('content/moderation') ? openAddModal(true) : navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`)}>\n                        <FontAwesomeIcon icon={'plus'} iconClass={'me-1'} />\n                        New Gallery\n                    </Button>\n            }\n\n            {allWalls ? <Dropdown.Menu className=\"w-100 p-0\">\n                <div className=\"dropdown-height\">\n                    {allWalls?.map((item, index) => {\n                        const data = iswebsite ? item?.wall?.Wall : item\n                        return <div key={index} className='position-relative'>\n                            <Dropdown.Item eventKey={data?.id} onClick={() => changeContent(data)} className={`mb-1 rounded-0 ${data?.id == localStorage.getItem('wallId') ? 'active' : ''}`}>\n                                <div className=\"d-flex align-items-center\">\n                                    <div className={`symbol symbol-${header ? '28' : '32'} radius-2 flex-shrink-0 me-2`}>\n                                        <span className=\"symbol-label fs-8\">{(data?.name)?.charAt(0).toUpperCase()}</span>\n                                    </div>\n                                    <div className=\"overflow-hidden w-100 text-start d-flex flex-column\" style={{ maxWidth: 130 }}>\n                                        <p className=\"fw-bold mb-0 text-ellipsis fs-9 lh-sm\">{data?.name}</p>\n                                        <span className='fs-10 text-muted lh-sm'>{data?.totalPost ? `${data?.totalPost} Posts` : '0 Post'}</span>\n                                    </div>\n                                    <div>\n                                    </div>\n                                </div>\n                            </Dropdown.Item>\n                            {!onlySwitcher && <div className='dropdown-action pe-2'>\n                                <Button variant='dropdown-icon' className='content_edit' onClick={() => editGallery(item)}>\n                                    <FontAwesomeIcon icon={'ellipsis-vertical'} iconClass={'me-0'} />\n                                </Button>\n                            </div>}\n                        </div>\n                    })}\n                    {!onlySwitcher && <div className='mt-2 p-2 border-top'>\n                        <Dropdown.Item id=\"add_web_btn\" onClick={() => openAddModal(true)} className='f-center'>\n                            <span className=\"svg-icon svg-icon-9\">\n                                <FontAwesomeIcon icon={'plus'} />\n                            </span>\n                            <span className='menu-title flex-grow-0'>New {title}</span>\n                        </Dropdown.Item>\n                    </div>}\n                </div>\n            </Dropdown.Menu> : null}\n        </Dropdown>\n        {selectedWall && Object.keys(selectedWall).length > 1 && /\\/(moderation|addfeed|managefeed|manual-upload)/.test(window.location.pathname) ?\n            <OverlayTrigger placement='bottom' overlay={<Tooltip>Add more contenting</Tooltip>} >\n                <Link style={{ cursor: 'pointer' }} to={`/content/addfeed/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`} className=\"btn btn-primary btn-sm ms-1\">\n                    <FontAwesomeIcon icon={'plus'} iconClass={'me-0'} />\n                </Link>\n            </OverlayTrigger>\n            : null}\n    </div>\n        <AddContentModal show={addGalleryNow} apiError={apiError} setApiError={setApiError} title=\"Gallery\" onCreate={onAddGallery} onUpdate={onUpdate} editContent={editContent} handleClose={() => { setEditContent([]); openAddModal(false); setApiError('') }} deleteContent={deleteContent} spinner={spinner} />\n    </>\n    )\n}\n\n\nexport default ContentSwitcher","import { toggleAddFeedsSection, togglePlanSection } from \"../actions/show_modal_Action\";\n\n\nexport const closePricingModal = (dispatch) => {\n   dispatch(togglePlanSection(false)) \n   dispatch(toggleAddFeedsSection(false))\n\n\n}"],"names":["UserDropdown","React","Notifications","cookies","Cookies","DropdownItem","props","_jsxs","Dropdown","Item","children","_jsx","FontAwesomeIcon","type","icon","iconText","text","Header","Component","constructor","super","setMode","htmlTag","document","getElementsByTagName","this","setState","appThemeSkin","state","setAttribute","set","path","onNotificationToggle","isNotification","isActiveAside","get","componentDidMount","render","_authorized$userData","_authorized$userData$","_authorized$userData$2","_authorized$userData$3","navigate","authorized","notificationList","notifications_count","filter","a","status","length","Navbar","className","expand","Link","to","Image","src","baseUrl","width","height","alt","fluid","Button","id","variant","size","test","window","location","pathname","ContentSwitcher","header","userData","user_data","UserPlan","planId","includes","style","minWidth","onClick","concat","align","Toggle","Menu","Intercom","e","href","target","show","onToggle","zIndex","Suspense","fallback","_Fragment","connect","notification","_ref","title","apiError","setApiError","onCreate","onUpdate","editContent","handleClose","isStatus","deleteContent","spinner","name","setName","useState","autoUpdate","setAutoUpdate","setStatus","error","setError","onSave","Update","useEffect","Object","keys","Number","resetForm","Modal","onHide","centered","closeButton","Title","Body","Form","Group","Control","placeholder","value","onChange","onKeyPress","key","Label","htmlFor","Check","checked","Footer","disabled","_selectedWall$name","contentList","selectedContent","iswebsite","onlySwitcher","modifyContent","selectLoader","allWalls","useSelector","_state$dashboardData","_state$dashboardData$","dashboardData","dashboarddata","user","_state$authorized","_state$authorized$use","wallsLoader","addGalleryNow","selectedWall","setSelectedWall","addContent","setAddContent","setEditContent","loader","setLoader","setSpinner","dispatch","useDispatch","useNavigate","changeContent","item","_window$location$path","_window$location$path2","role","localStorage","setItem","wallId","CHANGE_MODERATION_WALLID","payload","MODERATION_RESET","GET_FEEDS","removeAllFilterBody","activeTabActionFilter","togglePlanSection","toggleAddFeedsSection","closePricingModal","setTimeout","totalPost","callback","msg","openAddModal","TOGGLE_ADD_GALLERY","getSelectedWall","find","wall","getItem","padding","charAt","toUpperCase","maxWidth","iconClass","map","index","_item$wall","_data$name","data","Wall","eventKey","editGallery","OverlayTrigger","placement","overlay","Tooltip","cursor","AddContentModal","onAddGallery","galleryName","trim","some","_wall$name","toLowerCase","isGalleryNameExist","GALLERY_WALL_UPDATE","deleted","action","autoupdate","Swal","showCancelButton","cancelButtonText","confirmButtonText","then","result","dismiss"],"sourceRoot":""}