{"version":3,"file":"static/js/4477.96ac1ed8.chunk.js","mappings":"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","sources":["actions/notificationAction.js","actions/planDetail.js","app/components/content/addFeed/Header.js","app/components/content/addFeed/index.js","app/routes/Navigation.js"],"sourcesContent":["\r\nimport { DELETE_NOTIFICATION, GET_ALL_NOTIFICATION, GET_LATEST_NOTIFICATION } from \"../reducer/keys\";\r\nimport { TOAST_DISMISS, TOAST_LOADING, TOAST_SUCCESS } from \"../utils\";\r\nimport { COLLABORATOR_ADD, DELETE_NOTIFICATION_API, GET_ALL_NOTIFICATION_API } from \"./api\";\r\nimport HttpClient from \"./http-client\";\r\n\r\nexport const getAllNotification = (postbody, isLatestNotification) => {\r\n  return async (dispatch) => {\r\n    TOAST_LOADING();\r\n    await new HttpClient()\r\n      .post(GET_ALL_NOTIFICATION_API, postbody)\r\n      .then((response) => {\r\n        TOAST_DISMISS()\r\n        const { responseData, response_code } = response.data;\r\n        if (response_code === 200) {\r\n          const { notifications, notificationsCount } = responseData;\r\n          if (isLatestNotification) {\r\n            dispatch({\r\n              type: GET_LATEST_NOTIFICATION,\r\n              payload: { notifications, notificationsCount },\r\n            });\r\n          } else {\r\n            const { notifications, notificationsCount } = responseData;\r\n            dispatch({ type: GET_ALL_NOTIFICATION, payload: { notifications, notificationsCount } });\r\n          }\r\n        }\r\n      })\r\n      .catch((ex) => {\r\n        TOAST_DISMISS()\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteNotification = (id) => {\r\n  return async (dispatch) => {\r\n    await new HttpClient()\r\n      .delete(`${DELETE_NOTIFICATION_API}/${id}`)\r\n      .then((response) => {\r\n        const { response_message, response_code } = response.data;\r\n\r\n        if (response_code === 200) {\r\n          dispatch({\r\n            type: DELETE_NOTIFICATION,\r\n            payload: id,\r\n          });\r\n          TOAST_SUCCESS(response_message, 2000);\r\n        }\r\n      })\r\n      .catch((ex) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport const COLLABORATOR_ACCEPT = (obj) => {\r\n  new HttpClient().post(COLLABORATOR_ADD, obj).then(res => {\r\n  })\r\n} ","import axios from 'axios';\r\nimport HttpClient from \"./http-client\";\r\nimport { CHECK_STRIPE_SESSION, ENABLE_EC_FREE_PLAN, PRODUCT_PLAN_DETAIL, PRODUCT_PLAN_UPDATE, SHOPIFY_GET_SUBSCRIPTIONS_LINK, SHOPIFY_SUBSCRIPTIONS_COMPLETED, SUCCESS_STRIPE_CALL } from './api'\r\nimport { DISPATCH_STRIPE_CALL, PLAN_PRICES_DETAILS, PLAN_PRICES_UPDATE } from '../reducer/keys';\r\n\r\n\r\n\r\n\r\nexport const PLAN__DETAILS = () => { \r\n    return (dispatch) => {\r\n        new HttpClient().get(PRODUCT_PLAN_DETAIL).then((response) => {\r\n            const { responseData } = response.data\r\n            dispatch({ type: PLAN_PRICES_DETAILS, payload: responseData });\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const UPDATE_PLAN__DETAILS = (planId) => { \r\n   var data = {\"plan_id\":planId,\"taggshop_visitor\":1,\"ugc_visitor\":0}\r\n   return  new HttpClient().post(PRODUCT_PLAN_UPDATE, data)\r\n    \r\n}\r\n\r\n\r\nexport const UPDATE_EC_FREE_PLAN = (planId) => {  \r\n  var data = {\"plan_id\":planId,\"taggshop_visitor\":1,\"ugc_visitor\":0}\r\n  return  new HttpClient().post(ENABLE_EC_FREE_PLAN, data)\r\n   \r\n}\r\n\r\n\r\n\r\nexport const GET_SHOPIFY_SUBSCRIPTION_LINK = (obj) => { return  new HttpClient().post(SHOPIFY_GET_SUBSCRIPTIONS_LINK,obj) }\r\nexport const COMPLETE_SHOPIFY_SUBSCRIPTION = (obj) => { return  new HttpClient().post(SHOPIFY_SUBSCRIPTIONS_COMPLETED,obj) }\r\n\r\n\r\n// export const STRIPE_CHECKOUT = (id, history) => { \r\n//     var data = {\"sessionId\":id,}\r\n//     return (dispatch) => {\r\n//         new HttpClient().post(CHECK_STRIPE_SESSION, data).then((response) => {\r\n//             const { response_code, responseData } = response.data\r\n//             if(response_code == 200){\r\n//                 dispatch({ type: DISPATCH_STRIPE_CALL, payload: true });\r\n//                 GET_PAYMENT_RESPONSE(responseData[0].referenceId, history)\r\n//               }\r\n//               else{\r\n//                 dispatch({ type: DISPATCH_STRIPE_CALL, payload: false });\r\n//                 history('accounts/failed')\r\n//               }\r\n//         })\r\n//     }\r\n//  }\r\n\r\n\r\n// export const GET_PAYMENT_RESPONSE = (id, history) => { \r\n//     var data = {\"referenceId\":id, \"adminId\":0}\r\n//      new HttpClient().post(SUCCESS_STRIPE_CALL, data).then((response)=>{\r\n//         const { response_code } = response.data\r\n//         if(response_code == 200){ \r\n//             history('accounts/thankYou')\r\n//           }\r\n//           else{ \r\n//            // history('accounts/failed')\r\n//           }\r\n\r\n//      }).catch((err)=>{ \r\n//        //  history('accounts/failed')\r\n\r\n//      })\r\n//  }\r\n\r\n\r\nexport const STRIPE_CHECKOUT = (id) => { \r\n    var data = {\"sessionId\":id,}\r\n    return new HttpClient().post(CHECK_STRIPE_SESSION, data)\r\n \r\n }\r\n \r\n\r\n export const GET_PAYMENT_RESPONSE = (id, history) => { \r\n    var data = {\"referenceId\":id, \"adminId\":0}\r\n    return (dispatch) => {\r\n        new HttpClient().post(SUCCESS_STRIPE_CALL, data).then((response) => {\r\n            const { response_code, response_data } = response.data\r\n            if(response_code == 200){\r\n                dispatch({ type: DISPATCH_STRIPE_CALL, payload: response_data });\r\n                history('/accounts/thankYou')\r\n              }\r\n              else{\r\n                // dispatch({ type: DISPATCH_STRIPE_CALL, payload: false });\r\n                // history('accounts/failed')\r\n              }\r\n            }).catch((err)=>{ \r\n              //  history('accounts/failed')\r\n       \r\n            })\r\n    }\r\n }","import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    const { wallId } = useParams();\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-between border-bottom page_custom_header\">\r\n            <div className=\"d-flex align-items-center flex-nowrap \">\r\n                <h5 className=\"feed_title m-0 text-nowrap overflow-hidden\" id=\"exampleModalLongTitle\">Pick a source</h5>\r\n            </div>\r\n            {window.location.pathname?.includes('/content/moderation/') ?\r\n                <div className=\"d-flex align-items-center justify-content-end close_btn\" >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                        <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#545454\">\r\n                            <rect x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\"></rect>\r\n                            <rect transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000) \" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\"></rect>\r\n                        </g>\r\n                    </svg>\r\n                </div> :\r\n                <div className=\"d-flex align-items-center justify-content-end close_btn\">\r\n                    <Link to={`/content/moderation/${wallId}`}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                            <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#545454\">\r\n                                <rect x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\"></rect>\r\n                                <rect transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000) \" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\"></rect>\r\n                            </g>\r\n                        </svg>\r\n                    </Link>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GET_ADD_FEED } from '../../../../actions/moderationActions';\r\nimport { CLOUDPATH } from '../../../../actions/api';\r\nimport Header from './Header';\r\nimport { SNAPUP_DETAILS_ACTION } from '../../../../actions/addFeedActions';\r\n\r\nconst AddFeed = () => {\r\n    const { wallId } = useParams();\r\n    const dispatch = useDispatch()\r\n    const networks = useSelector(state => state.addFeedReducer.addFeedNetworks)\r\n\r\n    useEffect(() => {\r\n        dispatch(GET_ADD_FEED())\r\n        dispatch(SNAPUP_DETAILS_ACTION())\r\n    }, [])\r\n\r\n    const renderNetworkBlocks = (network) => {\r\n        const isSpecialNetwork = network.networkId === 33;\r\n        const imagePath = isSpecialNetwork ? 'creators-collab' : network.networkCode;\r\n        const linkProps = isSpecialNetwork ? { to: \"/creators\" } : { to: `/content/addfeed/${wallId}/${network.networkId}` };\r\n    \r\n        return (\r\n            <li className={network.networkCode} key={network.networkId}>\r\n                <Link {...linkProps} className=\"popUp resetAction\">\r\n                    <img src={`${CLOUDPATH}taggshop/app/assets/media/square-icons/${imagePath}.svg?ver=1`} alt={network.networkName} className=\"img-fluid\" />\r\n                    <span>{network.networkName}</span>\r\n                    {isSpecialNetwork && <span className=\"newBadge_addfeed\">NEW</span>}\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-feed-modal\" id=\"createFeedOption\">\r\n            <div className=\"add-feed-modal-inner\">\r\n                <Header />\r\n                <div className=\"add-feed-modal-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"small_container\">\r\n                            <div className=\"justify-content-center align-items-center p-5\">\r\n                                <div className=\"my-5 text-center\">\r\n                                    <div className=\"text-center add_feed_head\">\r\n                                        <h3 className=\"font-weight-bold text-dark network_title_wt\">Choose Source Network</h3>\r\n                                        <p className='network_subtext_wt mb-0'>Select the social platform from which you want to add the feeds</p>\r\n                                    </div>\r\n                                    <form action=\"https://app.taggbox.com/widget/wall/create/4028//\" method=\"post\" className=\"\" id=\"wallCreatePopUp\" target=\"_blank\">\r\n                                        <ul className=\"networks\">\r\n                                            {networks && networks.map(network => renderNetworkBlocks(network))}\r\n                                        </ul>\r\n\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFeed","import React, { Component, lazy, useEffect, Suspense } from \"react\";\r\nimport { Routes, Route, useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// *-------actions------------------\r\nimport { BIGCOMMERCE_LOAD_LOGIN, loginWithBigcommerce, loginWithShopify_guest, logOutAccount } from '../../actions/loginActions';\r\nimport { SHOPIFY_PRODUCT_SYNC } from '../../actions/productAction';\r\nimport { getAllNotification } from '../../actions/notificationAction';\r\nimport { HOST_URL } from '../../actions/api';\r\nimport { togglePriceSection } from '../../actions/show_modal_Action';\r\nimport { COMPLETE_SHOPIFY_SUBSCRIPTION } from '../../actions/planDetail';\r\n\r\n\r\nimport \"../components/emailCampaign/emailCampaign.css\"\r\n// *------components-------------\r\nimport ErrorFound from '../ErrorFound';\r\nimport LoadingScreen from '../pages/LoadingScreen';\r\nimport AddFeed from \"../components/content/addFeed\";\r\nconst AddFeedNetwork = React.lazy(() => import(\"../components/content/addFeed/createFeed\"));\r\nconst DashboardPage = React.lazy(() => import(\"../pages/DashboardPage\"));\r\nconst AccountsPage = React.lazy(() => import(\"../pages/AccountsPage\"));\r\nconst ModerationPage = React.lazy(() => import(\"../pages/ModerationPage\"));\r\nconst Authorization = React.lazy(() => import('../../utils/Authorization'));\r\nconst GoogleConnect = React.lazy(() => import('../components/content/moderation/components/feeds/googlereviews/googleConnect'));\r\nconst PageHead = React.lazy(() => import('./head'));\r\nconst Profile = React.lazy(() => import('../components/Profile/Profile'));\r\nconst Notification = React.lazy(() => import('../components/Notification/Notification'));\r\nconst PricePage = React.lazy(() => import('../components/plans'));\r\nconst Productpage = React.lazy(() => import('../pages/productpage'));\r\nconst PlanExpire = React.lazy(() => import('../components/plans/planExpire'));\r\nconst WallLimitExceed = React.lazy(() => import('../components/wallLimitExceed'));\r\nconst Success = React.lazy(() => import('../components/afterPayment/success'));\r\nconst StripeCallback = React.lazy(() => import('../components/afterPayment/StripeCallback'));\r\nconst AnalyticNew = React.lazy(() => import(\"../components/analytics-new\"));\r\nconst Publish = React.lazy(() => import('../components/shopify/index'));\r\nconst UgcScreen = React.lazy(() => import('../components/UGC_Request/UgcScreen'));\r\nconst UgcFallback = React.lazy(() => import('../components/UGC_Request/UgcFallback'));\r\n// const AddFeed = React.lazy(() => import('../components/content/moderation/components/feeds/allFeeds'));\r\nconst ManageFeed = React.lazy(() => import('../components/content/moderation/components/managefeeds'));\r\nconst AppsMore = React.lazy(() => import('../components/content/appsMore'));\r\nconst EmailCampaign = React.lazy(() => import('../components/emailCampaign'));\r\nconst LinkinBio = React.lazy(() => import('../components/shopOnBio'));\r\nconst Website = React.lazy(() => import('../components/website/index'));\r\nconst Influencer = React.lazy(() => import('../components/influencer'));\r\nconst ShopifyPaymentSuccess = React.lazy(() => import('../components/afterPayment/shopifyPayment_success'));\r\nconst PlanLimitExceed = React.lazy(() => import('./PlanLImitExceed'));\r\nconst ShareAccount = React.lazy(() => import('../components/shareAccount'));\r\n\r\n\r\nconst CollabratorConfirmAccount = () => {\r\n  useEffect(() => {\r\n    logOutAccount()\r\n    return () => { logOutAccount() }\r\n  }, [])\r\n  return <></>\r\n}\r\n\r\nconst SyncProductShopify = () => {\r\n  const navigate = useNavigate()\r\n  const params = useParams();\r\n  const fromOnboarding = JSON.parse(localStorage.getItem(\"onboarding\"))\r\n  useEffect(() => {\r\n    if (params.storeId) {\r\n      if (fromOnboarding) { SHOPIFY_PRODUCT_SYNC(params.storeId, () => navigate(`/content/moderation/${localStorage.getItem(\"wallId\")}?ob_success=true`)); localStorage.removeItem(\"onboarding\") }\r\n      else SHOPIFY_PRODUCT_SYNC(params.storeId, () => navigate(`/content/products`))\r\n    }\r\n    else navigate(`/content/products`)\r\n  }, [])\r\n\r\n  return <LoadingScreen />\r\n}\r\nconst SyncProducts = () => {\r\n  const navigate = useNavigate()\r\n  useEffect(() => { navigate(`/content/products`) }, [])\r\n\r\n  return <LoadingScreen />\r\n}\r\n\r\n\r\nconst AutoLogin = () => {\r\n  const params = useParams();\r\n  const isAdmin = window.location.href.includes('admin')\r\n  if (isAdmin) localStorage.setItem(\"isAdmin\", 1)\r\n  else localStorage.setItem(\"isAdmin\", 0)\r\n  if (params.token) {\r\n    localStorage.setItem(\"token\", atob(params.token))\r\n    window.location.href = `${HOST_URL}walls/home`\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nconst ShopifyLogin = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate()\r\n  const code = new URLSearchParams(location.search).get(\"code\");\r\n  const hmac = new URLSearchParams(location.search).get(\"hmac\");\r\n  const host = new URLSearchParams(location.search).get(\"host\");\r\n  const shop = new URLSearchParams(location.search).get(\"shop\");\r\n  const timestamp = new URLSearchParams(location.search).get(\"timestamp\");\r\n  useEffect(() => {\r\n    loginWithShopify_guest({ code, hmac, host, shop, timestamp: parseInt(timestamp), guestUseShopify: 'guest' }, navigate);\r\n  }, []);\r\n  return <></>;\r\n}\r\n\r\nconst LoadHomePage = () => {\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    navigate('/walls/home')\r\n  }, [])\r\n\r\n  return <></>\r\n}\r\n\r\nconst ShopifyInstall = () => {\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n  }, [])\r\n\r\n  return <></>\r\n\r\n}\r\n\r\n\r\nconst UserLogout = () => {\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    localStorage.clear()\r\n    navigate('/accounts/login')\r\n  }, [])\r\n  return <></>\r\n}\r\nconst HomeRedirect = () => {\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    navigate('/walls/home')\r\n  }, [])\r\n  return <></>\r\n}\r\n\r\nconst BigCommerceAuth = ({ history }) => {\r\n  localStorage.clear()\r\n  const location = useLocation();\r\n  const code = new URLSearchParams(location.search).get(\"code\");\r\n  const account_uuid = new URLSearchParams(location.search).get(\"account_uuid\");\r\n  const context = new URLSearchParams(location.search).get(\"context\");\r\n  const scope = new URLSearchParams(location.search).get(\"scope\");\r\n\r\n  useEffect(() => {\r\n    loginWithBigcommerce({ code, account_uuid, context, scope }, history);\r\n  }, []);\r\n\r\n  return <LoadingScreen />\r\n}\r\n\r\nconst BigCommercLogin = () => {\r\n  localStorage.clear()\r\n  const location = useLocation()\r\n  const signed_payload = new URLSearchParams(location.search).get(\"signed_payload\")\r\n  const signed_payload_jwt = new URLSearchParams(location.search).get(\"signed_payload_jwt\")\r\n  useEffect(() => {\r\n    BIGCOMMERCE_LOAD_LOGIN({ signed_payload, signed_payload_jwt })\r\n  }, [])\r\n  return <LoadingScreen />\r\n}\r\n\r\n\r\n\r\nconst ShopifySuccess = () => {\r\n  const location = useLocation();\r\n  const channel = new BroadcastChannel('connect');\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const chargeId = queryParams.get('charge_id');\r\n\r\n  useEffect(() => {\r\n    var obj = { \"charge_id\": chargeId, \"appSubscriptionId\": localStorage.getItem('appSubscriptionId') }\r\n    COMPLETE_SHOPIFY_SUBSCRIPTION(obj).then((response) => {\r\n      const { responseData, status } = response.data\r\n      if (status) {\r\n        channel.postMessage(JSON.stringify(responseData))\r\n        setTimeout(() => {\r\n          window.close();\r\n        }, 500);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(\"err\", err)\r\n    })\r\n  }, [])\r\n\r\n\r\n  return <LoadingScreen />\r\n}\r\n\r\n\r\nexport default function Navigation(props) {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const wallLimitExceed = JSON.parse(localStorage.getItem('wallLimitExceed'))\r\n  const accountExpire = JSON.parse(localStorage.getItem('accountExpire'))\r\n  var userDetail = props.authorized && props.authorized.userData && props.authorized.userData.user_data ? props.authorized.userData.user_data : '';\r\n  const { planLimitExceed } = useSelector(state => state.authorized)\r\n  useEffect(() => {\r\n    if (window.location.pathname === '/v2') navigate('/walls/home')\r\n    dispatch(getAllNotification({ type: \"latest\", synced: 0, created: \"\", page: 0, perPage: 10 }, true));\r\n  }, [dispatch, navigate])\r\n\r\n  useEffect(() => {\r\n    dispatch(togglePriceSection(false, 2))\r\n  }, [dispatch, location])\r\n\r\n  const renderRoutes = () => {\r\n    if (!wallLimitExceed) {\r\n      if (!accountExpire) {\r\n        return (\r\n          <>\r\n            <Route exact path=\"/walls/authcallback\" element={<Authorization />} />\r\n            <Route exact path=\"/feeds/authCallback\" element={<Authorization />} />\r\n            <Route exact path=\"/walls/home\" element={<DashboardPage />} />\r\n            <Route exact path=\"/init/index/:id\" element={<DashboardPage />} />\r\n            <Route exact path=\"/\" element={<LoadHomePage />} />\r\n            <Route exact path=\"*\" element={<LoadHomePage />} />\r\n            <Route exact path=\"/transactions\" element={<AccountsPage />} />\r\n            <Route exact path=\"/accounts/verifyemail/:id\" element={<HomeRedirect />} />\r\n            <Route exact path=\"/feeds/google/connect\" element={<GoogleConnect />} />\r\n            <Route exact path=\"/profile\" element={<Profile />} />\r\n            <Route exact path=\"/notifications\" element={<Notification />} />\r\n            <Route exact path=\"/shoppable/products/:id\" element={<Productpage />} />\r\n            <Route exact path=\"/shopify/index/:id\" element={<Publish />} />\r\n            <Route exact path=\"/shopify/syncProducts/:storeId\" element={<SyncProductShopify />} />\r\n            <Route exact path=\"/shopify/syncProducts\" element={<SyncProducts />} />\r\n            <Route path=\"/Shopify/token\" element={<ShopifyLogin />} />\r\n            <Route exact path=\"/creators\" element={<Influencer />} />\r\n            <Route exact path=\"*\" element={<LoadHomePage />} />\r\n\r\n            {/* <Route exact path=\"/shopify/syncProducts\" element={<SyncProduct />} /> */}\r\n\r\n            {/* ==============---new Design Route ---==================== */}\r\n            <Route exact path=\"/content/moderation/:id\" element={<ErrorFound><ModerationPage userDetail={userDetail} /></ErrorFound>} />\r\n            <Route exact path=\"/content/moderation/:id/feed/:feedId\" element={<ErrorFound><ModerationPage userDetail={userDetail} /></ErrorFound>} />\r\n            <Route exact path=\"/content/moderation/:wallID/feed/:feedId/status/:statusId/notificationId/:notificationId\" element={<ErrorFound><ModerationPage userDetail={userDetail} /></ErrorFound>} />\r\n            <Route path=\"/content/addfeed/:wallId\">\r\n              <Route path=\"\" element={<ErrorFound><AddFeed /></ErrorFound>} />\r\n              <Route path=\":networkId\" element={<ErrorFound><AddFeedNetwork /></ErrorFound>} />\r\n            </Route>\r\n            <Route exact path=\"/content/managefeed/:id\" element={<ErrorFound><ManageFeed /></ErrorFound>} />\r\n            <Route exact path=\"/content/products\" element={<ErrorFound><Productpage /></ErrorFound>} />\r\n            <Route exact path=\"/content/apps&more\" element={<ErrorFound><AppsMore customization={false} /></ErrorFound>} />\r\n            <Route exact path=\"/website/publish/:id\" element={<ErrorFound><Website /></ErrorFound>} />\r\n            <Route exact path=\"/website/publish\" element={<ErrorFound><Website /></ErrorFound>} />\r\n            <Route exact path=\"/website/shopify/:id\" element={<ErrorFound><Website /></ErrorFound>} />\r\n            <Route exact path=\"/website/shopify\" element={<ErrorFound><Website /></ErrorFound>} />\r\n            <Route exact path=\"/website/bigcommerce/:id\" element={<ErrorFound><Website /></ErrorFound>} />\r\n            <Route exact path=\"/emailCampaign/publish/:id\" element={<ErrorFound><EmailCampaign /> </ErrorFound>} />\r\n            <Route exact path=\"/emailCampaign/publish/\" element={<ErrorFound><EmailCampaign /> </ErrorFound>} />\r\n            <Route exact path=\"/shoponBio/preview/:id\" element={<ErrorFound><LinkinBio /> </ErrorFound>} />\r\n            <Route exact path=\"/shoponBio/preview/\" element={<ErrorFound><LinkinBio /> </ErrorFound>} />\r\n            <Route exact path=\"/wall/extrawallfeeds\" element={<HomeRedirect />} />\r\n            <Route exact path=\"/analytic/:wallID\" element={<ErrorFound><AnalyticNew /></ErrorFound>} />\r\n          </>\r\n        )\r\n      } else {\r\n        return <Route exact path=\"*\" element={<PlanExpire />} />\r\n      }\r\n    } else {\r\n      return (\r\n        <>\r\n          <Route exact path=\"/wall/extrawallfeeds\" element={<WallLimitExceed />} />\r\n          <Route exact path=\"*\" element={<WallLimitExceed />} />\r\n          <Route exact path=\"/transactions\" element={<AccountsPage />} />\r\n          <Route exact path=\"/profile\" element={<Profile />} />\r\n          <Route exact path=\"/notifications\" element={<Notification />} />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={null}>\r\n        <PageHead />\r\n        <PricePage />\r\n        {planLimitExceed && !window.location.pathname.includes(\"/thankYou\") && !window.location.pathname.includes(\"/paymentPaidCallback\") ? <PlanLimitExceed /> : <></>}\r\n        <Routes>\r\n          {renderRoutes()}\r\n          <Route exact path=\"/accounts/expire\" element={<PlanExpire />} />\r\n          <Route exact path=\"/accounts/paymentPaidCallback\" element={<StripeCallback />} />\r\n          <Route exact path=\"/accounts/thankYou\" element={<Success />} />\r\n          <Route exact path=\"/accounts/shopify/thankYou\" element={<ShopifyPaymentSuccess dispatch={dispatch} />} />\r\n          <Route exact path=\"/accounts/confirmaccount/:passScreen/:userId/:wallId\" element={<CollabratorConfirmAccount />} />\r\n          <Route exact path=\"/accounts/userdelete/:userId/:wallId\" element={<CollabratorConfirmAccount />} />\r\n          <Route exact path=\"/redirectlogin/:token\" element={<AutoLogin />} />\r\n          <Route exact path=\"/redirectlogin/:token/:isAdmin\" element={<AutoLogin />} />\r\n          <Route exact path=\"/ugc_right/:id\" element={<UgcScreen />} />\r\n          <Route exact path=\"/ugc_right/authCallback\" element={<UgcFallback />} />\r\n          <Route exact path=\"/logout\" element={<UserLogout />} />\r\n          <Route exact path=\"/accounts/register\" element={<HomeRedirect />} />\r\n          <Route exact path=\"/accounts/shopifypaymentcomplete\" element={<ShopifySuccess />} />\r\n          <Route path=\"/Shopify/install\" element={<ShopifyInstall />} />\r\n          <Route exact path=\"/connection/:id\" element={<ShareAccount />} />\r\n          <Route path=\"/bigcommerce/load\" element={<BigCommercLogin />} />\r\n          <Route path=\"/bigcommerce/oauth\" element={<BigCommerceAuth history={navigate} />} />\r\n\r\n          <Route path=\"/Shopify/install\" element={<ShopifyInstall />} />\r\n\r\n\r\n        </Routes></Suspense>\r\n\r\n    </>\r\n  )\r\n}\r\n"],"names":["getAllNotification","postbody","isLatestNotification","async","TOAST_LOADING","HttpClient","post","GET_ALL_NOTIFICATION_API","then","response","TOAST_DISMISS","responseData","response_code","data","notifications","notificationsCount","dispatch","type","GET_LATEST_NOTIFICATION","payload","GET_ALL_NOTIFICATION","catch","ex","deleteNotification","id","delete","concat","DELETE_NOTIFICATION_API","response_message","DELETE_NOTIFICATION","TOAST_SUCCESS","PLAN__DETAILS","get","PRODUCT_PLAN_DETAIL","PLAN_PRICES_DETAILS","UPDATE_PLAN__DETAILS","planId","PRODUCT_PLAN_UPDATE","UPDATE_EC_FREE_PLAN","ENABLE_EC_FREE_PLAN","GET_SHOPIFY_SUBSCRIPTION_LINK","obj","SHOPIFY_GET_SUBSCRIPTIONS_LINK","COMPLETE_SHOPIFY_SUBSCRIPTION","SHOPIFY_SUBSCRIPTIONS_COMPLETED","STRIPE_CHECKOUT","CHECK_STRIPE_SESSION","GET_PAYMENT_RESPONSE","history","SUCCESS_STRIPE_CALL","response_data","DISPATCH_STRIPE_CALL","err","Header","_window$location$path","wallId","useParams","_jsxs","className","children","_jsx","window","location","pathname","includes","xmlns","xlink","width","height","viewBox","version","transform","fill","x","y","rx","Link","to","AddFeed","useDispatch","networks","useSelector","state","addFeedReducer","addFeedNetworks","useEffect","GET_ADD_FEED","SNAPUP_DETAILS_ACTION","action","method","target","map","network","isSpecialNetwork","networkId","imagePath","networkCode","linkProps","src","CLOUDPATH","alt","networkName","renderNetworkBlocks","AddFeedNetwork","React","DashboardPage","AccountsPage","ModerationPage","Authorization","GoogleConnect","PageHead","Profile","Notification","PricePage","Productpage","PlanExpire","WallLimitExceed","Success","StripeCallback","AnalyticNew","Publish","UgcScreen","UgcFallback","ManageFeed","AppsMore","EmailCampaign","LinkinBio","Website","Influencer","ShopifyPaymentSuccess","PlanLimitExceed","ShareAccount","CollabratorConfirmAccount","logOutAccount","_Fragment","SyncProductShopify","navigate","useNavigate","params","fromOnboarding","JSON","parse","localStorage","getItem","storeId","SHOPIFY_PRODUCT_SYNC","removeItem","LoadingScreen","SyncProducts","AutoLogin","href","setItem","token","atob","HOST_URL","ShopifyLogin","useLocation","code","URLSearchParams","search","hmac","host","shop","timestamp","loginWithShopify_guest","parseInt","guestUseShopify","LoadHomePage","ShopifyInstall","clear","UserLogout","HomeRedirect","BigCommerceAuth","_ref","account_uuid","context","scope","loginWithBigcommerce","BigCommercLogin","signed_payload","signed_payload_jwt","BIGCOMMERCE_LOAD_LOGIN","ShopifySuccess","channel","BroadcastChannel","chargeId","status","postMessage","stringify","setTimeout","close","console","log","Navigation","props","wallLimitExceed","accountExpire","userDetail","authorized","userData","user_data","planLimitExceed","synced","created","page","perPage","togglePriceSection","Suspense","fallback","Routes","Route","exact","path","element","ErrorFound","customization"],"sourceRoot":""}