{"version":3,"file":"static/js/9391.3020b96f.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Rating.js","app/Layout/Main/Moderation/Header/Elements/QuickSearch.js","app/Layout/Main/Moderation/Header/Elements/dateRange/dateRange.js","app/Layout/Main/Moderation/Header/Elements/dateRange/index.js","app/Layout/Main/Moderation/Header/Elements/index.js","app/Layout/Main/Moderation/Elements/Pagination.js","app/Layout/Main/Moderation/UgcRights/Elements/ErrorModal.js","app/Layout/Main/Moderation/UgcRights/Elements/PermissionError.js","app/Layout/Main/Moderation/Header/Elements/ModSubHeader.js","app/Layout/Main/Moderation/Header/index.js","app/Layout/Main/Moderation/Filters/postTagSearch.js","app/Layout/Main/Moderation/Filters/index.js","app/Layout/Main/Moderation/Filters/filterTab.js","app/Layout/Main/Moderation/UgcRights/Elements/CardPreview.js","app/Layout/Main/Moderation/UgcRights/Elements/CopyUrl.js","actions/tinyUrlAction.js","app/Layout/Main/Moderation/UgcRights/Elements/CreateTemplate.js","app/Layout/Main/Moderation/UgcRights/Elements/GeneralRequest.js","app/Layout/Main/Moderation/UgcRights/Elements/SocialAccounts.js","app/Layout/Main/Moderation/UgcRights/Elements/ChooseMethod.js","app/Layout/Main/Moderation/UgcRights/index.js","app/Layout/Main/Moderation/UgcRights/Status/ApprovedModal.js","app/Layout/Main/Moderation/UgcRights/Status/RadialChart.js","app/Layout/Main/Moderation/UgcRights/Status/PendingModal.js","app/Layout/Main/Moderation/UgcRights/Status/RejectModal.js","app/Layout/Main/Moderation/UgcRights/Status/index.js","app/Layout/Main/Moderation/Elements/Skeleton.js","app/Layout/Main/Moderation/Elements/TagedProducts.js","app/Layout/Main/Moderation/Elements/Tags.js","app/Layout/Main/Moderation/Elements/ChangeOrderModal.js","app/Layout/Main/Moderation/ContentModal/EditElements/EditAside.js","app/Layout/Main/CommonComponents/MediaType/TextType.js","app/Layout/Main/Moderation/ContentModal/Elements/ModalMedia.js","app/Layout/Main/Moderation/ContentModal/EditElements/index.js","app/Layout/Main/Moderation/ContentModal/Elements/Hotspot.js","app/Layout/Main/Moderation/ContentModal/CarousalPost.js","app/Layout/Main/Moderation/ContentModal/ContentModal.js","app/Layout/Main/Moderation/Elements/RefreshPost.js","app/Layout/Main/Moderation/MasonryView.js","app/Layout/Main/Moderation/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '../../../../Assets/AssetsHelper';\r\nimport { generateRandomArray } from '../../../../utils';\r\n\r\n\r\nconst Rating = ({ rating, className, iconClass }) => {\r\n       return rating ? \r\n              <div className={`f-center ${className}`}>\r\n                     {generateRandomArray(5).map((rate, index) => <span className={`${rate > rating? 'text-gray-300' : 'text-warning'} ${iconClass}`} key={index}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'star'}/>\r\n                            </span>)\r\n                     }\r\n              </div> \r\n       : null\r\n}\r\nexport default Rating\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions'\r\nimport { Button, InputGroup, Form, Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\n\r\n\r\nclass QuickSearch extends Component {\r\n    state = { tagSearchList: [], searchPost: \"\", selected: \"\", openSearch: false }\r\n\r\n    onLoad = () => {\r\n        const { searchPost } = this.state;\r\n        if (searchPost.length > 0) {\r\n            autoCompleteSearch(searchPost).then((response) => {\r\n                const { responseData, totalTag, responseCode } = response.data;\r\n                if (responseCode === 200) this.setState({ tagSearchList: responseData?.totalTag })\r\n                else this.setState({ tagSearchList: [] })\r\n            })\r\n        }\r\n        else { this.setState({ tagSearchList: [] }) }\r\n    }\r\n\r\n    onSearchText = (text) => this.setState({ searchPost: text }, () => this.onLoad())\r\n\r\n\r\n    onClickToSearchTags = (selectSearch) => event => {\r\n        this.setState({ searchPost: selectSearch, selected: selectSearch, tagSearchList: [] }, () => this.props.searchTagsFilter(this.state.selected))\r\n    }\r\n\r\n    onClickToSearchPost = (selectSearch) => event => {\r\n        if (selectSearch && String(selectSearch).length > 0) this.setState({ searchPost: '', selected: selectSearch, tagSearchList: [] }, () => this.props.searchPostFilter(selectSearch))\r\n    }\r\n\r\n    render() {\r\n        const { tagSearchList, openSearch, searchPost } = this.state;\r\n        return <>\r\n            <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => this.setState({ openSearch: !openSearch })}>\r\n                <FontAwesomeIcon icon={openSearch ? 'xmark' : 'magnifying-glass'} />\r\n            </Button>\r\n            <Dropdown show={tagSearchList && tagSearchList.length > 0 ? true : false} className=\"assets_search_input position-absolute me-lg-2\" style={{ display: openSearch ? 'block' : 'none' }}>\r\n                <div className=\"quick_search d-flex align-items-center\">\r\n                    <InputGroup id=\"inputSpinner\" className=\"p-0 spinner-gray spinner-sm\">\r\n                        {openSearch && <Form.Control size='sm' style={{ minHeight: '32px' }} className='' id=\"assets_search_input\" placeholder=\"What are you looking for?\" value={searchPost} onChange={(e) => this.onSearchText(e.target.value)} autoComplete='off' />}\r\n                        <Button className='' size='sm' id=\"inputCloseButton\" variant=\"primary\" onClick={this.onClickToSearchPost(searchPost)}>\r\n                            <FontAwesomeIcon icon=\"magnifying-glass\" />\r\n                        </Button>\r\n                    </InputGroup>\r\n                    {(tagSearchList && tagSearchList.length > 0) ? <Dropdown.Menu className=\"w-100 dropdwon-height top-100\" style={{ overflowY: 'auto' }}>\r\n                        {\r\n                            tagSearchList.map((item) => <Dropdown.Item key={item} onClick={this.onClickToSearchTags(item)}>{item}</Dropdown.Item>)\r\n                        }\r\n                    </Dropdown.Menu> : null}\r\n                </div>\r\n            </Dropdown>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default QuickSearch;","import React, { useState } from \"react\";\r\nimport moment from 'moment'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\n\r\nconst DateRange = (props) => {\r\n    const { children, maxDate, handleOnApply, startDate, endDate } = props\r\n    return <DateRangePicker onApply={handleOnApply} startDate={startDate} endDate={endDate} initialSettings={{\r\n        locale: { format: 'DD-MM-YYYY', separator: '-' },\r\n        maxDate: maxDate,\r\n        showDropdowns: false,\r\n        startDate: startDate, endDate: endDate,\r\n        ranges: {\r\n            Today: [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\")],\r\n            Yesterday: [\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 7 Days': [\r\n                moment().subtract(6, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 30 Days': [\r\n                moment().subtract(29, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'This Month': [\r\n                moment().startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last Month': [\r\n                moment().subtract(1, 'month').startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'month').endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n        },\r\n    }}\r\n    // onCallback={handleCallback}\r\n    >\r\n        {\r\n            children\r\n        }\r\n    </DateRangePicker>\r\n\r\n}\r\nexport default DateRange","import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment'\r\nimport DateRanges from './dateRange'\r\nclass DateRange extends Component {\r\n    state = {\r\n        startDate: moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n        endDate: moment().format(\"DD-MM-YYYY\"),\r\n        maxDate: moment().endOf('month').format(\"DD-MM-YYYY\")\r\n    }\r\n    handleOnApply = (event, picker) => {\r\n        this.setState({ startDate: picker.startDate.format(\"YYYY-MM-DD\"), endDate: picker.endDate.format(\"YYYY-MM-DD\") })\r\n        this.props.onDateRangeFilter(picker.startDate.format(\"YYYY-MM-DD\"), picker.endDate.format(\"YYYY-MM-DD\"))\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { moderation } = nextProps\r\n        if (moderation && Object.keys(moderation.filter).length > 0 && moderation.filter.startDate != \"\") {\r\n            this.setState({ startDate: moment(moderation.filter.startDate).format(\"DD-MM-YYYY\"), endDate: moment(moderation.filter.endDate).format(\"DD-MM-YYYY\") })\r\n        }\r\n        if (moderation.filterBody && moderation.filterBody.dateRanges && Object.keys(moderation.filterBody.dateRanges).length == 0 && this.state.startDate != moment().subtract(30, 'days').format(\"DD-MM-YYYY\")) {\r\n            this.setState({ startDate: moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), endDate: moment().format(\"DD-MM-YYYY\") })\r\n        }\r\n    }\r\n    render() {\r\n        const { children } = this.props;\r\n        const { startDate, endDate, maxDate } = this.state;\r\n        return <DateRanges children={children} startDate={startDate} endDate={endDate} maxDate={maxDate} handleOnApply={this.handleOnApply} key={uuidv4()} />\r\n    }\r\n}\r\n\r\nexport default DateRange\r\n","import React, { useEffect, useState } from 'react'\r\nimport QuickSearch from './QuickSearch'\r\nimport DateRange from './dateRange'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport withRouter from '../../../../../routes/WithRouter';\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOAST_ERROR } from '../../../../../../utils';\r\n\r\nconst Filters = (props) => {\r\n\r\n    const [isCarosal, setisCarosal] = useState()\r\n    const filters = useSelector((state) => state.moderation?.filter);\r\n\r\n    useEffect(() => {\r\n        const foundItem = props.allWalls?.length && props.allWalls.find(item => item.id == props.params.id);\r\n        setisCarosal(foundItem?.carouselPost || 0);\r\n    }, [props]);\r\n\r\n    const carousalError = () => {\r\n        TOAST_ERROR('To enable the Carousel feature, please remove the Product Filter first.')\r\n    }\r\n\r\n    return <div className=\"d-flex flex-wrap\">\r\n        {/* dashboardData */}\r\n        \r\n          <div style={{ marginRight : 15, display : 'flex', marginTop : 6 }}>\r\n             <span style={{ padding : '0px 7px'}}>\r\n               Carousal \r\n             </span>\r\n            <Form.Check type='switch' id=\"carousalStatus\" checked={isCarosal} onChange={(e) => filters.taggedPost ? carousalError() : props.postCarosal(Number(e.target.checked)) } />\r\n         </div>\r\n\r\n        <button onClick={() => checkPermission('networkManager', 'manageFeed') ? props.navigate(`/content/managefeed/${localStorage.getItem('wallId')}`) : {}} className=\"btn btn-outline-primary text-nowrap btn-sm me-2\">\r\n        <FontAwesomeIcon icon={'list-check'} iconClass={'d-inline d-lg-none me-0 me-sm-1'} />\r\n        <span className='d-none d-lg-inline'>Manage Feeds </span>\r\n        </button>\r\n        <QuickSearch {...props} />\r\n        <DateRange {...props}>\r\n            <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"calander_\">\r\n                <FontAwesomeIcon icon={'calendar-range'} />\r\n            </Button>\r\n        </DateRange>\r\n        <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"filter_aside\">\r\n            <FontAwesomeIcon icon={'filter'} />\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withRouter(Filters);","import React from 'react'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ModerationPagination = ({ moderation, onNextNavigateClick, onPrevNavigateClick , onChangePage}) => {\r\n    const { paginateData } = moderation;\r\n    if (!paginateData || !Object.keys(paginateData).length) return null;\r\n    \r\n    return <ul className=\"pagination pagination-sm my-1 ms-3\">\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == 1 ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == 1 ? null : onPrevNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-left'} />\r\n                </span>\r\n            </li>\r\n            {\r\n            (paginateData.pages && paginateData.pages.length > 0) ? paginateData.pages.map((item, pagesIndex) => {\r\n\r\n                return (parseInt(pagesIndex) < 1) ?\r\n                    <li key={`lIi${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li> :\r\n\r\n                    (((paginateData.currentPage <= 3) && (parseInt(pagesIndex) === 2 || parseInt(pagesIndex) === 1)) || (paginateData.currentPage >= parseInt(paginateData.pages.length) - 2 && (parseInt(pagesIndex) >= parseInt(paginateData.pages.length) - 3))) ?\r\n                    <>\r\n                        {pagesIndex === parseInt(paginateData.pages.length) - 3 && parseInt(paginateData.pages.length) > 4 ?\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>:\r\n                            null\r\n                        }\r\n                        <li key={`li${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                            <span className=\"page-link\">{item}</span>\r\n                        </li>\r\n                    </>\r\n                    :\r\n                    (parseInt(paginateData.pages.length) - 3 == pagesIndex) ?\r\n                    (paginateData.currentPage > 3 && paginateData.currentPage < paginateData.pages.length - 2) ?\r\n                        <>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className={`page-item active`} onClick={onChangePage(item)}>\r\n                                <span className=\"page-link\">{paginateData.currentPage}</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                        </>\r\n                        :\r\n                        <li key={`li${pagesIndex}`} className=\"page-item disabled\"> <span className=\"page-link\">...</span> </li>\r\n\r\n                    : (parseInt(paginateData.pages.length) - 1 == pagesIndex) ?\r\n                    <li key={`li${pagesIndex}`} className={`page-item ${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li>\r\n                    : null\r\n            }) : null}\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == paginateData.totalPages ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == paginateData.totalPages ? null : onNextNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-right'} />\r\n                </span>\r\n            </li>\r\n        </ul>\r\n}\r\nexport default ModerationPagination;\r\n","import { Modal, Image, Button } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nconst ErrorModal = ({ show, onHide }) => {\r\n  return <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-3\" src={baseUrl('media/images/error/ugc-request.png')} height={206} width={500} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n              To send UGC Rights request in bulk, make sure you choose posts from a single user.\r\n            </p>\r\n            <Button className=\"btn-min-w\" size=\"lg\" onClick={onHide}>OK</Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { Image, Modal } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PermissionError = ({show, onHide}) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-7\" src={baseUrl('media/images/error/warning.svg')} height={70} width={70} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n            You do not have access to UGC Rights as per your current plan. Please upgrade your plan to unlock this feature.\r\n            </p>\r\n            <Link className=\"btn-min-w mb-5 btn btn-lg btn-primary\" size=\"lg\" to={'/price'}>Upgrade Now</Link>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PermissionError;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport { GET_UGC_POST_DETAIL, ugcModal } from '../../../../../../actions/moderationActions'\r\nimport { Container, Tooltip, OverlayTrigger, Badge, Button, Form } from 'react-bootstrap'\r\nimport ModerationPagination from '../../Elements/Pagination'\r\nimport ErrorModal from '../../UgcRights/Elements/ErrorModal'\r\nimport PermissionError from '../../UgcRights/Elements/PermissionError'\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions'\r\n\r\n\r\nconst ModSubHeader = (props) => {\r\n    const [addStatus, setAddTag] = useState(false)\r\n    const categories = [{ label: \"50\", value: 50 }, { label: \"100\", value: 100 }, { label: \"200\", value: 200 }]\r\n    const [selectedEntry, selectedEntryFun] = useState([{ label: \"50\", value: 50 }])\r\n    const [permissionError, setPermissionError] = useState(false)\r\n    const [ugcError, setUgcError] = useState(false)\r\n    const [showGetRight, setShowGetRight] = useState(false)\r\n    const [fromSnapup, setFromSnapup] = useState(false)\r\n    const { moderation, activeTab } = props\r\n    const dispatch = useDispatch()\r\n    const updateLimit = event => { \r\n        props.limitUpdate(parseInt(event.value))\r\n        selectedEntryFun(event) \r\n    }\r\n    const refreshPost = () => { props.clickToRefresh(); } \r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            checkGetRight()\r\n        };\r\n    }, [moderation])\r\n\r\n\r\n    const getRights = () => {\r\n        const { check_uncheck_all } = moderation\r\n        let userId = null\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) {\r\n                setPermissionError(true)\r\n                flag = true\r\n            }\r\n            if (post.networkId == 29) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n            if (post.type == 1) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n\r\n            if (userId == null) userId = post.username\r\n            else if (userId != null && userId != post.username && !flag) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n        })\r\n        if (!flag) {\r\n            const id = check_uncheck_all.data.map(item => item.id)\r\n            dispatch(GET_UGC_POST_DETAIL({ is_carausel: 0, postId: id, id, }))\r\n            dispatch(ugcModal(true))\r\n        }\r\n    }\r\n\r\n    const checkGetRight = () => {\r\n        const { check_uncheck_all } = moderation\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) flag = true\r\n            if (post.networkId == 29) flag = true\r\n            if (post.type == 1) flag = true\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) flag = true\r\n        })\r\n        setShowGetRight(!flag)\r\n    }\r\n\r\n    return <Container fluid>\r\n            <div className=\"f-between py-1 mod_header\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Form.Check type=\"checkbox\" id=\"select_all_\" className='btn btn-secondary btn-sm px-2 me-2 text-nowrap my-1' label={`${moderation.check_uncheck_all.data.length ? moderation.check_uncheck_all.data.length +` Selected` : `Select All`}`} onChange={props.clickToCheckAll(moderation.check_uncheck_all.status)} checked={moderation.check_uncheck_all.status}/>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh</Tooltip>}>\r\n                        <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => refreshPost()}>\r\n                            <span className='d-inline-block'><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    {moderation.check_uncheck_all && moderation.check_uncheck_all.data.length > 0 ? \r\n                    <div className=\"d-flex align-items-center mx-lg-2 mod_actions flex-wrap\">\r\n                        {activeTab == 0 || activeTab == 2 ? <Button variant='success' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(1)}>\r\n                            <FontAwesomeIcon icon={'check'} iconClass='me-1'/>\r\n                            Public\r\n                        </Button>: null}\r\n                        {activeTab == 0 || activeTab == 1 ? <Button variant='danger' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(2)}>\r\n                            <FontAwesomeIcon icon={'xmark'} iconClass='me-1'/>\r\n                            Private\r\n                        </Button>: null}\r\n                        <Button variant='warning' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterDeleteAll}>\r\n                            <FontAwesomeIcon icon={'trash-can'} iconClass='me-1'/>\r\n                            Delete\r\n                        </Button>\r\n                        {/* {!(UserRuleManualTag || UserRuleEnableAI) ? <Button variant='primary' size=\"sm\" className=\"me-2\" onClick={() => addTag()}>\r\n                            <FontAwesomeIcon type=\"solid\" icon={'tag'} iconClass='me-1'/>\r\n                            Add Tag\r\n                        </Button>:null} */}\r\n                        {showGetRight ? <Button variant='dark' size=\"sm\" className=\"me-2 my-1\" onClick={() => checkPermission('contentGallery', 'editGallery', true) ? getRights() : {}}>\r\n                            <FontAwesomeIcon icon={'user-check'} iconClass='me-1'/>\r\n                            Get Rights\r\n                        </Button>:null}\r\n                    </div>\r\n                    \r\n                    :null}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Select className={`selectpicker selectpicker-sm d-none d-lg-flex`} classNamePrefix=\"selectpicker\" isSearchable={false} options={categories} value={selectedEntry} onChange={e => updateLimit(e)} /> \r\n                    <ModerationPagination {...props} />\r\n                </div>\r\n            </div>\r\n        <PermissionError show={permissionError} fromSnapup={fromSnapup} onHide={() => setPermissionError(false)} />\r\n        <ErrorModal show={ugcError} onHide={() => setUgcError(false)} />\r\n    </Container>\r\n\r\n}\r\nexport default ModSubHeader;","import { Nav, Badge, Container, Dropdown, NavDropdown } from 'react-bootstrap'\r\nimport Filters from './Elements'\r\nimport ModSubHeader from './Elements/ModSubHeader'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ModHeader = (props) => {\r\n    const isLoaded = props.moderation.details && Object.keys(props.moderation.details).length > 0 ? true : false\r\n    var {activeTab, totalpost, publicpost, privatepost , tabName, TabTotal } = 0\r\n    var upcomingpost = []\r\n    if(isLoaded){\r\n        activeTab = props.activeTab\r\n        totalpost = props.moderation.details.totalpost\r\n        publicpost = props.moderation.details.publicpost\r\n        privatepost = props.moderation.details.privatepost\r\n        upcomingpost = props.moderation.details.upcomingpost\r\n        tabName = activeTab == 0 ? \"All Posts\" : activeTab == 1 ? \"Public\" : activeTab == 2 ? \"Private\" : \"Upcoming\" \r\n        TabTotal = activeTab == 0 ? totalpost : activeTab == 1 ? publicpost : activeTab == 2 ? privatepost : upcomingpost \r\n    }\r\n\r\n    return <div className=\"dualheader subheader\">\r\n                 <Container className=\"f-between flex-wrap border-bottom\" fluid>\r\n                    <div className=\"d-flex align-items-center flex-wrap h-48px\">\r\n                        <Nav variant=\"underline\" className='d-none d-lg-flex'>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==0 ? 'active' :''} eventKey=\"allPost\" onClick={isLoaded ? props.clickToTab(0) : null} disabled={!isLoaded}>\r\n                                    All Posts\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 0 ? \"badge-primary\":\"badge-light-primary\"}`}>{totalpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==1 ? 'active' :''} eventKey=\"public\" onClick={isLoaded ? props.clickToTab(1) : null} disabled={!isLoaded}>\r\n                                    Public\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 1 ? \"badge-primary\":\"badge-light-primary\"}`}>{publicpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==2 ? 'active' :''} eventKey=\"private\" onClick={isLoaded ? props.clickToTab(2) : null} disabled={!isLoaded}>\r\n                                    Private\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 2 ? \"badge-primary\":\"badge-light-primary\"}`}>{privatepost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            {upcomingpost && upcomingpost > 0 ? <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==3 ? 'active' :''} eventKey=\"upcomming\">\r\n                                    Upcoming\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 3 ? \"badge-primary\":\"badge-light-primary\"}`}>{upcomingpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>:null}\r\n                        </Nav>\r\n                        <Dropdown className='d-flex d-lg-none'>\r\n                            <Dropdown.Toggle variant=\"secondary\" size='sm' id=\"mod-tab\">\r\n                            {tabName} <Badge bg=\"\" className={\"m-0 py-1 badge-light-primary mx-1\"}>{TabTotal}</Badge>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <NavDropdown.Item eventKey=\"1\" onClick={isLoaded ? props.clickToTab(0) : null} >All Posts <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{totalpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"2\" onClick={isLoaded ? props.clickToTab(1) : null} >Public <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{publicpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"3\" onClick={isLoaded ? props.clickToTab(2) : null}>Private <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{privatepost}</Badge> </NavDropdown.Item>\r\n                                {upcomingpost && upcomingpost > 0 ? <NavDropdown.Item eventKey=\"4\" onClick={isLoaded ? props.clickToTab(3) : null} >Upcoming <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{upcomingpost}</Badge> </NavDropdown.Item>:null}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center flex-wrap flex-grow-1 justify-content-end\">\r\n                        <Filters {...props} />\r\n                    </div>\r\n                </Container>\r\n                <ModSubHeader {...props} />\r\n            </div>\r\n}\r\nexport default ModHeader;\r\n\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../actions/moderationActions'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { InputGroup, Form, Button, Dropdown, Badge } from 'react-bootstrap';\r\n\r\nclass PostTagSearch extends Component {\r\n    state = { searchData: [], searchPost: \"\", selected: [], loading: false, textSearch: \"\" }\r\n\r\n    onSearchText = (textInput) => {\r\n        this.setState({ loading: true, textSearch: textInput })\r\n        if (textInput?.length > 0) {\r\n            autoCompleteSearch(textInput).then((response) => {\r\n                const { responseData , responseCode } = response.data;\r\n                this.setState({ searchData: responseCode === 200 ? responseData?.totalTag :[], loading: false })\r\n            }); \r\n\r\n        } else {\r\n            this.setState({ searchData: [], loading: false, searchPost: '', textSearch: '' });\r\n        }\r\n    };\r\n\r\n    onClickToSearch = (selectSearch, status) => event => {\r\n        if (!status) {\r\n            const { selected } = this.state;\r\n            this.state.selected.push(selectSearch)\r\n            this.setState({ searchPost: selectSearch, selected: selected , textSearch:'', searchData: [] }, () => { this.props.updateFilterPostTags(this.state.searchPost) })\r\n        }\r\n        else {\r\n            this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n            this.props.removeFilterPostTags(selectSearch)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { filterBody } = nextProps\r\n        if (filterBody.postTags.length == 0 && this.state.searchData.length > 0) this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n    }\r\n\r\n    render() {\r\n        const { searchData, loading, textSearch } = this.state;\r\n        const { postTags } = this.props; \r\n        return <div className=\"form-group tag_search mb-5 mt-3 position-relative\">\r\n                <InputGroup id=\"searchTagElements\" className={`spinner-secondary spinner-right position-relarive w-100 mb-3`}>\r\n                    <Form.Control placeholder=\"Search\" className={loading ? `spinner` : `spinner`} value={textSearch} onChange={(e)=>this.onSearchText(e.target.value)} autocomplete=\"off\"/>\r\n                    <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={'magnifying-glass'}/>\r\n                    </InputGroup.Text>\r\n                </InputGroup>\r\n                {(searchData && (searchData.length > 0 || textSearch.length > 0)) &&\r\n                <Dropdown.Menu show={true} className=\"w-100 dropdwon-height\" style={{ overflowY: 'auto' }}>\r\n                    {searchData.map((sItem, index) => {\r\n                        const isChecked = postTags.includes(sItem) || false\r\n                        return <Dropdown.Item key={index} onClick={this.onClickToSearch(sItem, isChecked)}>{sItem}</Dropdown.Item>\r\n                    })}\r\n                </Dropdown.Menu>}\r\n                <div className=\"mb-3 mb-xl-4\">\r\n                    <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                    {postTags && postTags.map((item, index) => {\r\n                        return parseInt(index) < 9 ? <Badge key={index} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                    <span className=' text-ellipsis d-block'>{item}</span>\r\n                                    <Button variant='link' size='sm' className=\"p-0 ms-1 text-gray-800\" onClick={this.onClickToSearch(item, true)}>\r\n                                        <FontAwesomeIcon icon={'xmark'} iconClass={'me-0'}/>\r\n                                    </Button>\r\n                            </Badge>\r\n                    :null})}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default PostTagSearch;","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\n// import { generateSocialName } from '../../Feeds/utils'\r\nimport { generateRandomArray, GET_NETWORK_ICON, TOAST_ERROR } from '../../../../../utils';\r\nimport PostTagSearch from './postTagSearch'\r\nimport { updateFilterPostTags, updateFilterSocialFeeds, updateFilterPostType, updateFilterOthers, removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeAllFilterBody, aiFilter, removeAiFilter, sentimentFilter, removeSentimentFilter } from '../../../../../actions/moderationActions'\r\nimport { Accordion, Offcanvas, Button, Image, Form } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst PostTypeCheck = ({ value, onClickPostType, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.postType.length > 0 ? moderation.filterBody.postType.filter((fin) => fin == value) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickPostType(value, isChecked)} checked={isChecked} />\r\n}\r\n\r\nconst OtherInput = ({ value, onClickOther, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.other.length > 0 ? moderation.filterBody.other.filter((fin) => fin.key == id) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickOther(id, value, isChecked)} checked={isChecked}  />\r\n}\r\n\r\nconst AiCheck = ({ value, onClickAi, moderation, label, id }) => {\r\n    const isChecked = moderation.filterBody?.recommendation.includes(value)\r\n    const checklabel = <><span className={`d-inline-block h-10px w-10px rounded-circle me-2 bg-${value == '1' ?'success' : value == '2' ? 'warning' : 'danger'}`}></span>{label}</>\r\n    return <div className='f-center justify-content-start'> \r\n        <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={checklabel} id={id} onChange={onClickAi(value, isChecked)} checked={isChecked} />\r\n    </div>\r\n}\r\n\r\nconst SentimentCheck = ({ value, onClickSentiment, moderation, label, id }) => {\r\n    const isChecked = moderation.filterBody?.sentiment.includes(value);\r\n    const checklabel = <><FontAwesomeIcon icon={`face-${value == '1' ?'smile' : value == '2' ? 'meh' : 'frown'}`} iconClass=\"text-muted fs-8 d-inline-block me-1\" />{label}</>\r\n    return <div className='f-center justify-content-start'> \r\n        <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={checklabel} id={id} onChange={onClickSentiment(value, isChecked)} checked={isChecked} />\r\n    </div>\r\n}\r\n\r\n\r\nclass FilterBody extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { socialFeeds: [], postType: [], other: [], feeds: [], isActiveAside: false }\r\n        this.toogleFilter = this.toogleFilter.bind(this);\r\n    }\r\n   \r\n\r\n    toogleFilter = () => {\r\n        this.setState({ isActiveAside: !this.state.isActiveAside, })\r\n        setTimeout(() => {\r\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\r\n            if (offcanvas) {\r\n                offcanvas.classList.add('filter-backdrop');\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    onSelectFeeds = (key, value, status) => event => {\r\n        if (!status) this.props.updateFilterSocialFeeds({ key, value })\r\n        else this.props.removeFilterSocialFeeds({ key, value })\r\n    }\r\n    onClickPostType = (value, status) => event => {\r\n        if (!status) this.props.updateFilterPostType(value)\r\n        else this.props.removeFilterPostType(value)\r\n    }\r\n    onClickOther = (key, value, status) => event => {\r\n        if(key == 'tagProduct') {\r\n            const foundItem = this.props.allWalls?.length && this.props.allWalls.find(item => String(item.id) == String(localStorage.getItem('wallId')));\r\n            if(foundItem?.carouselPost) return TOAST_ERROR('To apply this filter, please disable the Carousel feature first.')\r\n        }\r\n        if (!status) this.props.updateFilterOthers({ key, value })\r\n        else this.props.removeFilterOthers({ key, value })\r\n    }\r\n\r\n    onClickAi = (value, status) => event => {\r\n        if (!status) this.props.aiFilter(value)\r\n        else this.props.removeAiFilter(value)\r\n    }\r\n\r\n    onClickSentiment = (value, status) => event => {\r\n        if (!status) this.props.sentimentFilter(value)\r\n        else this.props.removeSentimentFilter(value)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addEventListeners(); \r\n\r\n        if (window.feedId && window.feedId != \"\") {\r\n            const { feeds } = this.props \r\n            feeds && feeds.map((item, index) => { if (window.feedId == item.id) { this.props.updateFilterSocialFeeds({ key: item.name, value: window.feedId }) } })\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() { this.addEventListeners(); }\r\n\r\n    addEventListeners() {\r\n        const filterAside = document.getElementById(\"filter_aside\");\r\n        if (filterAside) {\r\n            filterAside.addEventListener(\"click\", this.toogleFilter);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { moderation, feeds} = this.props\r\n        const { isActiveAside } = this.state\r\n        const UserRuleEnableAI = false;\r\n        const UserRuleManualTag = true;\r\n        const postTags = moderation?.filterBody?.postTags;\r\n        \r\n\r\n        return <Offcanvas show={isActiveAside} placement={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\r\n            <Offcanvas.Body>\r\n                <div className=\"f-between px-4 py-3 border-bottom\">\r\n                    <span className=\"fs-6 fw-medium\">Add Filter</span>\r\n                    <Button variant='icon' size='sm' className='btn-active-primary' onClick={this.toogleFilter}>\r\n                        <FontAwesomeIcon icon={'xmark'}/>\r\n                    </Button>\r\n                </div>\r\n                {(UserRuleEnableAI || UserRuleManualTag) ?\r\n                    <Accordion className=\"border-bottom\" flush>\r\n                        <Accordion.Item defaultactivekey=\"0\">\r\n                            <Accordion.Header>\r\n                                <span className=\"text-uppercase fs-8 fw-medium\">Post Tags</span>\r\n                            </Accordion.Header>\r\n                            <Accordion.Body className=\"px-5 py-1\">\r\n                                {UserRuleEnableAI &&\r\n                                    <Image className='mb-3' src={baseUrl('media/svg/trusense.svg')} height={23} width={120} fluid/>\r\n                                }\r\n                                <div id=\"tag_post_btn\" className=\"collapse show\" data-parent=\"#tagspost\">\r\n                                    <PostTagSearch postTags={postTags} {...this.props} />\r\n                                </div>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                    : null}\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Social Feeds</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <div id=\"social_feed_btn\" className=\"collapse show\" data-parent=\"#post_type_drop\">\r\n                                <div className=\"checkbox-list\">\r\n                                    {\r\n                                        feeds && feeds.map((item, index) => {\r\n                                            const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.socialFeed.length > 0 ? moderation.filterBody.socialFeed.filter((fin) => fin.value == item.id) : []\r\n                                            const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n                                            return item.status ? <Form.Label key={index} className='d-flex align-items-start mb-4' htmlFor={`moderationfeed${item.id}`}>\r\n                                                    <Form.Check type=\"checkbox\" id={`moderationfeed${item.id}`} value={item.id} data-filter={item.filterId} onChange={this.onSelectFeeds(item.name, item.id, isChecked)} checked={isChecked} style={{marginTop:2}}/>\r\n                                                    <Image className='mx-2' src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} fluid/>\r\n                                                    <span className='fil_network'>{parse(item.name)}</span>\r\n                                                </Form.Label> :''\r\n                                        })\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Post Type</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <PostTypeCheck value=\"1\" onClickPostType={this.onClickPostType} {...this.props} label={`Text Only`} id={`text_only`}/>\r\n                            <PostTypeCheck value=\"2,4\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Image`} id={`image_only`}/>\r\n                            <PostTypeCheck value=\"3,5\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Video`} id={`video_only`}/>\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`UGC Tagged Products`} id={`tagProduct`} />\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Ai Recommendation</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            {generateRandomArray(3).map((_,index) => <AiCheck value={String(index+1)} onClickAi={this.onClickAi} {...this.props} label={index == 0 ?`Recommended` : index == 1 ? `Considerable` : 'Not Recommended'} id={index == 0 ? `recom` : index ==1 ? 'consider' : 'not_recom'}/> )}\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Sentiment</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            {generateRandomArray(3).map((_,index) => <SentimentCheck value={String(index+1)} onClickSentiment={this.onClickSentiment} {...this.props} label={index == 0 ?`Positive` : index == 1 ? `Neutral` : 'Negative'} id={index == 0 ?`pos` : index == 1 ? `neut` : 'neg'}/>)}\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Other</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Pinned to top`} id={`pinFilter`}/>\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Recent`} id={`recentFilter`} />\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Retweets`} id={`retweetsFilter`} />\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                <div className=\"d-flex flex-column mx-5 py-4\">\r\n                    <Button variant='link' onClick={this.props.removeAllFilterBody} className=\"\">Reset Results</Button>\r\n                </div>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         moderation: state.moderation ,\r\n         feeds: state.manageFeeds?.feeds,\r\n         allWalls: state.dashboardData?.dashboarddata?.allWalls,\r\n        }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateFilterPostTags: (data) => dispatch(updateFilterPostTags(data)),\r\n        updateFilterSocialFeeds: (data) => dispatch(updateFilterSocialFeeds(data)),\r\n        updateFilterPostType: (data) => dispatch(updateFilterPostType(data)),\r\n        updateFilterOthers: (data) => dispatch(updateFilterOthers(data)),\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n        aiFilter: (data) => dispatch(aiFilter(data)),\r\n        removeAiFilter: (data) => dispatch(removeAiFilter(data)),\r\n        sentimentFilter: (data) => dispatch(sentimentFilter(data)),\r\n        removeSentimentFilter: (data) => dispatch(removeSentimentFilter(data)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Form, Button, Badge } from 'react-bootstrap';\r\nimport { removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeDateRanges, removeAllFilterBody, removeAiFilter, removeSentimentFilter } from '../../../../../actions/moderationActions'\r\nimport HtmlParser from 'react-html-parser';\r\n\r\nconst IconWrapper = ({ children }) =>{\r\n    return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n        {children}\r\n    </Badge>\r\n}\r\nclass FilterTab extends Component {\r\n    onSelectFeeds = (data) => event => this.props.removeFilterSocialFeeds(data)\r\n    onClickPostType = (value) => event => this.props.removeFilterPostType(value)\r\n    onClickOther = (data) => event => this.props.removeFilterOthers(data)\r\n    onClickRemovePostTags = (value) => event => this.props.removeFilterPostTags(value)\r\n    onClickToDateRangeRemove = event => this.props.removeDateRanges()\r\n    onClickAi = (value) => event => this.props.removeAiFilter(value)\r\n    onClickSentiment = (value) => event => this.props.removeSentimentFilter(value)\r\n\r\n    render() {\r\n        const { filters, onClickReset, filterBody } = this.props\r\n        return (filterBody.socialFeed.length > 0 || filterBody.postType.length > 0 || filterBody.postTags.length > 0 || filterBody.other.length > 0 || Object.keys(filterBody.dateRanges).length > 0 || filterBody.recommendation.length > 0 || filterBody.sentiment.length > 0) ? <div className=\"d-flex align-items-start mb-2\">\r\n            <span className=\"text-muted fw-medium me-2 my-2 text-nowrap\">Filter By : </span>\r\n            <div className=\"d-flex flex-wrap align-items-center\">\r\n                {\r\n                    (Object.keys(filterBody.dateRanges).length > 0) ? <IconWrapper>\r\n                        {`${filterBody.dateRanges.startDate} - ${filterBody.dateRanges.endDate}`}\r\n                        <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickToDateRangeRemove}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </Button>\r\n                    </IconWrapper> : null\r\n                }\r\n                {\r\n                    filterBody.postTags && filterBody.postTags.map((sItem, index) => {\r\n                        return <IconWrapper key={index}>\r\n                            {sItem}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickRemovePostTags(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </IconWrapper>\r\n                    })\r\n                }\r\n                {\r\n                    filterBody.socialFeed && filterBody.socialFeed.map((sItem, index) => {\r\n                        return <IconWrapper key={index}>\r\n                            {sItem.key == \"onsiteupload\" ? \"SnapUp\" : HtmlParser(sItem.key)}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onSelectFeeds(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </IconWrapper>\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.postType && filterBody.postType.map((sItem, index) => {\r\n                        if (sItem == \"1\") {\r\n                            return <IconWrapper key={index}>\r\n                                Text Only\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"2,4\") {\r\n                            return <IconWrapper key={index}>\r\n                                With Image\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"3,5\") {\r\n                            return <IconWrapper key={index}>\r\n                                With Video\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.other && filterBody.other.map((sItem) => {\r\n                        if (sItem.key == \"highlightFilter\") {\r\n                            return <IconWrapper key={sItem.key}>\r\n                                Highlight Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem.key == \"pinFilter\") {\r\n                            return <IconWrapper key={sItem.key}>\r\n                                Pin Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem.key == \"recentFilter\") {\r\n                            return <IconWrapper key={sItem.key}>\r\n                                Recent Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem.key == \"retweetsFilter\") {\r\n                            return <IconWrapper key={sItem.key}>\r\n                                Retweets Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem.key == \"tagProduct\") {\r\n                            return <IconWrapper key={sItem.key}>\r\n                                UGC Tagged Products\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.recommendation && filterBody.recommendation.map((sItem) => {\r\n                        if (sItem == \"1\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Recommended\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickAi(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"2\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Considerable\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickAi(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"3\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Not Recommended\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickAi(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.sentiment && filterBody.sentiment.map((sItem) => {\r\n                        if (sItem == \"1\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Positive\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickSentiment(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"2\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Neutral\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickSentiment(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                        else if (sItem == \"3\") {\r\n                            return <IconWrapper key={sItem}>\r\n                                Negative\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickSentiment(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </IconWrapper>\r\n                        }\r\n                    })\r\n                }\r\n                <Button variant='dark' className='rounded-pill py-1 m-1' onClick={this.props.removeAllFilterBody}>Reset</Button>\r\n            </div>\r\n        </div> : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { moderation: state.moderation }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeDateRanges: () => dispatch(removeDateRanges()),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n        removeAiFilter: (data) => dispatch(removeAiFilter(data)),\r\n        removeSentimentFilter: (data) => dispatch(removeSentimentFilter(data))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTab);","import React, { Component } from 'react'\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\r\nimport '@splidejs/splide/css';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n//import { Options } from '@splidejs/splide';\r\n\r\n\r\n\r\nexport default class CardPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mainRef = React.createRef();\r\n  }\r\n\r\n  handleThumbs = (id) => {\r\n    if (this.mainRef.current) {\r\n      this.mainRef.current.go(id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {ugcData} = this.props\r\n\r\n    const mainOptions = {\r\n      type      : 'loop',\r\n      perPage   : 1,\r\n      perMove   : 1,\r\n      gap       : '1rem',\r\n      pagination: false,\r\n      height    : '10rem',\r\n      navigation: false,\r\n      \r\n    };\r\n\r\n    if(ugcData.data && ugcData.data.length == 1) mainOptions.arrows= false\r\n    return <div className='mx-auto' style={{maxWidth:450}}>\r\n              <Splide hasTrack={ false } options={{ arrows: false }}>\r\n                <SplideTrack>\r\n                {ugcData.data && ugcData.data.length ? ugcData.data.map((item,index)=>{ \r\n                  return <SplideSlide key={index}>\r\n                      <div className={'d-flex flex-column w-100'}>\r\n                        <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={item.postFile} alt={\"\"} isCover={true} />\r\n                        <div className='p-3'>\r\n                          <div className=\"d-flex align-items-start mb-2\">\r\n                              <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                  <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                      imageSize={40}\r\n                                      symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                      name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                  <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                      <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.name}</strong></p>\r\n                                      <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.username}</p>\r\n                                  </div>\r\n                              </div>  \r\n                              <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                  <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                      <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} />\r\n                                  </OverlayTrigger>\r\n                              </span>\r\n                          </div>\r\n                          <ShowMoreContent classes={'mb-3'} content={item.content} idIndex={item.id} line={4} />\r\n                        </div>\r\n                      </div>\r\n                  </SplideSlide>\r\n                    }):null}\r\n                </SplideTrack>\r\n                {ugcData.data && ugcData.data.length > 1 ? <div className=\"splide__arrows\">\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--prev start-0\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                    </Button>\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--next end-0\">\r\n                      <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                  </Button>\r\n                </div> : null}\r\n              </Splide>\r\n            </div>\r\n\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HOST_URL } from '../../../../../../actions/api'\r\nimport { TOAST_ERROR } from '../../../../../../utils'\r\nimport { tinyRequest } from '../../../../../../actions/tinyUrlAction';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { logRoles } from '@testing-library/react';\r\n\r\nexport default class copyUrl extends Component {\r\n\r\n    state = { openSteps: false, copied: false, hash: 'yes', accountDetails: {}, postUrl: '' }\r\n    componentDidMount() {\r\n        this.copyText();\r\n    }\r\n\r\n    sendRequest = () => {\r\n        const { onRaiseRequest, setUserName } = this.props\r\n        // setUserName(this.state.accountDetails.username)\r\n        onRaiseRequest(this.state.hash)\r\n    }\r\n\r\n    copyText = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n        const postLink = ugcData?.data && ugcData?.data[0] ? ugcData?.data[0].link : ''\r\n        tinyRequest(postLink).then((response) => {\r\n            const { data } = response.data\r\n            this.setState({ postUrl: data?.tiny_url })\r\n        }).catch((ex) => {\r\n            this.setState({ postUrl: postLink })\r\n        })\r\n\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' ' + ugcData.bitlyurl)\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg}. Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n    }\r\n\r\n    raiseReq = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n\r\n        if (this.state.hash == '' || !this.state.hash) { TOAST_ERROR('Hashtag for UGC Rights is required!'); return; }\r\n        this.sendRequest()\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' Post : ' + this.state.postUrl + ' . Form Link : ' + ugcData.bitlyurl);\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg} Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n        if ((ugcData.data[0].networkId == 18 || ugcData.data[0].networkId == 2) && requestMode == 0) setTimeout(() => window.open(`https://ig.me/m/${ugcData.data[0].username}`, '_blank'), 400)\r\n        else setTimeout(() => window.open(ugcData.data[0].link, '_blank'), 400)\r\n        setTimeout(() => {\r\n            window.location.replace(`${HOST_URL}content/moderation/${localStorage.getItem('wallId')}`)\r\n        }, 400);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { ugcData, custom_msg, setStep, requestMode, isRequesting } = this.props\r\n        const { openSteps, copied, hash } = this.state;\r\n        return <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n           \r\n            <h3 className='mb-3'>Your UGC Request is Ready</h3>\r\n\r\n            <div className=\"form-group ugc_right_col\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={requestMode == 0 ? custom_msg : localStorage.getItem('ownerId') == '142546' ? `${custom_msg}` : `${custom_msg} Just reply with #${hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!` || \"\"} disabled />\r\n                </Form.Group>\r\n            </div>\r\n\r\n            {requestMode == 1 ? <>\r\n\r\n                <div className=\"form-group ugc_right_col\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"ugc_rights_hash_value\">Enter Hashtag for UGC Rights <span className=\"text-danger\">*</span> </Form.Label>\r\n                        <Form.Control as={'textarea'} id=\"ugc_rights_hash_value\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={hash} onChange={e => this.setState({ hash: e.target.value })} >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n            </> : null}\r\n            {requestMode == 0 ? <>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text className=\"cursor-pointer\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'link'}/>\r\n                    </InputGroup.Text>\r\n                    <Form.Control className=\"p-2\"  size='lg' value={ugcData.bitlyurl ? String(ugcData.bitlyurl):'---'} />\r\n                </InputGroup>\r\n                <Button variant='primary' className='w-100 mb-4' onClick={() => this.setState({ copied: true }, () => this.copyText())}>\r\n                    {!copied ? \"Copy Url\" : \"Url Copied\"}\r\n                </Button>\r\n            </> : null}\r\n\r\n                   \r\n            <h5> Steps to proceed </h5>\r\n            <ul className={`list-unstyled list-points fs-8`}>\r\n                <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n            </ul>\r\n                    \r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(2)}>Back</Button>\r\n            <Button className={isRequesting ? 'spinner' : ''} onClick={() => this.raiseReq()}>Raise Request</Button>\r\n        </div>\r\n        \r\n        </>\r\n    }\r\n}\r\n\r\n","import axios from \"axios\"; \r\nimport { TINY_URL } from \"./api\";\r\nconst apiToken = `YhhvoiyS1HLShf3CsiZAUsUZK2qTY1JGrJ045Z12sipRKGeEbM1FVHnQVd4f`\r\nexport const tinyRequest = (url) => {\r\n    var data = JSON.stringify({\r\n        \"url\": url\r\n    });\r\n    var config = {\r\n        method: 'post',\r\n        url: `${TINY_URL}?api_token=${apiToken}`,\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: data\r\n    };\r\n    return axios(config)\r\n}","import { Component } from \"react\";\r\nimport { Modal, Button, InputGroup, Form, Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { DashboardModal, Dashboard } from \"@uppy/react\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport $ from \"jquery\";\r\nimport { ADD_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\n\r\n\r\n\r\nclass CreateTemplate extends Component {\r\n  uppyUploader = new UppyUpload()\r\n  uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n  state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: this.props.editData.client_logo, selectedBrand: this.props.editData.client_logo_name, selectedBrandFile: this.props.editData.client_logo, tncFilename: this.props.editData.custom_terms, selectedtnc: this.props.editData.custom_terms_name, selectedtncFile: this.props.editData.custom_terms, selectedTemplate: null, acceptTnc: false, logoError: false, tncError: false, templateName: this.props.editData.name, custom_msg: this.props.editData.custom_message, tncerrorMsg: false, nameerrorMsg: false, msgerrorMsg: false, };\r\n\r\n  componentDidMount() {\r\n    this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedBrandFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          brandFilename: result.name,\r\n          selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          logoError: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedtncFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncFilename: result.name,\r\n          selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncerrorMsg: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    // this.props.ugcData\r\n  }\r\n\r\n\r\n  onClickToOpenBrand = () => {\r\n    this.setState({ brandModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploader.uppy.cancelAll();\r\n      this.setState({ brandModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseBrand = () => {\r\n    this.uppyUploader.uppy.cancelAll();\r\n    this.setState({ brandModalOpen: false });\r\n  };\r\n\r\n  onClickToOpenTnc = () => {\r\n    this.setState({ tncModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploaderPdf.uppy.cancelAll();\r\n      this.setState({ tncModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseTnc = () => {\r\n    this.uppyUploaderPdf.uppy.cancelAll();\r\n    this.setState({ tncModalOpen: false });\r\n  };\r\n\r\n  removeBrandLogo = () => {\r\n    this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n  }\r\n  removeTnc = () => {\r\n    this.setState({\r\n      tncFilename: null,\r\n      selectedtnc: \"\",\r\n      selectedtncFile: null,\r\n    })\r\n  }\r\n\r\n  onSaveTemplate = () => {\r\n    const { createTemplate, selectedBrand, tncFilename, brandFilename, selectedtnc, selectedtncFile, selectedTemplate, templateName, selectedBrandFile, custom_msg } = this.state;\r\n\r\n    if (!custom_msg || !templateName || !tncFilename || !brandFilename) {\r\n      if (!custom_msg) this.setState({ msgerrorMsg: true })\r\n      if (!templateName) this.setState({ nameerrorMsg: true })\r\n      if (!tncFilename) this.setState({ tncerrorMsg: true })\r\n      if (!brandFilename) this.setState({ logoError: true })\r\n    }\r\n    else {\r\n      var obj = { owner: localStorage.getItem('ownerId'), name: templateName, custom_message: custom_msg, custom_terms: selectedtnc, custom_terms_name: tncFilename, client_logo: selectedBrand, client_logo_name: brandFilename }\r\n      if (this.props.edit) obj = { ...obj, id: this.props.editData.id }\r\n      this.props.ADD_UGC_TEMPLATE(obj, this.props.onAddNewTemplate)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { show, onHide, saveTemplate, edit } = this.props;\r\n    const { brandModalOpen, tncModalOpen, createTemplate, selectedBrand, tncFilename, logoError, selectedtncFile, selectedTemplate, acceptTnc, tncError, selectedBrandFile, templateName, custom_msg, brandFilename, tncerrorMsg, nameerrorMsg, msgerrorMsg } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal size=\"lg\" show={show} onHide={onHide} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{edit ? 'Edit' : `Create New`} Template</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_name\">Template Name <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control placeholder=\"enter your template name\" autoComplete=\"off\" id=\"t_name\" className={`${nameerrorMsg ? `is-invalid` : ``}`} value={templateName} onChange={(e) => this.setState({ templateName: e.target.value, nameerrorMsg: false })} maxLength=\"255\" />\r\n                    <span id=\"t_nameerror\" className=\"invalid-feedback\" >{nameerrorMsg ? \"Name is required\" : ''}</span>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Custom Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control as={'textarea'} className={`${msgerrorMsg ? `is-invalid` : ``}`} id=\"t_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_msg} onChange={(e) => this.setState({ custom_msg: e.target.value, msgerrorMsg: false })} />\r\n                    <span id=\"t_msgerror\" className=\"invalid-feedback\" >{msgerrorMsg ? \"Custom message is required\" : ''}</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_logo\">Brand Logo <span className=\"text-danger\">*</span></Form.Label>\r\n                    {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer ${logoError ? `is-invalid border-danger` : ``}`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                      <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                    </div> :\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className=\"me-3 me-xxl-4\">\r\n                            <div className=\"symbol h-90px w-90px position-relative rounded-2 overflow-hidden\">\r\n                                <Image src={selectedBrandFile?.includes('https://cloud.tagshop.ai/') ? selectedBrandFile : `${WASABI_PATH}${UGC_UPLOAD_URL}/${selectedBrandFile}`} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center flex-wrap\">\r\n                            <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                    <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <span id=\"t_logoerror\" className=\"invalid-feedback\">Brand Logo is required</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Terms and Conditions<span className=\"text-danger\">*</span></Form.Label>\r\n                    <InputGroup className={`${tncerrorMsg ? `is-invalid` : ``}`}>\r\n                      <div className=\"form-control form-control-lg\">\r\n                        {selectedtncFile ? \r\n                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                        <span className=\"text-ellipsis fs-8 p-1 rounded-1\">{tncFilename}</span> \r\n                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                          <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </span>\r\n                      </div> : ''}\r\n                      </div>\r\n                      <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                    </InputGroup>\r\n                    <span id=\"tcError\" className=\"invalid-feedback\" >{tncerrorMsg ? \"Terms & Conditions is required\" : ''}</span>\r\n                  </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Button variant='secondary' className='ms-3 btn-min-w' onClick={onHide}>Cancel</Button>\r\n                <Button className='ms-3 btn-min-w' onClick={this.onSaveTemplate}>Save Template</Button>\r\n            </Modal.Footer>\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploader.uppy}\r\n            open={brandModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseBrand}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n          />\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploaderPdf.uppy}\r\n            open={tncModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseTnc}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Url\", \"Webcam\"]}\r\n          />\r\n\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // ugcData: state.moderation.ugcData,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    ADD_UGC_TEMPLATE: (data, callback) => dispatch(ADD_UGC_TEMPLATE(data, callback))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTemplate);\r\n","import { Component } from \"react\";\r\nimport { DashboardModal } from \"@uppy/react\";\r\nimport $ from \"jquery\";\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport CreateTemplate from \"./CreateTemplate\";\r\nimport { connect } from \"react-redux\";\r\nimport { DELETE_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GeneralRequest extends Component {\r\n\r\n    state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: null, selectedBrand: \"\", selectedBrandFile: null, tncFilename: null, selectedtnc: \"\", selectedtncFile: null, selectedTemplate: this.props.selectedTemplate, tncError: this.props.tncError, custom_message: this.props.custom_msg, isEdit: false, editData: {} };\r\n\r\n    uppyUploader = new UppyUpload()\r\n    uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n    componentDidMount() {\r\n        const { ugcData, setBrand_link, setTermslink, setTermstype, brand_link } = this.props\r\n\r\n        this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            setBrand_link(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            this.setState(\r\n                {\r\n                    selectedBrandFile: `${result.id}.${result.ext}`,\r\n                    brandFilename: result.name,\r\n                    selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploader.uppy.cancelAll();\r\n                        this.setState({ brandModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n        });\r\n\r\n        this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            this.setState(\r\n                {\r\n                    selectedtncFile: `${result.id}.${result.ext}`,\r\n                    tncFilename: result.name,\r\n                    selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploaderPdf.uppy.cancelAll();\r\n                        this.setState({ tncModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n            setTermslink(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            setTermstype(result.name)\r\n        });\r\n\r\n        this.onTemplateChange(this.props.selectedTemplate)\r\n        setTimeout(() => {\r\n            if (ugcData && ugcData.template && ugcData.template.length && !this.state.selectedTemplate) {\r\n                this.setState({ tncFilename: ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms, selectedtncFile: ugcData.template[0].custom_terms })\r\n            }\r\n            if (brand_link) this.setState({ selectedBrandFile: brand_link }, () => console.log('brand_link', brand_link, this.state.selectedBrandFile))\r\n        }, 500);\r\n\r\n    }\r\n\r\n    onClickToOpenBrand = () => {\r\n        this.setState({ brandModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseBrand = () => {\r\n        this.uppyUploader.uppy.cancelAll();\r\n        this.setState({ brandModalOpen: false });\r\n    };\r\n\r\n    onClickToOpenTnc = () => {\r\n        this.setState({ tncModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseTnc = () => {\r\n        this.uppyUploaderPdf.uppy.cancelAll();\r\n        this.setState({ tncModalOpen: false });\r\n    };\r\n\r\n    onCreateTemplate = () => {\r\n        this.setState({ createTemplate: true })\r\n    }\r\n\r\n    onAddNewTemplate = (id) => {\r\n\r\n        const tmp = this.getSelectedTemplate(id)\r\n        if (tmp) this.onTemplateChange(id)\r\n        // if(tmp) this.setState({selectedTemplate: id})\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n\r\n    onHideTemplate = () => {\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n    getSelectedTemplate = (value) => {\r\n        const { ugcData } = this.props\r\n        const { selectedTemplate } = this.state\r\n        const id = value ? value : selectedTemplate\r\n        localStorage.setItem('selectedTemplate',id)\r\n        if (ugcData && ugcData.template && ugcData.template.length) {\r\n            if (!id) { return ugcData.template[0] }\r\n            const template = ugcData.template.filter(t => t.id == id)[0]\r\n            return template\r\n        }\r\n        else return null\r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { acceptTnc, requestMode , onUpdateTemplate} = this.props\r\n        onUpdateTemplate()\r\n        if (requestMode == 1) {\r\n            this.props.setStep(2)\r\n        }\r\n        else if (acceptTnc && requestMode == 0) {\r\n            this.props.setStep(2)\r\n        }\r\n        else this.setState({ tncError: true }, () => this.props.setTncError(true))\r\n    }\r\n    //     this.setState({tncFilename : ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms,\r\n    //  selectedtncFile:ugcData.template[0].custom_terms, custom_message: ugcData.template[0].custom_message }, () => this.props.setCustom_msg(this.state.custom_message))\r\n\r\n    onTemplateChange = (e) => {\r\n        const tmp = this.getSelectedTemplate(e)\r\n        if (tmp) {\r\n            this.setState({ selectedTemplate: e }, () => {\r\n                this.setState({\r\n                    custom_message: tmp.custom_message,\r\n                    tncFilename: tmp.custom_terms_name,\r\n                    selectedtnc: tmp.custom_terms,\r\n                    selectedtncFile: tmp.custom_terms,\r\n                    brandFilename: tmp.client_logo_name,\r\n                    selectedBrand: tmp.client_logo,\r\n                    selectedBrandFile: tmp.client_logo,\r\n\r\n                });\r\n                this.props.setCustom_msg(tmp?.custom_message);\r\n                this.props.setSelectedTemplate(e);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onTemplateRemove = (data) => {\r\n        this.props.deleteTemplate({ owner: data.owner, id: data.id }, () => this.onTemplateChange(1))\r\n    }\r\n\r\n    onTemplateEdit = (data) => {\r\n        this.onCreateTemplate()\r\n        this.setState({ isEdit: true, editData: data })\r\n    }\r\n\r\n    removeBrandLogo = () => {\r\n        this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n    }\r\n    removeTnc = () => {\r\n        this.setState({\r\n            tncFilename: null,\r\n            selectedtnc: null,\r\n            selectedtncFile: null\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            brandModalOpen,\r\n            tncModalOpen,\r\n            createTemplate,\r\n            selectedBrand,\r\n            selectedBrandFile,\r\n            tncFilename,\r\n            selectedtncFile, selectedTemplate,\r\n            tncError,\r\n            custom_message,\r\n            isEdit,\r\n            editData,\r\n            brandFilename\r\n        } = this.state;\r\n\r\n        const { ugcData, setCustom_msg, setAcceptTnc, acceptTnc, hideUgc, setBrand_link, setTermslink, setTermstype, requestMode } = this.props\r\n        //   setBrand_link(selectedBrandFile)\r\n        //  setTermslink(ugcData.template[0].custom_terms) \r\n        // setTermstype(ugcData.template[0].custom_terms_name) \r\n\r\n        return (<>\r\n                {ugcData && ugcData.template && ugcData.template.length ?\r\n                <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n                        \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <div className=\"d-flex f-between mb-3\">\r\n                                <Form.Label className=\"mb-0\">Choose From Templates</Form.Label>\r\n                                <Button variant=\"link\" size=\"sm\" onClick={this.onCreateTemplate}>\r\n                                    <FontAwesomeIcon icon={'plus'}/>\r\n                                    Create Template\r\n                                </Button>\r\n                            </div>\r\n                            <Dropdown className=\"ugc-templates mb-3\" onSelect={(e) => this.onTemplateChange(e)}>\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"w-100 d-flex f-between\">\r\n                                    {this.getSelectedTemplate()?.name}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"w-100 dropdown-height\">\r\n                                    {ugcData.template && ugcData.template.map(t => (\r\n                                        <Dropdown.Item eventKey={t.id} className=\"f-between\" key={`drp_${t.id}`}>\r\n                                            <span className=\"text-ellipsis\">{t.name}</span> \r\n                                            {t.owner != 0 ?\r\n                                            <span className=\"dropdown-option\">\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateEdit(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'pen'}/>\r\n                                                </Button>\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateRemove(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </span>\r\n                                            : null\r\n                                        } </Dropdown.Item>\r\n                                    ))}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>  \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"r_msg\">Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                                <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_message} onChange={(e) => this.setState({ custom_message: e.target.value }, () => setCustom_msg(e.target.value))} >\r\n                                    {this.getSelectedTemplate()?.custom_message ? this.getSelectedTemplate()?.custom_message : `We loved your creative brilliance! Can we showcase your incredible work and give you the recognition you deserve? ✨📸🙌. \r\n                                Please approve our request so we can use your content in our marketing campaign.`}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                       \r\n                            <>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_logo\">Brand Logo</Form.Label>\r\n                                {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                                    <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                                </div> :\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"me-3 me-xxl-4\">\r\n                                        <div className=\"symbol h-90px w-90px position-relative rounded-2 bg-light overflow-hidden\">\r\n                                            <Image src={this.getSelectedTemplate()?.client_logo ? (this.getSelectedTemplate()?.client_logo?.includes('https://cloud.tagshop.ai') || this.getSelectedTemplate()?.client_logo?.includes('https://cloud.taggbox.com')) ? this.getSelectedTemplate()?.client_logo : `${WASABI_PATH}${UGC_UPLOAD_URL}/${this.getSelectedTemplate()?.client_logo}` : selectedBrand} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                                        <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_msg\">Terms and Conditions</Form.Label>\r\n                                <InputGroup className=\"mb-1\">\r\n                                    <div className=\"form-control p-2\">\r\n                                        {selectedtncFile ? \r\n                                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                                        <span className=\"text-ellipsis fs-8 bg-light p-1 rounded-1\">{tncFilename}</span> \r\n                                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                                        <FontAwesomeIcon icon={'xmark'}/>\r\n                                        </span>\r\n                                    </div> : ''}\r\n                                    </div>\r\n                                    <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                                </InputGroup>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Link to={baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx')} target=\"_blank\" className=\"btn btn-link p-0 text-nowrap btn-sm\" download={true}>\r\n                                        Use our predefined content\r\n                                        <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-1 d-flex\">\r\n                                <Form.Check type=\"checkbox\" id=\"ugc-tc\" className=\"me-2 mt-1\" value={acceptTnc} onChange={(e) => setAcceptTnc(e.target.checked)} checked={acceptTnc ? true : false}/>\r\n                                <Form.Label htmlFor=\"ugc-tc\">Accept our <a href=\"https://tagshop.ai/terms-of-service/\" rel=\"noreferrer\" className=\"fw-bold text-primary\" target=\"_blank\">Terms & Conditions</a> Click on Generate Request to proceed to next step.</Form.Label>\r\n                                \r\n                            </Form.Group>\r\n                            {tncError && !acceptTnc ? <span id=\"term_error\" className=\"text-danger\">Please accept Terms and Conditions</span> : null}\r\n                            </> \r\n\r\n                </div> : null}\r\n                <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                    <Button variant=\"secondary\" className=\"me-2\" onClick={() => {this.props.setStep(4); this.setState({tncError:false})}}>Back</Button>\r\n                    <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                </div>\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploader.uppy}\r\n                    open={brandModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseBrand}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                />\r\n\r\n\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploaderPdf.uppy}\r\n                    open={tncModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseTnc}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Url\", \"Webcam\"]}\r\n                />\r\n                {createTemplate ? <CreateTemplate show={true} edit={isEdit} editData={editData} onHide={this.onHideTemplate} onAddNewTemplate={this.onAddNewTemplate} /> : null}\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteTemplate: (data, callback) => dispatch(DELETE_UGC_TEMPLATE(data, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralRequest);\r\n","import React, { Component } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCookies, withCookies } from 'react-cookie';\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from '../../../../../../actions/sceneActions';\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { showAddAccounntAlert } from './utils';\r\nimport { useNavigate } from 'react-router';\r\nimport { addAccountFromId } from '../../../../../../utils/addAccount';\r\nimport { getTwitterAuth } from '../../../../../../utils/auth';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nconst SocialAccounts = (props) => {\r\n  const [cookies, setCookie] = useCookies([]);\r\n  const navigation = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const socialAccountsData = useSelector(state => state.userAccountData.socialAccounts)\r\n  return <SAccounts {...props} cookies={cookies} navigation={navigation} dispatch={dispatch} socialAccountsData={socialAccountsData} />\r\n}\r\nclass SAccounts extends Component {\r\n  state = { socialAccount: 0, authorName: null, authorAvatar: null, errorMsg: false, otherAc: false, accountDetails: {}, accountList: [], selectedPersonalAccount: null }\r\n\r\n  handleMessage = async (event) => {\r\n    try {\r\n      const response = JSON.parse(event.data);\r\n      const { code } = response;\r\n      const networkId = localStorage.getItem('networkId');\r\n      const type = localStorage.getItem('connectionType');\r\n      if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\r\n        if (type == 'moderation-ugc') {\r\n          if (code) {\r\n            if (networkId == 1) {\r\n              await getTwitterAuth(code, (response) => {\r\n                if (response && Object.keys(response).length > 0) this.filterAccountData(networkId, response);\r\n              })\r\n            } else {\r\n              await addAccountFromId(networkId, code, () => this.props.dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(null, () => this.filterAccountData(networkId, null))));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.filterAccountData(2, null);\r\n    document.cookie = \"callBackUrl=React\";\r\n    window.addEventListener(\"message\", this.handleMessage);\r\n    channel.addEventListener(\"message\", this.handleMessage);\r\n    if (window.Application) window.Application.reInit()\r\n    if (this.props.networkId == parseInt(JSON.parse(localStorage.getItem('instagram_ugc'))?.networkId)) {\r\n      this.setState({ accountDetails: JSON.parse(localStorage.getItem('instagram_ugc')) })\r\n    }\r\n    else this.setState({ accountDetails: null })\r\n  }\r\n\r\n  filterAccountData = (id, data) => {\r\n    const { socialAccountsData, setUserName } = this.props\r\n    let allAcc = []\r\n    socialAccountsData?.accountInformations?.forEach(acc => {\r\n      if (acc.Network.id == id && acc.ConnectedAccounts) {\r\n        acc.ConnectedAccounts.value2 = acc.ConnectedAccounts.accountName;\r\n        allAcc.push(acc);\r\n      }\r\n    });\r\n    if (id == 1 && data) {\r\n      allAcc.unshift({\r\n        ConnectedAccounts: {\r\n          id: data.id_str,\r\n          value2: data.name,\r\n          profilePicture: data.picture\r\n        },\r\n        Network: {\r\n          color: \"#0F1419\",\r\n          description: \"Twitter\",\r\n          icon: \"fa-twitter\",\r\n          id: 1,\r\n          name: \"Twitter\",\r\n          status: 1\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    this.setState({\r\n      accountList: allAcc,\r\n      selectedPersonalAccount: allAcc[0] || ''\r\n    }, () => setUserName(allAcc[0]?.ConnectedAccounts.value2 || ''));\r\n  };\r\n\r\n\r\n  sendRequest = () => {\r\n    const { setStep, setUserName } = this.props\r\n    if (this.state.accountDetails) {\r\n      setUserName(this.state.accountDetails.username)\r\n      setStep(3)\r\n    }\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { setStep } = this.props\r\n    if (this.state.selectedPersonalAccount) setStep(3)\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.removeItem(\"networkId\")\r\n    window.removeEventListener(\"message\", this.handleMessage);\r\n    channel.removeEventListener(\"message\", this.handleMessage);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { setStep, networkId, setUserName } = this.props\r\n    const { errorMsg, accountList, selectedPersonalAccount } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n          <div className=\"ugc_steps ugc-logged-ac modal-body\">\r\n            <>\r\n            {selectedPersonalAccount ? \r\n            <Dropdown style={{ minWidth: 220 }} id=\"connectedAll\">\r\n              <Dropdown.Toggle  variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`}>\r\n                <div className=\"d-flex align-items-center flex-grow-1\">\r\n                  <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                      imageSize={30}\r\n                      symbolClass={'symbol-label fs-8'}\r\n                      name={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''} \r\n                      profileUrl={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.profilePicture : ''} networkId={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.networkId :''} />\r\n                  <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                      <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''}</p>\r\n                  </div>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"w-100\">\r\n                <div className=\"navi flex-column navi-hover py-2 px-5 connectedAllAccounts\">Select Account:</div>\r\n                {accountList.map(acc => {        \r\n                  return <Dropdown.Item key={acc.ConnectedAccounts.id} onClick={() => { this.setState({ selectedPersonalAccount: acc }, () => setUserName(acc.ConnectedAccounts.value2)) }}>\r\n                      <div className=\"d-flex align-items-center\">\r\n                          <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                              imageSize={30}\r\n                              symbolClass={'symbol-label fs-8'}\r\n                              name={acc.ConnectedAccounts.value2} profileUrl={acc.ConnectedAccounts?.profilePicture} networkId={acc.ConnectedAccounts?.networkId} />\r\n                          <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                              <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{acc.ConnectedAccounts.value2}</p>\r\n                          </div>\r\n                      </div>\r\n                  </Dropdown.Item>\r\n                })}\r\n                <Dropdown.Item onClick={() => { localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId) }}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                        imageSize={30}\r\n                        symbolClass={'symbol-label fs-8'}\r\n                        name={''} profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={''} />\r\n                    <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                        <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Another Account</p>\r\n                    </div>\r\n                  </div>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown> :\r\n\r\n            <Button variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`} onClick={() => {localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId)}}>\r\n              <div className=\"d-flex align-items-center flex-grow-1\">\r\n                <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                    imageSize={30}\r\n                    symbolClass={'symbol-label fs-8'}\r\n                    name={''} \r\n                    profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={networkId} />\r\n                <div className=\"overflow-hidden f-between w-100 pe-3\" >\r\n                    <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Account</p>\r\n                    <FontAwesomeIcon icon={'plus'} />\r\n                </div>\r\n              </div>\r\n            </Button>\r\n            }\r\n            {errorMsg ? <span id=\"social_account_error\" className=\"invalid-feedback\">\r\n              Please connect account\r\n            </span> : null}\r\n            </>\r\n          </div>\r\n          <span id=\"reSearch_cookies\" onClick={() => this.getCookieData()}></span>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n          <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(1)}>Back</Button>\r\n          <Button onClick={() => this.nextStep()}>Next Step</Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default withCookies(SocialAccounts)","import { Component } from \"react\";  \r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport { TOAST_ERROR } from \"../../../../../../utils\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nclass ChooseMethod extends Component {\r\n\r\n    state = {\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { requestMode } = this.props\r\n        if (requestMode != null) {\r\n            this.props.setStep(1)\r\n        }\r\n        else TOAST_ERROR('Please select the mode for Right Request')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { setRequestMode, requestMode } = this.props\r\n\r\n        return (\r\n                <>\r\n                    <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                        <h3 className=\"mb-1 h5\">Select the mode for Right Request</h3>\r\n                        <p className=\"text-muted\">Tagshop offers two distinct modes to request rights. Comment Request and DM Request. </p>\r\n\r\n                        <div className=\"mb-3 d-flex flex-column\">\r\n                            <div value={'viaComments'} className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 1 ? 'border-success' : ''}`} onClick={() => setRequestMode(1)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'comment'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">Comment Request</p>\r\n                                        <span className=\"fs-9\">Request creators consent as a comment on their post.</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 1 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 1 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                            <div className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 0 ? 'border-success' : ''}`} onClick={() => setRequestMode(0)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'message'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">DM Request</p>\r\n                                        <span className=\"fs-9\">Send a Rights request directly into the DM of the creators!</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 0 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 0 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => this.props.hideUgc()}>Cancel</Button>\r\n                        <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                    </div>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseMethod);\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Modal, Button, Nav} from \"react-bootstrap\";\r\nimport { ADD_UGC_TEMPLATE, SEND_UGC } from \"../../../../../actions/moderationActions\";\r\nimport CardPreview from \"./Elements/CardPreview\"; \r\nimport CopyUrl from \"./Elements/CopyUrl\";\r\nimport GeneralRequest from \"./Elements/GeneralRequest\";\r\nimport SocialAccounts from \"./Elements/SocialAccounts\";\r\nimport './rights.scss'\r\nimport ChooseMethod from \"./Elements/ChooseMethod\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../../actions/sceneActions\";\r\nimport ErrorFound from \"../../../../ErrorFound\";\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { TOAST_ERROR } from \"../../../../../utils\";\r\n\r\n\r\nconst UgcModal = (props) => {\r\n  const { hideUgc, ugcData } = props\r\n  const [ugcTabKey, setUgcTabKey] = useState('general')\r\n  const [custom_msg, setCustom_msg] = useState(\"\")\r\n  const [selectedTemplate, setSelectedTemplate] = useState(localStorage.getItem('selectedTemplate') || '')\r\n  const [acceptTnc, setAcceptTnc] = useState(false)\r\n  const [tncError, setTncError] = useState(false)\r\n  const [step, setStep] = useState(4)\r\n  const [isAccount, setIsAccount] = useState('')\r\n  const [userName, setUserName] = useState('')\r\n  const [brand_link, setBrand_link] = useState('')\r\n  const [termslink, setTermslink] = useState('')\r\n  const [termstype, setTermstype] = useState('') \r\n  const [requestMode, setRequestMode] = useState()\r\n  const [isRequesting, setIsRequesting] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA())\r\n  }, [])\r\n \r\n  const sendRequest=()=>{\r\n    if(isAccount){\r\n      setStep(3)\r\n      onRaiseRequest()\r\n    }\r\n  }\r\n\r\n  const getPostIds = () => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    let postIds = []\r\n    if (data.length > 0) {\r\n      data.map((item, index) => {\r\n        postIds.push(item.referenceId)\r\n      })\r\n    }\r\n    return postIds.join(',')\r\n  }\r\n\r\n\r\n  const onRaiseRequest = (hash) => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    setIsRequesting(true)\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = {\r\n      custom_message: custom_msg,\r\n      feedId: data[0].feedId,\r\n      networkId: data[0].networkId,\r\n      selectedImage: data[0].postFile,\r\n      selectedVideo: '',\r\n      selectedUsername: data[0].username,\r\n      handle:userName,\r\n      postId: data.length > 1 ? getPostIds() : data[0].referenceId,\r\n      brand_link: brand_link ? brand_link :tempSelected?.client_logo,\r\n      termslink: termslink ? termslink:tempSelected?.custom_terms,\r\n      termstype: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      bitlylink: bitlyurl,\r\n      unique_code: unique_code,\r\n      rightsVia: requestMode,\r\n      hashtag: hash,\r\n      networkPostId: data[0].postId,\r\n      wallId:localStorage.getItem('wallId'),\r\n      client:localStorage.getItem('ownerId')\r\n    }\r\n    SEND_UGC(obj, ()=>setIsRequesting(false))\r\n  }\r\n\r\n\r\n\r\n const onUpdateTemplate = () => {\r\n    const { template } = ugcData\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = { \r\n      client_logo: brand_link ? brand_link :tempSelected?.client_logo,\r\n      custom_terms: termslink ? termslink:tempSelected?.custom_terms,\r\n      custom_terms_name: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      custom_message: custom_msg,\r\n      name:tempSelected?.name,\r\n      owner:localStorage.getItem('ownerId'),\r\n      id:tempSelected?.id\r\n    }\r\n  if(![1,2,3].includes(tempSelected?.id)){\r\n    if (!custom_msg ) {\r\n      TOAST_ERROR('Message field is required')\r\n    }\r\n    else {\r\n      dispatch(ADD_UGC_TEMPLATE(obj,''))\r\n    }\r\n  }\r\n  else{console.log('first')}\r\n  }\r\n\r\n  return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                  <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'}/>\r\n                  UGC Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={() => hideUgc()}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                  {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n\r\n                {step != 4 ? <div className=\"ugc-wizard-nav\">\r\n                        <Nav variant=\"nav\" className=\"bg-gray-200 justify-content-between row gx-0\">\r\n                        <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${[1,2,3].includes(step) ? `active` : ``}`} onClick={()=>setStep(1)}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[1,2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[1,2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">General Request</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 2 || step == 3 ? `active` : `disabled`}`} onClick={()=>acceptTnc ? setStep(2):''}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Social Account</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Preview</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </div>\r\n                    : <></>}\r\n\r\n\r\n\r\n                    {ugcData && step ==4? <ErrorFound><ChooseMethod ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setRequestMode={setRequestMode} hideUgc={hideUgc}/></ErrorFound> : null}\r\n\r\n                    {ugcData && step ==1?  <ErrorFound><GeneralRequest ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setAcceptTnc={setAcceptTnc} acceptTnc={acceptTnc} tncError={tncError} setTncError={setTncError} selectedTemplate={selectedTemplate} setSelectedTemplate={setSelectedTemplate} setCustom_msg={setCustom_msg} custom_msg={custom_msg} setBrand_link={setBrand_link} brand_link={brand_link} setTermslink={setTermslink} setTermstype={setTermstype}  termstype={termstype} hideUgc={hideUgc} onUpdateTemplate={onUpdateTemplate}/></ErrorFound> : null}\r\n\r\n                    {((acceptTnc && requestMode == 0) || requestMode == 1) && step ==2?  <ErrorFound><SocialAccounts  setStep={setStep} setUserName={setUserName} setIsAccount={setIsAccount} networkId={ugcData.data[0].networkId != 18 ? ugcData.data[0].networkId : 2} /></ErrorFound>:\"\"}\r\n\r\n                    {custom_msg && ugcData && step ==3 ? <ErrorFound><CopyUrl requestMode={requestMode} onRaiseRequest={onRaiseRequest} setUserName={setUserName} networkId={ugcData.data[0].networkId} setUgcTabKey={setUgcTabKey} setStep={setStep} ugcData={ugcData} custom_msg={custom_msg} isRequesting={isRequesting} /></ErrorFound> : null}\r\n\r\n                </div>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n};\r\n\r\nexport default (UgcModal);\r\n","import React, { Component } from 'react'\r\nimport HTMLReactParser from 'react-html-parser';\r\nimport moment from 'moment'\r\nimport { WASABI_PATH } from '../../../../../../actions/api'; \r\nimport { DOWNLOAD_CERTIFICATE } from '../../../../../../actions/ugcAction';\r\nimport {saveAs} from \"file-saver\";\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass UgcModalApproved extends Component {\r\n    onDownloadMedia = (data) => {\r\n        if (data.type != 5 && data.type != 3) {\r\n            saveAs(data.postFile, `${data.id}`);\r\n        }\r\n        else{\r\n            saveAs(data.mediaUrl, `${data.id}`);\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide } = this.props;\r\n        return ugcRequestData ? <>\r\n\r\n            <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                <Modal.Header className=\"justify-content-between py-0\">\r\n                    <span className='text-muted fw-medium'>\r\n                        <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1 text-success'}/>\r\n                        Access Image\r\n                    </span>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                    <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                        <h3 className='text-center mb-4'>Your UGC Request Approved</h3>\r\n                        <div className='mx-auto' style={{maxWidth:450}}>\r\n                            <div className={'d-flex flex-column w-100'}>\r\n                                <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                <div className='p-4'>\r\n                                    <div className=\"d-flex align-items-start mb-2\">\r\n                                        <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                            <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                imageSize={40}\r\n                                                symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                name={ugcRequestData.name} profileUrl={ugcRequestData.picture} networkId={ugcRequestData.networkId} />\r\n                                            <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </div>\r\n                                    <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"full_modal_sidebar position-relative\">\r\n                        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                            <div className=\"ugc-information\">\r\n                                <h2 className=\"mb-5 h3\">Information</h2>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User handle</span><span className=\" m_grid_uername\">{`@${ugcRequestData.username}`}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User name</span><span className=\" m_grid_name\">{ugcRequestData.name}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Device</span>\r\n                                        <span className=\" ugc-deviceupdate\">\r\n                                            {ugcRequestData.userAgent ?\r\n                                                HTMLReactParser(ugcRequestData.userAgent)\r\n                                                : null\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">IP Address</span><span className=\" ugc-userIP\"> {\r\n                                            ugcRequestData.userIP\r\n                                        }</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Location</span><span className=\" ugc-userLocation\">\r\n                                            {\r\n                                                ugcRequestData.userLocation\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Post Approval Date</span><span className=\" ugc-actionTime\">{moment(ugcRequestData.actionTime).utcOffset(0).format('YYYY-MM-DD  hh:mm:ss a')}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">TimeZone</span>\r\n                                        <span className=\" ugc-timezone\">{ugcRequestData.timezone ? HTMLReactParser(ugcRequestData.timezone) : null}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Terms &amp; Condition</span>\r\n                                        <span className=\" ugc-tncdownload\">\r\n                                            <a className='btn btn-link' href={(ugcRequestData.custom_terms) ? `${WASABI_PATH}test/${ugcRequestData.custom_terms}` : `${WASABI_PATH}test/${ugcRequestData.custom_term_type}`} target=\"_blank\"><span className=\"ugc-terms overflow-hidden text-ellipsis text-nowrap\">{ugcRequestData.custom_term_type}</span>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/></a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-top px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mb-2\">Approval Certificate</span>\r\n                                        <span className=\"f-between w-100\">\r\n                                            Rights Management \r\n                                            <a className='btn btn-dark ms-1' onClick={() => DOWNLOAD_CERTIFICATE(ugcRequestData.ugcid)}>Download\r\n                                                <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {ugcRequestData.comment ? <div className=\"ugc-user-comment mt-7\">\r\n                                <h2 className=\"mb-5\">User Comment</h2>\r\n                                <div className=\"user-comment-box p-5\">\r\n                                    <p>{ugcRequestData.comment}</p>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                            <Button variant=\"secondary\" className=\"me-3 btn-min-w\" onClick={onHide} >Close</Button>\r\n                            <Button className=\"btn-min-w\" onClick={() => this.onDownloadMedia(ugcRequestData)}>Download</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </> : null\r\n\r\n    }\r\n}\r\n\r\nexport default UgcModalApproved","import React, { Component } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\n\r\nclass RadialChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var days = (30 - props.ago) * 3.33;\r\n        this.state = {\r\n            series: [days],\r\n            options: {\r\n                chart: {\r\n                    height: 320,\r\n                    type: \"radialBar\"\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\",\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: true,\r\n                                fontWeight: '700',\r\n                                name: \"TEST\"\r\n                            },\r\n                            value: {\r\n                                color: [\"#545454\"],\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: false\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: [\"#f2f6f8\"],\r\n                            strokeWidth: '100%'\r\n                        },\r\n                        dataLabels: {\r\n                            show: true,\r\n                            name: {\r\n                                show: true,\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 600,\r\n                                color: '#545454',\r\n                                offsetY: -10\r\n                            },\r\n                            value: {\r\n                                show: false,\r\n                                fontSize: '14px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800,\r\n                                color: '#545454',\r\n                                offsetY: 16\r\n                            },\r\n                            total: {\r\n                                show: true,\r\n                                label: props.ago + \"Days\",\r\n                                color: '#373d3f',\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                colors: [\"#ffa800\"],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                }\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ago !== this.props.ago){\r\n            var days = (30 - this.props.ago) * 3.33;\r\n            this.setState({  \r\n                    series: [days],\r\n                    options: {\r\n                        chart: {\r\n                            height: 320,\r\n                            type: \"radialBar\"\r\n                        },\r\n                        plotOptions: {\r\n                            radialBar: {\r\n                                hollow: {\r\n                                    margin: 0,\r\n                                    size: \"65%\",\r\n                                },\r\n                                dataLabels: {\r\n                                    showOn: \"always\",\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontWeight: '700',\r\n                                        name: \"TEST\"\r\n                                    },\r\n                                    value: {\r\n                                        color: [\"#545454\"],\r\n                                        fontSize: \"30px\",\r\n                                        fontWeight: '700',\r\n                                        offsetY: 12,\r\n                                        show: false\r\n                                    }\r\n                                },\r\n                                track: {\r\n                                    background: [\"#f2f6f8\"],\r\n                                    strokeWidth: '100%'\r\n                                },\r\n                                dataLabels: {\r\n                                    show: true,\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 600,\r\n                                        color: '#545454',\r\n                                        offsetY: -10\r\n                                    },\r\n                                    value: {\r\n                                        show: false,\r\n                                        fontSize: '14px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800,\r\n                                        color: '#545454',\r\n                                        offsetY: 16\r\n                                    },\r\n                                    total: {\r\n                                        show: true,\r\n                                        label: this.props.ago + \"Days\",\r\n                                        color: '#373d3f',\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        colors: [\"#ffa800\"],\r\n                        stroke: {\r\n                            lineCap: \"round\",\r\n                        }\r\n                    }\r\n        \r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={350} />\r\n\r\n    }\r\n}\r\n\r\nexport default RadialChart;","\r\nimport moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport RadialChart from './RadialChart'\r\nimport { Link } from 'react-router-dom';\r\nimport CardPreview from '../Elements/CardPreview';\r\nimport { COPY_TO_CLIPBOARD } from '../../../../../../utils';\r\n\r\nexport default class Pending extends Component {\r\n    state={days:0, copied:false}\r\n\r\n    componentDidMount(){ this.getNewdata() }\r\n\r\n    getNewdata=()=>{\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        var new_date = moment().diff(moment(ugcRequestData.ugccreated, \"YYYY-MM-DD\"), 'days');\r\n        var ago = 30 - new_date;\r\n        this.setState({days:ago})\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ugcRequestData.ugccreated !== this.props.ugcRequestData.ugccreated){\r\n            this.getNewdata();\r\n        }\r\n    }\r\n    copyText = (id) => {\r\n        COPY_TO_CLIPBOARD(id)\r\n        this.setState({copied:true})\r\n        setTimeout(()=>{this.setState({copied:false})},1000)\r\n    }\r\n    render() {\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        const { days, copied} = this.state\r\n        return (<Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                    <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-warning'}/>\r\n                    Pending Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                    <h3 className='text-center mb-4'>Oops! Your UGC Request is pending now</h3>\r\n                    {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n                    <div className='p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard'>\r\n                        <div className='mb-3'>\r\n                            {days ? <RadialChart ago={ days} />:''}\r\n                        </div>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text>\r\n                                <FontAwesomeIcon type={'solid'} icon={'link'} />\r\n                            </InputGroup.Text>\r\n                            <Link id=\"rights_link\" className=\"form-control form-control-lg\" to={ugcRequestData.bitlyurl} target=\"_blank\">{ugcRequestData.bitlyurl}</Link>\r\n                        </InputGroup>\r\n                        <Form.Group className=\"mb-5\">\r\n                            <Button size='lg' onClick={()=>this.copyText('rights_link')} className='w-100'>{copied? 'Url Copied' :'Copy Url'}</Button>\r\n                        </Form.Group>\r\n                        <h5> Steps to proceed </h5>\r\n                        <ul className={`list-unstyled list-points fs-8`}>\r\n                            <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                            <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                            <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                            <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                            <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button className=\"btn-min-w\" onClick={onHide}>Done</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import moment from 'moment';\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass RejectModal extends Component {\r\n\r\n\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide, openugcModel } = this.props;\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                    <Modal.Header className=\"justify-content-between py-0\">\r\n                        <span className='text-muted fw-medium'>\r\n                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-danger'}/>\r\n                            Rejected Post\r\n                        </span>\r\n                        <div className='ms-5 d-flex justify-content-end'>\r\n                            <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                        <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                            <h3 className='text-center mb-4'>Rejected Post</h3>\r\n                            <div className='mx-auto' style={{maxWidth:450}}>\r\n                                <div className={'d-flex flex-column w-100'}>\r\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                    <div className='p-4'>\r\n                                        <div className=\"d-flex align-items-start mb-2\">\r\n                                            <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                    imageSize={40}\r\n                                                    symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                    name={ugcRequestData.name} profileUrl={ugcRequestData?.postFile} networkId={ugcRequestData.networkId} />\r\n                                                <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                                </div>\r\n                                            </div>  \r\n                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                    <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </div>\r\n                                        <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"full_modal_sidebar position-relative\">\r\n                            <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                                <h2 className=\"mb-5 text-center\">Sorry! Your UGC Request has been rejected</h2>\r\n                                <div className=\"mb-7\">\r\n                                    <Button size='lg' className=\"w-100\" onClick={openugcModel}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'user-check'}/>\r\n                                        Get Rights\r\n                                    </Button>\r\n                                </div>\r\n                                <ul className={`list-unstyled list-points fs-8`}>\r\n                                    <li className='mb-1'>Keep the request personalized</li>\r\n                                    <li className='mb-1'>Be clear about your intentions with the post</li>\r\n                                    <li className='mb-1'>Appreciate the post owner's efforts</li>\r\n                                    <li className='mb-1'>Offer rewards to users</li>\r\n                                    <li className='mb-1'>Add T&C with your request</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                                <Button className=\"btn-min-w\" onClick={onHide} >Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n    }\r\n}\r\n\r\nexport default RejectModal","import ApprovedModal from '../../UgcRights/Status/ApprovedModal'\r\nimport Pendingng from '../../UgcRights/Status/PendingModal'\r\nimport RejectModal from '../../UgcRights/Status/RejectModal'\r\n\r\nconst UgcStatus = (props) => {\r\n    const { ugcData, statusPopup, ugcRequestData, onHide, openugcModel } = props\r\n    return (<>\r\n        {statusPopup == 1 && ugcRequestData && ugcRequestData.username ? <Pendingng ugcData={ugcData} ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n        {statusPopup == 3 && ugcRequestData && ugcRequestData.username ? <RejectModal ugcRequestData={ugcRequestData} ugcData={ugcData} onHide={onHide}  openugcModel={openugcModel} /> : null}\r\n        {statusPopup == 2 && ugcRequestData && ugcRequestData.username ? <ApprovedModal ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n    </>)\r\n}\r\nexport default UgcStatus","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { generateRandomArray } from '../../../../../utils';\r\n\r\nconst ModerationSkeleton = () => {\r\n    return (\r\n        <div className=\"row gx-2\">\r\n            {generateRandomArray(20).map((_, index) => (\r\n                <div className='assetsItem' key={index}>\r\n                    <Card className='border-0'>\r\n                        <Card.Body className='p-0'>\r\n                            <div className=\"f-between flex-wrap flex-sm-nowrap border-bottom p-2\">\r\n                                <span className=\"d-flex\">\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                </span>\r\n                                <span className=\"sk_line h-10px w-20px\"></span>\r\n                            </div>\r\n                            <div className=\"sk_img rounded-0 w-100 flex-shrink-0 overflow-hidden\" style={{ paddingBottom: '100%' }}></div>\r\n                            <div className=\"d-flex align-items-center p-3\">\r\n                                <div className=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\">\r\n                                    <div className=\"sk_img symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                    <div className=\"overflow-hidden w-100\" style={{ maxWidth: '130px' }}>\r\n                                        <p className=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p>\r\n                                        <span className=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"d-flex align-items-end flex-column flex-shrink-0\" style={{ width: '100px' }}>\r\n                                    <div className=\"sk_img symbol symbol-28 rounded-1 flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                </span>\r\n                            </div>\r\n                            <div className='d-flex align-items-center p-3 border-top'>\r\n                                <div className='w-50 me-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                                <div className='w-50 ms-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModerationSkeleton;\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType';\r\nimport { connect } from 'react-redux';\r\nimport { REMOVE_TAGGED_PRODUCT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nclass ProductTags extends Component {\r\n    removeTaggProduct = (product_sku, productId, referenceId) => { if(checkPermission('contentGallery', 'editGallery', true)) {this.props.REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId, this.props.navigate); }};\r\n\r\n    render() {\r\n        const { item, listView , index, openContent} = this.props;\r\n        return (item.postproduct && item.postproduct.length > 0 ?\r\n                <Row className='d-flex gx-2 flex-nowrap product-scroll'>\r\n                    {item.postproduct.map((item, index) => {\r\n                        return <Col xs={2} key={index} style={{width:'20%'}}>\r\n                            <div className='w-100 position-relative'>\r\n                                <ImageType mediaClass=\"rounded-1 overflow-hidden position-relative bg-body\" size={100} url={item?.product?.product_image} height={50} width={50} alt={''} isCover={true} />\r\n                                <span className='h-16px w-16px rounded-circle bg-danger cursor-pointer position-absolute f-center text-white fs-10' style={{ top: -6, right: -6 }} onClick={() => this.removeTaggProduct(item.product.product_sku, item.product.id, item.post_id)}>\r\n                                <FontAwesomeIcon icon={'xmark'} />\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                    })}\r\n                    <Col xs={2} style={{width:'20%'}}>\r\n                        <Button variant='light-primary' className='f-center flex-shrink-0 p-0 h-100 w-100 fs-6' onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                            <FontAwesomeIcon icon={'plus'} iconClass={'me-0'}/>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Button variant='light-primary' className={`w-100 box-shadow`} id='tag_pd'  onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />Tag Products\r\n                </Button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { moderation: state.moderation, }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return { REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId, navigate) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)), }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTags)","import React, { Component } from 'react'\r\nimport { Badge, Button } from 'react-bootstrap';\r\n\r\nclass Tags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.item.tags ? String(this.props.item.tags).split(',') : [],\r\n            visibleCount: 5,\r\n        };\r\n    }\r\n\r\n \r\n    handleShowMore = () => {\r\n        this.setState(prevState => ({\r\n            visibleCount: prevState.items.length,\r\n        }));\r\n    };\r\n\r\n    handleShowLess = () => {\r\n        this.setState({\r\n            visibleCount: 5,\r\n        });\r\n    };\r\n    render() {\r\n\r\n        const { items, visibleCount } = this.state;\r\n        const visibleItems = items.slice(0, visibleCount);\r\n        return <>\r\n\r\n            {visibleItems && visibleItems.length > 0 ? <div className=\"d-flex align-items-center flex-wrap mb-2 w-100 overflow-hidden\">\r\n                <div className='w-100 d-flex flex-wrap'>\r\n                    {\r\n                        visibleItems.map((Item, index) => {\r\n                            return Item && String(Item).length > 0 ? <Badge key={index} bg='' className={`badge-outline-secondary ${index == 99999 ? 'border-gradient' : 'border'}`} onClick={this.props.onClickToPostTags(Item)}>{Item}</Badge> : null\r\n\r\n                        })\r\n                    }\r\n                    {items.length > 5 ? visibleCount < items.length ? (\r\n                        <Button variant='secondary' onClick={this.handleShowMore} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show More\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant='secondary' onClick={this.handleShowLess} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show Less\r\n                        </Button>\r\n                    ):null}\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    }\r\n}\r\nexport default Tags","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { connect } from 'react-redux';\r\nimport { GET_LIST_ALL_PIN_TO_TOP_POST } from '../../../../../reducer/keys';\r\nimport { GET_PIN_TO_TOP_LIST, GET_REORDER_PIN_TO_TOP } from '../../../../../actions/moderationActions';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Card, Image, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../utils'\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType'\r\nimport Author from '../../CommonComponents/Author/Author'\r\nimport { Loader } from '../../CommonComponents/Loader';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed); return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({ ...draggableStyle });\r\nconst getListStyle = isDraggingOver => ({});\r\n\r\nclass ChangeOrderModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [], newArray: [], spinner: false, updateOrder: false };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n    componentDidMount() { this.onLoadData(this.props); }\r\n\r\n\r\n    reArrangePosts = () => {\r\n        const { newArray, updateOrder } = this.state;\r\n        const postId = newArray.map(item => item.id);\r\n        const indexing = newArray.map((_, index) => index + 1);\r\n        if (updateOrder) {\r\n            this.setState({ spinner: true })\r\n            this.props.GET_REORDER_PIN_TO_TOP(postId, indexing,\r\n                setTimeout(() => {\r\n                    this.setState({ spinner: false })\r\n                }, 1000)\r\n\r\n            )\r\n        }\r\n\r\n    };\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.openpinToTopModal !== this.props.openpinToTopModal) {\r\n            if (this.props.openpinToTopModal) this.props.GET_PIN_TO_TOP_LIST()\r\n        }\r\n        if (prevProps.pinToTop !== this.props.pinToTop) this.onLoadData(this.props)\r\n    }\r\n\r\n\r\n    onLoadData = (props) => {\r\n        const { pinToTop } = props;\r\n        this.setState({ items: pinToTop, newArray: pinToTop });\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        if (!result.destination) { return; }\r\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\r\n        this.setState({ items, newArray: items, updateOrder: true });\r\n    }\r\n    render() {\r\n        const { openpinToTopModal, closeModalPop } = this.props\r\n        const { spinner } = this.state\r\n        return (\r\n\r\n            <Modal className='pintotop_modal' size=\"lg\" show={openpinToTopModal} onHide={closeModalPop} centered>\r\n                <Modal.Header closeButton >\r\n                    <Modal.Title>Change Order</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='mx-xl-4 px-lg-4 py-lg-2 mx-0 overflow-auto' style={{ height: 500 }}>\r\n                        {this.state.items && this.state.items?.length > 0 ?\r\n                            <DragDropContext onDragEnd={this.onDragEnd} >\r\n                                <Droppable droppableId=\"droppable\">\r\n                                    {(provided, snapshot) => (\r\n                                        <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\r\n                                            {this.state.items && this.state.items.length && this.state.items.map((item, index) => (\r\n                                                <Draggable key={`item-${index}`} draggableId={`item-${index}`} index={index}>\r\n                                                    {(provided, snapshot) => (\r\n                                                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}>\r\n                                                            <Card data-id={item.id} className='mb-4'>\r\n                                                                <Card.Body className='p-2'>\r\n                                                                    <span className='position-absolute start-0 translate-middle h-18px w-18px rounded-circle f-center bg-dark text-gray-100 top-50 fs-10 fw-medium' style={{ zIndex: 1 }}>{index + 1}</span>\r\n                                                                    <div className=\"d-flex flex-lg-row flex-column\">\r\n                                                                        <div className='f-center h-100 text-gray-300 me-2 fs-6'>\r\n                                                                            <FontAwesomeIcon type={'solid'} icon={'grip-dots-vertical'} />\r\n                                                                        </div>\r\n                                                                        {item.type != 1 ? <div className='d-flex flex-shrink-0 flex-column cursor-pointer pe-lg-4 mx-auto mb-lg-0 mb-5' style={{ width: 120 }}>\r\n                                                                            <ImageType mediaClass={'position-relative rounded-1 overflow-hidden w-100'} size={100} height={120} width={120} url={item.postFile || item.newMedia} alt={''} isCover={true} />\r\n                                                                        </div> : null}\r\n                                                                        <div className=\"d-flex flex-grow-1 flex-column pl-lg-5 w-100 overflow-hidden\">\r\n                                                                            <div className=\"d-flex align-items-start mb-1\">\r\n                                                                                <Link href={item.link} target='_blank' className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none text-gray-800\">\r\n                                                                                    <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                                                        imageSize={40}\r\n                                                                                        symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                                                        name={item.postname} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                                                    <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                                                        <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.postname}</strong></p>\r\n                                                                                        <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.postname}</p>\r\n                                                                                    </div>\r\n                                                                                </Link>\r\n                                                                                <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                                                                        <Image className=\"h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                                                    </OverlayTrigger>\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                            <p className='line-clamp line-clamp-3 mb-1'>{ReactHtmlParser(item.postcontent)}</p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </Draggable>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </DragDropContext>\r\n                            :\r\n                            <Loader />}\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant='secondary' className='ms-3 btn-min-w' onClick={closeModalPop}>Cancel</Button>\r\n                    <Button className={`ms-3 btn-min-w ${spinner ? 'spinner' : ''}`} onClick={this.reArrangePosts}>Done</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pinToTop: state.moderation?.pinToTop\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        GET_LIST_ALL_PIN_TO_TOP_POST: () => dispatch(GET_LIST_ALL_PIN_TO_TOP_POST()),\r\n        GET_PIN_TO_TOP_LIST: () => dispatch(GET_PIN_TO_TOP_LIST()),\r\n        GET_REORDER_PIN_TO_TOP: (postId, indexing, calback) => dispatch(GET_REORDER_PIN_TO_TOP(postId, indexing, calback))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeOrderModal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, OverlayTrigger, Tooltip, Button, Image, Badge } from 'react-bootstrap';\r\nimport { GET_FIRST_LETTER, TOAST_ERROR } from '../../../../../../utils';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions';\r\nimport { DashboardModal } from '@uppy/react';\r\nimport UppyUpload from '../../../../../../utils/uppyUpload';\r\nimport $ from 'jquery'\r\nimport { WASABI_PATH } from '../../../../../../actions/api';\r\n\r\nconst uppyUploader = new UppyUpload()\r\nclass EditAside extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = { tagString: [], searchPost: '', selectedOption: [], isLoading: false, uppyProfileOpen: false, profile: '' };\r\n       }\r\n\r\n       componentDidMount() {\r\n              if (uppyUploader) {\r\n                     uppyUploader.uppy.on('transloadit:result', (stepName, result) => {\r\n                            this.props.onChangeAuthorImg(`${WASABI_PATH}tmp/${result.id}.${result.ext}`)\r\n                            setTimeout(() => {\r\n                                   uppyUploader.uppy.cancelAll()\r\n                                   this.setState({ uppyProfileOpen: false })\r\n                            }, 300)\r\n                     })\r\n              }\r\n              this.getTagsArray()\r\n       }\r\n\r\n       getTagsArray = () => {\r\n              let submitTags = (this.props?.tags || \"\").split(\",\").filter(tag => tag.trim().length > 0);\r\n              this.setState({ tagString: submitTags });\r\n\r\n       }\r\n       componentDidUpdate(prevProps) {\r\n              if (prevProps.tags !== this.props.tags) {\r\n                     this.getTagsArray();\r\n              }\r\n       }\r\n\r\n       onLoad = () => {\r\n              const { searchPost } = this.state;\r\n              if (searchPost?.length > 0) {\r\n                     this.setState({ isLoading: true });\r\n\r\n                     autoCompleteSearch(searchPost).then((response) => {\r\n                            const { responseData, responseCode } = response.data;\r\n                            if (responseCode === 200) {\r\n                                   const formattedTags = responseData?.totalTag.map(tag => ({ value: tag, label: tag.charAt(0).toUpperCase() + tag.slice(1) }));\r\n                                   this.setState({ selectedOption: formattedTags, isLoading: false });\r\n                            } else {\r\n                                   this.setState({ selectedOption: [], isLoading: false });\r\n                            }\r\n\r\n                     }).catch(() => {\r\n                            this.setState({ isLoading: false });\r\n                     });\r\n              } else {\r\n                     this.setState({ selectedOption: [], isLoading: false });\r\n              }\r\n       }\r\n\r\n\r\n       onSearchText = (textInput) => { this.setState({ searchPost: textInput }, () => this.onLoad()); }\r\n\r\n       handleSelectChange = (e) => {\r\n              const { tagString } = this.state;\r\n              if (e?.value?.length) {\r\n                     if (tagString.includes(e.value)) {\r\n                            TOAST_ERROR('Tag already exists');\r\n                     } else {\r\n                            this.setState({ tagString: [...tagString, e.value] }, () => this.props.onChangeTag(this.state.tagString.join(',')));\r\n                     }\r\n              }\r\n       };\r\n\r\n\r\n\r\n       onClickToRemoveTag = (index) => event => {\r\n              let { tagString } = this.state;\r\n              tagString.splice(index, 1)\r\n              this.setState({ tagString }, () => this.props.onChangeTag(tagString.join(',')))\r\n       }\r\n\r\n       handleOpen = event => {\r\n              this.setState({ uppyProfileOpen: true, })\r\n              $(\".uppy-Dashboard-close\").click(() => {\r\n                     uppyUploader.uppy.cancelAll()\r\n                     this.setState({ uppyProfileOpen: false })\r\n              })\r\n       }\r\n\r\n       handleSave = () => {\r\n              const { author, handle, onSavePost, content } = this.props;\r\n              if (author && handle && content) { onSavePost(); }\r\n       };\r\n\r\n\r\n       isValidNewOption = (inputValue) => {\r\n              return inputValue.length >= 3;\r\n            };\r\n\r\n       render() {\r\n              const { onChangeAuthor, onChangeHandle, onChangeContent, onClickRemoveAuthorImg, author, handle, authorImage, onSavePost, onSaveTag,  content, handleClose, loading, isTaggModal } = this.props\r\n              const { tagString, isLoading, selectedOption } = this.state\r\n\r\n              const tagsArrayFun = () => {\r\n                     const tagItem = tagString.map((tag, removeIndex) =>\r\n                            <Badge key={tag.toString()} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                   <span className=' text-ellipsis d-block'>{tag}</span>\r\n                                   <Button variant='link' size='sm' className=\"p-0 ms-1 \" onClick={this.onClickToRemoveTag(removeIndex)}>\r\n                                          <FontAwesomeIcon icon={'xmark'} />\r\n                                   </Button>\r\n                            </Badge>\r\n                     );\r\n                     return tagItem;\r\n              }\r\n              return (\r\n                     <div>\r\n                            <div className='p-4 m_sidebar_scroll_'>\r\n                                   {!isTaggModal &&\r\n                                          <Form.Group className='mb-3'>\r\n                                                 <Form.Label className=\"mb-2\" htmlFor=\"author_p_\">Author Profile</Form.Label>\r\n                                                 <div className=\"d-flex align-items-center mb-5\">\r\n                                                        <div className=\"me-3 me-xxl-4\">\r\n                                                               <div className=\"symbol h-70px w-70px position-relative rounded-circle bg-light overflow-hidden\">\r\n                                                                      {authorImage && authorImage != '' ? <Image src={authorImage} alt={author} height={70} width={70} className=\"iobject-center-cover\" load=\"lazy\" fluid />\r\n                                                                             : <span className=\"symbol-label bg-primary text-gray-100-alt fw-bold display-1 text-uppercase\">{GET_FIRST_LETTER(author)}</span>}\r\n\r\n                                                               </div>\r\n                                                        </div>\r\n                                                        <div className=\"d-flex align-items-start flex-column\">\r\n                                                               <div className=\"d-flex align-items-center\">\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={this.handleOpen}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'pen'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={onClickRemoveAuthorImg}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                               </div>\r\n                                                               <div className=\"form-text mt-2\">Allowed file types: png, jpg, jpeg.</div>\r\n                                                        </div>\r\n                                                 </div>\r\n                                          </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_n_\">Author Name <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_n_\" name=\"author_n_\" className={!author.length ? 'is-invalid' : ''} placeholder=\"Enter Author Name\" value={author} onChange={onChangeAuthor} />\r\n                                          {!author.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_h_\">Author Handle <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_h_\" name=\"author_h_\" className={!handle.length ? 'is-invalid' : ''} placeholder=\"Enter Author Handle\" value={handle} onChange={onChangeHandle} />\r\n                                          {!handle.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {isTaggModal ? <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"tags__\">Add Tag</Form.Label>\r\n                                          <div className=\"mb-3\">\r\n                                                 <CreatableSelect className=\"selectpicker\" placeholder={'Enter your Tag'} classNamePrefix=\"selectpicker\" isClearable isLoading={isLoading} options={selectedOption} onChange={this.handleSelectChange} onInputChange={this.onSearchText} value={selectedOption}  isValidNewOption={this.isValidNewOption} />\r\n                                          </div>\r\n                                          {/* <Button  onClick={()=>this.handleAddTagButton(searchPost)}>Add</Button> */}\r\n                                          <div className=\"mb-3 mb-xl-4\">\r\n                                                 <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                                                        {tagsArrayFun()}\r\n                                                 </div>\r\n                                          </div>\r\n                                   </Form.Group>:''}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"post_cont_\">Content</Form.Label>\r\n                                          <Form.Control as={'textarea'} className={`${!content.length ? 'is-invalid' : ''} textarea-min-row-7`} id=\"post_cont_\" placeholder=\"Enter Content\" value={content} onChange={onChangeContent} />\r\n                                          {!content.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                            </div>\r\n                            <div className=\"assets_btn_wrapper p-4 f-center flex-column\">\r\n                                   {!isTaggModal ? <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading || !(author && handle && content)} onClick={this.handleSave}>Save Changes</Button>\r\n                                          : <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading} onClick={()=> onSaveTag()}>Save Changes</Button>}\r\n                                   <Button variant='link' className='text-muted' onClick={handleClose}>Cancel</Button>\r\n                            </div>\r\n\r\n\r\n                            <DashboardModal\r\n                                   id=\"background-image\"\r\n                                   closeModalOnClickOutside\r\n                                   closeAfterFinish\r\n                                   open={this.state.uppyProfileOpen}\r\n                                   onRequestClose={this.handleClose}\r\n                                   uppy={uppyUploader.uppy}\r\n                                   hideUploadButton={false}\r\n                                   autoOpenFileEditor={false}\r\n                                   plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                                   animateOpenClose={true}\r\n                                   proudlyDisplayPoweredByUppy={false}\r\n                                   inline={false}\r\n                                   showProgressDetails={true}\r\n                                   height={750}\r\n                                   browserBackButtonClose={true}\r\n                                   showRemoveButtonAfterComplete={false}\r\n                            />\r\n                     </div>\r\n              );\r\n       }\r\n}\r\n\r\nexport default EditAside;","import ReactHtmlParser from 'react-html-parser';\r\nimport Rating from '../Rating';\r\n\r\n\r\nconst TextType = ({ content, mediaClass, rating, fontSize, lineCount, size }) => {\r\n  return <div className={`position-relative overflow-hidden ${mediaClass}`} style={{paddingBottom:`${size ? size : '100'}%`}}>\r\n            <div className=\"w-100 f-center flex-column position-absolute start-0 top-0 h-100 p-3\">\r\n              {rating ? \r\n              <div className=\"f-center ps-1 mb-4\">\r\n                <Rating className={'mx-1 fs-3'} iconClass=\"mx-1\" rating={rating} />\r\n              </div> \r\n              : null}\r\n              <div className=\"overflow-hidden\">\r\n                <p className={`text-center line-clamp-${lineCount ? lineCount : 4} line-clamp mb-0 ${!fontSize ?'fs-7':''}`} style={{fontSize:fontSize}}>{ReactHtmlParser(content)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n}\r\nexport default TextType\r\n","import React, { Component } from 'react';\r\nimport TextType from '../../../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../../../CommonComponents/MediaType/VideoType';\r\nimport { getImageWidthHeight } from '../../../../../../utils';\r\n\r\n\r\nclass ModalMedia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1,\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n            mediaSize: { height: 400, width: 400 },\r\n        };\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) {\r\n                this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n            }\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot })\r\n        }\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({\r\n                mediaSize: {\r\n                    height: modalData.mediaHeight,\r\n                    width: modalData.mediaWidth\r\n                }\r\n            })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { modalData, handleAllImageError,autoPlay,movePost } = this.props\r\n        const { winWidth, winHeight, mediaSize } = this.state\r\n        const scale = Math.min((winWidth - (winWidth > 1400 ? 850 : 650)) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n\r\n        return (\r\n            modalData.type == 1 ?\r\n                <div className='mx-auto w-100 p-4'>\r\n                    <TextType mediaClass=\"bg-gray-200\" size={120} content={modalData.postcontent} rating={modalData.rating} socialNetworkId={modalData.networkId} fontSize={'calc(14px + .3vw + .3vh)'} lineCount={10} />\r\n                </div>\r\n                :\r\n                <div className='w-100 m-auto' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n                    <div className=\"position-relative\">\r\n                        {(modalData.type == 2 || modalData.type == 4) ?\r\n                            <ImageType mediaClass={'content_img_'} size={paddingBottom} url={modalData.postFile} height={height} width={width} icon={modalData.networkId} rating={modalData.rating} alt={''} handleAllImageError={handleAllImageError} item={modalData} isCover={true} />\r\n                        :\r\n                        (modalData.type == 3 || modalData.type == 5) ?\r\n                            <VideoType key={movePost} item={modalData} mediaClass={'content_video'} size={paddingBottom} url={modalData.mediaUrl || modalData.mediaFile || modalData.mediaClip || modalData.postFile} poster={modalData.postFile} height={height} width={width} autoPlay={autoPlay ? autoPlay : true} muted={false} isCover={true} controls={true} loop={false} isupdate={1} />\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n              \r\n);\r\n    }\r\n}\r\n\r\nexport default ModalMedia;","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport EditAside from './EditAside';\r\nimport { editpost, onUpdateTags } from '../../../../../../actions/moderationActions';\r\nimport ModalMedia from '../Elements/ModalMedia';\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { author: '', handle: '', authorImage: '', postImage: '', content: '', tags: '', type: '', mediaUrl: '', mediaWidth: '', mediaHeight: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize);\r\n        const { modalData } = this.props\r\n        this.setState({ author: modalData.name, handle: modalData.username, authorImage: modalData.picture, postImage: modalData.postFile, content: modalData.postcontent, tags: modalData.tags, type: modalData.type, loading: false, mediaUrl: modalData.mediaUrl, mediaWidth: modalData.mediaUrl, mediaHeight: modalData.mediaUrl })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    onChangeAuthor = event => this.setState({ author: event.target.value })\r\n    onChangeHandle = event => this.setState({ handle: event.target.value })\r\n    onChangeAuthorImg = value => this.setState({ authorImage: value })\r\n    onClickRemoveAuthorImg = event => this.setState({ authorImage: \"\" })\r\n    onChangePostImg = value => this.setState({ postImage: value })\r\n    onChangePostType = value => this.setState({ type: 4 })\r\n    onChangeContent = event => this.setState({ content: event.target.value })\r\n    onChangeTag = value => this.setState({ tags: value })\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n\r\n    onClickTouploadImage = (value, callBack) => this.setState({ postImage: value }, () => callBack())\r\n\r\n\r\n\r\n    onSavePost = event => {\r\n        const { modalData, handleClose } = this.props\r\n        const { authorImage, author, content, handle } = this.state;\r\n        this.setState({ loading: true })\r\n        const postpayload = { content: content,  wallId: localStorage.getItem('wallId'), postId: String(modalData.ptPost), postauthor: author, posthandle: handle, authorpicture: authorImage }\r\n        this.props.editpost(postpayload, handleClose);\r\n    }\r\n\r\n    onSaveTag = event => {\r\n        const { modalData, handleClose, isTaggModal } = this.props\r\n        this.setState({ loading: true })\r\n        const tagPayload = { postId: String(modalData.ptPost) , wallId: String(localStorage.getItem('wallId')), tags: this.state.tags };\r\n        this.props.onUpdateTags(tagPayload, isTaggModal, handleClose)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { modalData, handleClose, isTaggModal, handleAllImageError } = this.props\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>{isTaggModal ? 'Add Tag' : 'Edit Post'}</span>   \r\n                <div className='d-flex align-items-center h-100'>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-wrap\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n                    <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                </div>\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    <EditAside modalData={modalData} onChangeAuthor={this.onChangeAuthor} onChangeHandle={this.onChangeHandle} onChangeAuthorImg={this.onChangeAuthorImg} onChangePostImg={this.onChangePostImg} onChangeContent={this.onChangeContent} onChangeTag={this.onChangeTag} onClickRemoveAuthorImg={this.onClickRemoveAuthorImg} handleClose={handleClose} onSavePost={this.onSavePost} onSaveTag={this.onSaveTag} isTaggModal={isTaggModal} {...this.state} />\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editpost: (payload, callback) => dispatch(editpost(payload, callback)),\r\n        onUpdateTags: (data, isTaggModal, callback) => dispatch(onUpdateTags(data, isTaggModal, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","    import React, { useEffect } from \"react\";\r\n    import Draggable from \"react-draggable\";\r\n    import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\n    const Hotspot = ({\r\n      ImageClass,\r\n      item,\r\n      enableHotspot,\r\n      activeCarousalPostsList,\r\n      activeCarousalPost,\r\n      spotWidth,\r\n      spotHeight,\r\n      onControlledDrag,\r\n      changePrdId,\r\n      ctaData,\r\n    }) => {\r\n      useEffect(() => {}, [activeCarousalPostsList?.length ? activeCarousalPostsList : item.postproduct]);\r\n\r\n      const getCarousal = activeCarousalPostsList?.length\r\n        ? item?.imageList?.find((e) => e.referenceId === activeCarousalPost)\r\n        : null;\r\n\r\n\r\n      const renderHotspots = (hotspotList) =>\r\n        hotspotList.map((Item, index) => {\r\n          const left = (spotWidth * Item.hotspot.left.replace(\"%\", \"\")) / 100;\r\n          const top = (spotHeight * Item.hotspot.top.replace(\"%\", \"\")) / 100;\r\n\r\n          return (\r\n            <Draggable\r\n              bounds=\"parent\"\r\n              onStop={onControlledDrag}\r\n              key={`hotspot_${Item.ugc_product}`}\r\n              onStart={() => changePrdId(Item.ugc_product)}\r\n              defaultPosition={{ x: left, y: top }}\r\n            >\r\n              <div className=\"h-16px w-16px position-absolute\">\r\n                <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                    <Tooltip data-theme=\"light\">\r\n                      <div className=\"text-start\">\r\n                        {Item.product?.product_title || \"\"}\r\n                        {((Item.product?.product_discount > 0) || Item.product?.product_price > 0) && (\r\n                          <div className=\"fw-bold fs-6\">\r\n                            {Item.product?.price_currency_symbol}\r\n                            {Item.product?.product_discount > 0\r\n                              ? Item.product.product_discount\r\n                              : Item.product?.product_price}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <div\r\n                    className={`blob ${ctaData?.hotspot_type === 1 ? \"blob_002\" : \"blob_001\"}`}\r\n                    style={{ backgroundColor: ctaData?.hotspot_color }}\r\n                  >\r\n                    <div\r\n                      className=\"f-center fw-medium fs-8\"\r\n                      style={{ color: ctaData?.hotspot_type_color, lineHeight: \"20px\" }}\r\n                    >\r\n                      {ctaData?.hotspot_type === 1 ? index + 1 : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </Draggable>\r\n          );\r\n        });\r\n\r\n\r\n      return (\r\n        <div className={`h-100 w-100 ${ImageClass}`}>\r\n          {enableHotspot == 1 && spotWidth ? (\r\n            activeCarousalPostsList?.length && getCarousal?.hotspot\r\n              ? renderHotspots(activeCarousalPostsList)\r\n              : item.postproduct?.length && !activeCarousalPost\r\n              ? renderHotspots(item.postproduct)\r\n              : null\r\n          ) : null}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    export default Hotspot;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\nimport ModalMedia from \"./Elements/ModalMedia\";\r\nimport { CAROUSAL_POST_PRODUCTS } from \"../../../../../actions/moderationActions\";\r\nimport {getImageSize} from 'react-image-size';\r\n\r\nconst CarousalPost = (props) => {\r\n\r\n    const { updateCarousalPost, item, handleAllImageError } = props\r\n\r\n    const arrowShow = item.imageList.length > 1;\r\n    const splideRef = useRef(null);\r\n    const  winWidth = window.innerWidth\r\n    const  winHeight = window.innerHeight\r\n    const [mediaSize, setmediaSize] = useState({ height: 400, width: 400 })\r\n    const [movePost, setmovePost] = useState(0)\r\n\r\n    const settings = {\r\n        type: \"slide\",\r\n        perPage: 1,\r\n        pagination: true,\r\n        arrows: arrowShow,\r\n        start: 0,\r\n    };\r\n\r\n    useEffect(() => {\r\n        const ids = item.imageList.map(item => item.referenceId).join(',');\r\n        onMediaLoad(item.imageList[0])\r\n\r\n        CAROUSAL_POST_PRODUCTS(ids).then(({ data: { responseCode, responseData } }) => {\r\n            if (responseCode === 200) {\r\n                setmovePost(item.imageList[0].referenceId)\r\n                updateCarousalPost(item.imageList[0].referenceId, responseData.postproduct)\r\n            } \r\n        }).catch((error) => {\r\n            console.log(\"error\", error)\r\n            updateCarousalPost([])\r\n        })\r\n    }, [item]);\r\n\r\n\r\n    const onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            setmediaSize({\r\n                height: modalData.mediaHeight,\r\n                width: modalData.mediaWidth\r\n            })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageSize(modalData.newMedia);\r\n                setmediaSize({\r\n                    height: height,\r\n                    width: width\r\n                })\r\n            } catch (error) {\r\n                setmediaSize({\r\n                    height: 100,\r\n                    width: 100\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const splideInstance = splideRef.current?.splide;\r\n        if (splideInstance) splideInstance.on(\"move\", () => {\r\n            onMediaLoad(item.imageList[splideInstance.index])\r\n            updateCarousalPost(item.imageList[splideInstance.index].referenceId)\r\n            setmovePost(item.imageList[splideInstance.index].referenceId)\r\n        })\r\n\r\n        return () => {\r\n            splideInstance?.destroy();\r\n        };\r\n    }, [item.imageList]);\r\n\r\n    return (\r\n        <div className=\"m_c_p m-auto\">\r\n            {  item.imageList && item.imageList.length > 0 ? (\r\n                <Splide\r\n                    ref={splideRef}\r\n                    hasTrack={false}\r\n                    options={settings}\r\n                    key={item.id}\r\n                >\r\n                    <SplideTrack>\r\n                        {item.imageList.map((assetItem, assetKey) => (\r\n                            <SplideSlide key={assetKey} className={'f-center'}>\r\n                                <ModalMedia\r\n                                    modalData={assetItem}\r\n                                    movePost={movePost}\r\n                                    handleAllImageError={handleAllImageError}\r\n                                    autoPlay={assetItem.referenceId==movePost}\r\n                                />\r\n                            </SplideSlide>\r\n                        ))}\r\n                    </SplideTrack>\r\n                </Splide>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarousalPost;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Modal, Dropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { ENABLE_HOTSPOT_ACTION, REMOVE_TAGGED_PRODUCT_ACTION, UPDATE_HOTSPOT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { getUserInfo_afterChanges } from '../../../../../actions/loginActions';\r\nimport EditPost from './EditElements';\r\nimport Hotspot from './Elements/Hotspot';\r\nimport ModalMedia from './Elements/ModalMedia';\r\nimport './modal.scss';\r\nimport ErrorFound from '../../../../ErrorFound';\r\nimport { getImageWidthHeight } from '../../../../../utils';\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\nimport CarousalPost from './CarousalPost';\r\n\r\nconst ContentModalAside = React.lazy(() => import('./Elements/ContentModalAside'));\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spotWidth: 0, spotHeight: 0, searchTag: '', selectedTag: [], productId: 0, enableHotspot: this.props.modalData?.hotspot, loading: false,\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n            paddingBottom: 100,\r\n            mediaSize: { height: 400, width: 400 },\r\n            editPost: false,\r\n            isTaggModal: false,\r\n            activeCarousalPost: 0,\r\n            activeCarousalPostsList: [],\r\n            carousalPostsList: [],\r\n        }\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot, activeCarousalPost: 0, activeCarousalPostsList: [], carousalPostsList: [], })\r\n        }\r\n    }\r\n\r\n    handleResizeg = () => {\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    \r\n\r\n    updateCarousalPost = (e, data, refId = 0, status) => {\r\n\r\n        // status=1 add product,2=remove product\r\n\r\n        const { modalData } = this.props\r\n\r\n        const getFilteredData = (list) => list.filter((obj) => obj.post_id == e);\r\n\r\n        if (data) this.setState({ carousalPostsList: data })\r\n\r\n        if (status) {\r\n            const getPostData =\r\n                status == 2 ? data.filter((item) => item.id != refId) : [...data];\r\n            if (status == 1) getPostData.push(refId)\r\n            const filteredData = getFilteredData(getPostData);\r\n            this.setState(\r\n                {\r\n                    carousalPostsList: getPostData,\r\n                    activeCarousalPostsList: []\r\n                },\r\n                () => this.updateCarousalPostList(filteredData)\r\n            );\r\n        } else {\r\n\r\n \r\n            const hotspotValue = modalData?.imageList?.find(item => item.referenceId == e);\r\n            const filteredData = getFilteredData(data || this.state.carousalPostsList);\r\n\r\n            this.setState(\r\n                {\r\n                    activeCarousalPost: e,\r\n                   enableHotspot: hotspotValue?.hotspot || false,\r\n                    activeCarousalPostsList: [],\r\n                },\r\n                () => this.updateCarousalPostList(filteredData)\r\n            );\r\n        }\r\n    }\r\n\r\n    updateCarousalPostList = (e) =>{\r\n        \r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) {\r\n                this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n            }\r\n        }, 100);\r\n\r\n         this.setState({ activeCarousalPostsList: e })}\r\n\r\n   \r\n\r\n    updateHotspot = (productId, location_hotspot) => {\r\n\r\n        const { carousalPostsList, activeCarousalPost } = this.state\r\n\r\n        const updatedData = carousalPostsList?.length && carousalPostsList.map(item => (\r\n            item.ugc_product == productId ?\r\n                {\r\n                    ...item, // Keep other properties unchanged\r\n                    hotspot: location_hotspot,\r\n                    product: {\r\n                        ...item.product, // Spread the child object\r\n                        hotspot: location_hotspot // Update the `age` value\r\n                    }\r\n                } : item\r\n        ));\r\n\r\n        this.updateCarousalPost(activeCarousalPost, updatedData)\r\n    }\r\n\r\n    onControlledDrag = (e, position) => {\r\n        const { x, y } = position;\r\n        const { spotWidth, spotHeight, productId, activeCarousalPost } = this.state;\r\n        const { modalData } = this.props;\r\n        let l = x * 100 / spotWidth;\r\n        let t = y * 100 / spotHeight;\r\n        const location_hotspot = { 'left': `${l}%`, 'top': `${t}%` }\r\n        const hostpot = `left:${l}%;top:${t}%;`\r\n        this.props.UPDATE_HOTSPOT_ACTION(productId, activeCarousalPost ? activeCarousalPost : modalData?.referenceId, location_hotspot, hostpot, activeCarousalPost ? this.updateHotspot : null)\r\n    };\r\n\r\n\r\n    changeHotspotStatus = (hotspotEnable, referenceId) => { \r\n        const { activeCarousalPost } = this.state;\r\n        let isHotspotEnable = hotspotEnable == 1 ? 0 : 1;\r\n        this.setState({ enableHotspot: isHotspotEnable })\r\n        this.props.ENABLE_HOTSPOT_ACTION(isHotspotEnable, activeCarousalPost ? activeCarousalPost : referenceId, this.onSaveCallBack, activeCarousalPost);\r\n    };\r\n\r\n    changePrdId = (id) => {\r\n        this.setState({ productId: id })\r\n    }\r\n\r\n    onSaveCallBack = () => { \r\n\r\n        const { activeCarousalPost } = this.state;\r\n        const { modalData } = this.props;\r\n\r\n        var enableHotspot = this.props.modalData?.hotspot\r\n\r\n        if(activeCarousalPost){\r\n            const getCarousal = modalData?.imageList?.find((e)=>e.referenceId==activeCarousalPost)\r\n            enableHotspot = getCarousal.hotspot\r\n        }\r\n        \r\n        this.setState({ enableHotspot: enableHotspot })\r\n    }\r\n    \r\n\r\n    responceApi = () => {\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    handleClose = () => this.props.modalCallback(false)\r\n    editPostFun = (status) => this.setState({ editPost: !this.state.editPost, isTaggModal: status })\r\n\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({ mediaSize: { height: modalData.mediaHeight, width: modalData.mediaWidth } })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    editPostFun = (status) => checkPermission('contentGallery', 'editGallery', true) ? this.setState({ editPost: !this.state.editPost, isTaggModal: status }) : {}\r\n\r\n    render() {\r\n        const { modalToggle, modalData, onRefreshPost, filter, ctaData, postPostUpdate, currentIndex, clickToPin, clickToGetUgc, clickToDeletePost, clickToBlockUser, handleAllImageError } = this.props\r\n        const { spotWidth, spotHeight, enableHotspot, winWidth, winHeight, mediaSize, editPost, isTaggModal, activeCarousalPost, activeCarousalPostsList, carousalPostsList } = this.state;\r\n        const scale = Math.min((winWidth - 450) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n\r\n        return <Modal size={'full'} show={modalToggle} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n\r\n\r\n                <span className='text-muted fw-medium'>{editPost ? 'Edit Post' : 'General Info'}</span>\r\n                <div className='d-flex align-items-center h-100'>\r\n                    {!editPost ?\r\n                        <>\r\n                            <div className=\"d-none d-lg-flex h-100\">\r\n                                {\r\n                                    <>\r\n                                        {[18, 2].includes(modalData?.networkId) ?\r\n                                            <Button variant={'secondary'} className={`p-0 f-center border-0 me-3 btn-active-primary flex-shrink-0 refresh_post_media_Popup${modalData.id}`} onClick={() => onRefreshPost(modalData)} style={{ display: 'none' }}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'arrows-rotate'} iconClass={'me-1'} />\r\n                                                Refresh Post\r\n                                            </Button> : null}\r\n                                        {(((modalData.networkId == 3 && modalData.feedFilter == 62) || modalData.networkId == 7 || (modalData.networkId == 18 && (modalData.feedFilter == 24 || modalData.feedFilter == 25 || modalData.feedFilter == 26))) && modalData.ugcstatus == null && modalData.type != 1) ?\r\n                                            <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={clickToGetUgc(modalData)}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'} />\r\n                                                Get Rights\r\n                                            </Button> : null}\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(true)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />\r\n                                            Tags\r\n                                        </Button>\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(false)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'pen'} iconClass={'me-1'} />\r\n                                            Edit Post\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <Dropdown align=\"end\" className=\"f-center position-relative ms-4 h-100\">\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary arrow_disabled h-100\">\r\n                                    <FontAwesomeIcon icon={'ellipsis'} iconClass={'me-1'} />More\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {(modalData.ugcstatus != 1 || modalData.ugcstatus != 2) ?\r\n                                        <Dropdown.Item onClick={clickToDeletePost(modalData, modalData.id, modalData.status, currentIndex, modalData.feedId, modalData.feedFilter)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'trash-can'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">Delete Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : null}\r\n                                    <Dropdown.Item onClick={clickToBlockUser(currentIndex, modalData.id, modalData.username, 'grid', localStorage.getItem('wallId'))}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'ban'} iconClass={'me-1'} />\r\n                                        <span className=\"navi-text\">Block User</span>\r\n                                    </Dropdown.Item>\r\n                                    {modalData.newlink != '' && modalData.newlink != null ?\r\n                                        <Dropdown.Item href={modalData.newlink} target=\"_blank\">\r\n                                            <FontAwesomeIcon type={'solid'} icon={'paper-plane'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">View Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : <></>}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </>\r\n                        : null}\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={this.handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_left rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex - 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-left'} />\r\n                    </Button>\r\n                    <div className='w-100 position-relative' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n\r\n                        {\r\n                            modalData.imageList && Object.keys(modalData.imageList).length ?\r\n                                <CarousalPost carousalPostsList={carousalPostsList} updateCarousalPost={this.updateCarousalPost} item={modalData} handleAllImageError={handleAllImageError} />\r\n                                :\r\n                                <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                        }\r\n\r\n\r\n                        {!(modalData.type == 3 || modalData.type == 5) ? <div className=\"position-absolute top-0 start-0 w-100 h-100\" style={{ zIndex: 1 }} ref={this.hotspotRef}>\r\n                            <Suspense fallback={<></>}>\r\n                                <ErrorFound><Hotspot ImageClass={'hotspot-section'} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} ImageUrl={modalData?.newMedia} spotWidth={spotWidth} spotHeight={spotHeight} enableHotspot={enableHotspot} item={modalData} width={width} height={height} onControlledDrag={this.onControlledDrag} changePrdId={this.changePrdId} imgHeight={modalData?.mediaHeight} imgWidth={modalData?.mediaWidth} ctaData={ctaData} /></ErrorFound>\r\n                            </Suspense>\r\n                        </div> : null}\r\n                    </div>\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_right rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex + 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'} />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    {editPost ?\r\n                        <EditPost handleClose={() => this.editPostFun(false)} modalData={modalData} filter={filter} isTaggModal={isTaggModal} handleAllImageError={handleAllImageError} />\r\n                        :\r\n                        <Suspense fallback={<></>}>\r\n                            {modalData ? <ContentModalAside updateCarousalPost={this.updateCarousalPost} carousalPostsList={carousalPostsList} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} modalData={modalData} changeHotspotStatus={this.changeHotspotStatus} enableHotspot={enableHotspot} postPostUpdate={postPostUpdate} key={modalData?.id} modalCallback={this.props.modalCallback} /> : null}\r\n                        </Suspense>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        UPDATE_HOTSPOT_ACTION: (productId, item, referenceId, location_hotspot, hostpot, callBack) => dispatch(UPDATE_HOTSPOT_ACTION(productId, item, referenceId, location_hotspot, hostpot, callBack)),\r\n        REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)),\r\n        ENABLE_HOTSPOT_ACTION: (id, referenceId, callBack, isCarousal) => dispatch(ENABLE_HOTSPOT_ACTION(id, referenceId, callBack, isCarousal)),\r\n        getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","import React, { Component, useEffect, useState } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport { ExpiredPostInstaQueue } from '../../../../../actions/moderationActions'\r\nimport { isRefresh } from '../../../../../utils'\r\nclass RefreshPostData extends Component {\r\n    state = {\r\n        isRequest: false\r\n    }\r\n    componentDidMount() {\r\n        const { isRequest } = this.state\r\n        const { item } = this.props\r\n        if (isRefresh(item)) {\r\n            this.setState({ isRequest: true }, () => ExpiredPostInstaQueue(item))\r\n        }\r\n    }\r\n    render() {\r\n        const { refreshPostLoading, onRefreshPost, item } = this.props\r\n        return <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh Post</Tooltip>} >\r\n            <span className={`refresh_post_media_${item.id} me-2 cursor-pointer ${refreshPostLoading ? \"disabled\" : \"\"}`} onClick={() => onRefreshPost(item)} style={{ display: 'none' }}>\r\n                <span className={`refresh-icon-${item.id} d-inline-block`}><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n            </span>\r\n        </OverlayTrigger>\r\n    }\r\n}\r\n\r\nexport default RefreshPostData","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\nimport moment from 'moment';\r\nimport { clickToPostPin, clickToDeletePost, clickToBlockUser, clickToPostStatus, GET_UGC_POST_DETAIL, ugcModal, GET_UGC_REQUEST, UPDATE_INSTA_POST_ACTION } from '../../../../actions/moderationActions'\r\nimport ProductTags from './Elements/TagedProducts'\r\nimport Tags from './Elements/Tags'\r\nimport { TIKTOK_UPDATE_STATUS, GET_NETWORK_ICON, GET_NETWORK_NAME, isRefresh } from '../../../../utils';\r\nimport ChangeOrderModal from './Elements/ChangeOrderModal'\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\r\nimport { OverlayTrigger, Dropdown, Tooltip, Card, Form, Button, Image } from 'react-bootstrap'\r\nimport { baseUrl, ImagePlaceholder } from '../../../../Assets/AssetsHelper';\r\nimport ContentModal from './ContentModal/ContentModal';\r\nimport Masonry from \"react-masonry-component\";\r\nimport Author from '../CommonComponents/Author/Author';\r\nimport TextType from '../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../CommonComponents/MediaType/VideoType';\r\nimport RefreshPostData from './Elements/RefreshPost'\r\nimport Rating from '../CommonComponents/Rating';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\n\r\n\r\n\r\nclass MasonryView extends Component {\r\n    imageQueue = [];\r\n    state = { postID: null, id: null, data: null, itemIndex: null, modalData: null, firstRequest: false, openpinToTopModal: false, showModal: false, currentIndex: null }\r\n    tourImport = null\r\n\r\n\r\n    clickToPin = (index, postId, status) => event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostPin(index, postId, status) }\r\n\r\n    clickToGetUgc = (item) => event => { if (checkPermission('contentGallery', 'editGallery', true)) { this.props.getUgcDetails(item); this.openUgcModal() } }\r\n\r\n    clickToDeletePost = (item, index) => event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToDeletePost(item, index, this.props.navigate) }\r\n\r\n    clickToBlockUser = (index, userName) => event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToBlockUser(index, userName) }\r\n\r\n    clickToPostStatus = (index, postId, value) => event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatus(index, postId, value) }\r\n\r\n    onClickToPostTags = (tags) => event => { this.props.searchTagsFilter(tags) }\r\n\r\n    openUgcModal = (data) => { this.props.ugcModal(true) }\r\n\r\n    clickToGetLink = (type, item) => event => {\r\n        this.props.getUgcDetails(item)\r\n        this.props.GET_UGC_REQUEST(item)\r\n        this.props.onShow(type, item.ugcmodified)\r\n    }\r\n\r\n    handleImageError = (e) => {\r\n        const src = e.target.getAttribute(\"data-id\");\r\n        if (!this.imageQueue.includes(src)) {\r\n            this.imageQueue.push(src);\r\n            if (!this.state.firstRequest) this.processImageQueue();\r\n        }\r\n    };\r\n\r\n    processImageQueue = async () => {\r\n        this.setState({ firstRequest: true })\r\n        const src = this.imageQueue[0];\r\n        const imgTarget = document.getElementById(`imgID${src}`);\r\n        if (src) {\r\n            TIKTOK_UPDATE_STATUS(src).then(({ data }) => {\r\n                this.imageQueue.shift();\r\n                if (imgTarget) imgTarget.src = data.media;\r\n                this.processImageQueue()\r\n            })\r\n                .catch((error) => {\r\n                    this.imageQueue.shift();\r\n                    if (imgTarget) imgTarget.src = ImagePlaceholder;\r\n                    this.processImageQueue()\r\n                })\r\n        }\r\n    };\r\n\r\n    onRefreshPost = async (item) => {\r\n        const { UPDATE_INSTA_POST_ACTION } = this.props\r\n        if (checkPermission('contentGallery', 'editGallery', true)) await UPDATE_INSTA_POST_ACTION(item)\r\n\r\n    }\r\n\r\n    handleModalShow = (data, index) => {\r\n        this.setState({ showModal: true, modalData: data, currentIndex: index })\r\n    }\r\n\r\n    handleCallback = (dataEvent) => {\r\n        this.setState({\r\n            showModal: dataEvent, modalData: dataEvent ? this.state.modalData : null, currentIndex: null\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.listData !== prevProps.listData) {\r\n            this.setState({ modalData: this.props.listData[this.state.currentIndex] });\r\n        }\r\n    }\r\n\r\n\r\n    slideAssets = (currentIndex) => event => {\r\n        const { listData } = this.props\r\n        if (currentIndex === -1) {\r\n            let count = listData.length - 1\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n        else {\r\n            let count = listData.length == currentIndex ? 0 : currentIndex\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { moderation } = this.props;\r\n        const tourStep = localStorage.getItem('tourStep');\r\n        if(localStorage.getItem('isTour') === 'true' && moderation?.listData?.length && (tourStep === '4' || tourStep === '5')){\r\n            this.checkTour()\r\n            \r\n        }\r\n    }\r\n\r\n    checkTour = async () => {\r\n        const tourStep = localStorage.getItem('tourStep');\r\n        if(!this.tourImport) this.tourImport = import('../../../../actions/appTour')\r\n        const { default: appTour } = await this.tourImport\r\n        const { tour } = new appTour(this.props.navigate);   \r\n        if (tourStep === '4') setTimeout(() => { this.props.navigate('/content/products'); tour.drive(2); }, 1000);\r\n        else if (tourStep === '5') setTimeout(() => tour.drive(3), 1000);\r\n    };\r\n\r\n    render() {\r\n        const PersonalizationUgcRights = 1\r\n        const { total, activeTab, filter, moderation, getUgcDetails, ugcData, ugcPopup, ugcRequestData, onShow, postCarosal, handleAllImageError } = this.props\r\n        const { openpinToTopModal, showModal, modalData } = this.state;\r\n        let selection = filter?.tags.join()\r\n\r\n        return (<div className=\"w-100 mb-4 mb-lg-0\">\r\n            <Masonry className={`row gx-2`} elementType={\"div\"} disableImagesLoaded={false} updateOnEachImageLoad={true} enableResizableChildren > {\r\n                (moderation?.listData && moderation?.listData.length > 0) ? moderation?.listData.map((item, index) => {\r\n                    return (item.status == activeTab || activeTab == 0) ?\r\n                        <div key={`post${index}_${item.id}`} total-items={total} className={`assetsItem`} id={`content_id-${item.id}`} data-post-id={item.id} data-highlight={item.highlight} data-pinned={item.pin} data-created={item.createdAt}>\r\n                            <ErrorFound>\r\n                                <Card className='border-0'>\r\n                                    <Card.Body className=\"p-0\">\r\n                                        <div className=\"f-between p-2\" style={{ boxShadow: '0px 1px 0px rgba(0,0,0,.1)' }}>\r\n                                            <div className=\"d-flex align-items-center list-inline mb-0\" id={`post-actions-${item.id}`}>\r\n                                                <Form.Check className='me-2' checked={item.isChecked} value={item.isChecked} onChange={this.props.clickPostChecked(index)} />\r\n\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Pin to Top</Tooltip>}>\r\n                                                    <span className={`w-18px f-center fs-8 me-2 cursor-pointer ${item.pin ? 'text-primary' : 'text-muted'}`} onClick={this.clickToPin(index, item.imageList?.length ? item.ptPost : item.postId, item.pin)} data-value={item.pin}>\r\n                                                        <FontAwesomeIcon type={'solid'} icon={'thumbtack'} />\r\n                                                    </span>\r\n                                                </OverlayTrigger>\r\n                                                {(((item.networkId == 3 && item.feedFilter == 62) || (item.networkId == 18 && (item.feedFilter == 24 || item.feedFilter == 25 || item.feedFilter == 26))) && item.ugcstatus == null && item.type != 1 && localStorage.getItem('wallLimitExceed') != 'true') ?\r\n                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Get Rights</Tooltip>}>\r\n                                                        <span className=\"w-18px f-center fs-8 me-2 cursor-pointer\" onClick={() => { if (checkPermission('contentGallery', 'editGallery', true)) { getUgcDetails(item); this.openUgcModal() } }}>\r\n                                                            {item.ugcRights == null || item.ugcstatus == 4 ?\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-muted'} />\r\n                                                                : item.ugcstatus == 2 ?\r\n                                                                    <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-success'} />\r\n                                                                    : item.ugcstatus == 1 ?\r\n                                                                        <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'text-warning'} />\r\n                                                                        : item.ugcstatus == 3 ?\r\n                                                                            <FontAwesomeIcon type={'solid'} icon={'user-xmark'} iconClass={'text-danger'} />\r\n                                                                            : ''}\r\n                                                        </span>\r\n                                                    </OverlayTrigger>\r\n                                                    : null}\r\n\r\n                                                {[18, 2].includes(item?.networkId) ?\r\n                                                    <RefreshPostData onRefreshPost={this.onRefreshPost} item={item} />\r\n                                                    : null}\r\n                                            </div>\r\n\r\n                                            <Dropdown>\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>More Actions</Tooltip>}>\r\n                                                    <Dropdown.Toggle variant='secondary' className=\"arrow_disabled dropdown-toggle border-0 p-0\">\r\n                                                        <FontAwesomeIcon icon={'ellipsis'} />\r\n                                                    </Dropdown.Toggle>\r\n                                                </OverlayTrigger>\r\n                                                <Dropdown.Menu>\r\n                                                    {item.ugcstatus != 1 || item.ugcstatus != 2 ?\r\n                                                        <Dropdown.Item onClick={this.clickToDeletePost(item, index)}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'trash-can'} /></span>\r\n                                                            Delete Post\r\n                                                        </Dropdown.Item> : null}\r\n                                                    <Dropdown.Item onClick={this.clickToBlockUser(index, item.username)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                                                        <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'ban'} /></span>\r\n                                                        Block User\r\n                                                    </Dropdown.Item>\r\n                                                    {item.newlink != '' && item.newlink != null ?\r\n                                                        <Dropdown.Item href={item.newlink} target=\"_blank\">\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'paper-plane'} /></span>\r\n                                                            View Post\r\n                                                        </Dropdown.Item>\r\n                                                        : null}\r\n                                                    {item.pin ?\r\n                                                        <Dropdown.Item onClick={() => this.setState({ openpinToTopModal: true })}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'right-left'} /></span>\r\n                                                            Change Order\r\n                                                        </Dropdown.Item>\r\n                                                        : ''}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center cursor-pointer flex-column\">\r\n                                            <div className='position-relative w-100'>\r\n                                                {Object.keys(item.recommendation).length > 0 ?\r\n                                                    <div className={`image_type position-absolute start-0 rounded-4 f-center mt-2 ms-2 block-center recomm_type_${item.recommendation.type}`}>\r\n                                                        <div className={`h-10px w-10px rounded-circle d-flex flex-shrink-0 ${item.recommendation.type == 1 ? 'bg-success' : item.recommendation.type == 2 ? 'bg-warning' : item.recommendation.type == 3 ? 'bg-danger' : null}`}></div>\r\n                                                        <div className=\"img_quality_status\"><span className=\"fs-10 text-ellipsis px-1 text-light fw-medium d-block\">{item.recommendation.label}</span></div>\r\n                                                    </div>\r\n                                                    : null}\r\n\r\n                                                <div onClick={() => localStorage.getItem('wallLimitExceed') != 'true' ? this.handleModalShow(item, index) : {}}>\r\n\r\n                                                    {item.imageList && item.imageList.length ?\r\n                                                        <span className='position-absolute top-0 end-0 p-2' style={{ zIndex: 2 }}>\r\n                                                            <FontAwesomeIcon type={'solid'} icon={'clone'} iconClass={'text-white filter-shadow'} />\r\n                                                        </span> : null}\r\n\r\n                                                    {item.type == 1 ?\r\n                                                        <TextType mediaClass={'bg-light'} content={item.postcontent} rating={item.rating} socialNetworkId={item.networkId} />\r\n                                                        :\r\n                                                        (item.type == 2 || item.type == 4) ?\r\n                                                            <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} isCover={true} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} item={item} />\r\n                                                            :\r\n                                                            (item.type == 3 || item.type == 5) ?\r\n                                                                <>{item.mediaClip ?\r\n                                                                    <VideoType item={item} mediaClass={'content_video'} size={false} url={item.mediaClip} poster={item.postFile} height={item.mediaHeight} width={item.mediaWidth} autoPlay={true} muted={true} isCover={true} controls={false} loop={true} />\r\n                                                                    : <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} isCover={true} item={item} />}\r\n                                                                    <div className='position-absolute f-center h-100 w-100 start-0 top-0 text-white' style={{ fontSize: 45 }}>\r\n                                                                        <FontAwesomeIcon icon={'circle-play'} iconClass={'filter-shadow'} />\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null}\r\n                                                </div>\r\n\r\n                                                <div className=\"position-absolute w-100 start-0 bottom-0 p-3 w-100\" style={{ overflowX: 'auto', zIndex: 1 }}>\r\n                                                    <ErrorFound><ProductTags item={item} openContent={(item, index) => this.handleModalShow(item, index)} index={index} navigate={this.props.navigate} /></ErrorFound>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {(PersonalizationUgcRights == 1) ? (item.ugcstatus == 1 || item.ugcstatus == 2 || item.ugcstatus == 3 || item.ugcstatus == 4) ?\r\n                                                <div className=\"w-100\">\r\n                                                    {item.ugcstatus == 1 ?\r\n                                                        <div onClick={this.clickToGetLink(1, item)} className=\"bg-warning f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-clock'} />\r\n                                                            </span>\r\n                                                            Pending\r\n                                                            {item.ugccreated ?\r\n                                                                <small>\r\n                                                                    ({item.ugccreated ? moment(moment(item.ugcmodified, 'YYYY-MM-DD  HH:mm:ss').utcOffset(0)).fromNow() : null})\r\n                                                                </small>\r\n                                                                : null}\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 2 ?\r\n                                                        <div onClick={this.clickToGetLink(2, item)} className=\"bg-success f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} />\r\n                                                            </span>\r\n                                                            Approved\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 3 ?\r\n                                                        <div onClick={this.clickToGetLink(3, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Rejected\r\n                                                        </div>\r\n                                                        : null}\r\n\r\n                                                    {item.ugcstatus == 4 ?\r\n                                                        <div onClick={this.clickToGetLink(4, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Expired\r\n                                                        </div>\r\n                                                        : null}\r\n                                                </div>\r\n                                                : null\r\n                                                : null}\r\n\r\n                                            {item.ctastatus == 1 && item.buttonText != '' ?\r\n                                                <div className={`d-flex p-2 w-100 grid-cta-status-${item.id}`}>\r\n                                                    <a className=\"btn font-weight-bold text-nowrap w-100\" title={item.buttonText} target=\"_blank\" href={`${item.buttonUrl && item.buttonUrl.includes('http') ? item.buttonUrl : `//${item.buttonUrl}`}`} style={{ backgroundColor: item.ctaButtonColor, color: item.ctaTextColor }} >\r\n                                                        <span>{item.buttonText}</span>\r\n                                                    </a>\r\n                                                </div>\r\n                                                : null}\r\n                                        </div>\r\n                                        {item.rating > 0 && item.type != 1 ? <div className='d-flex justify-content-start p-3 pb-0'>\r\n                                            <Rating className={'fs-5'} iconClass=\"me-1\" rating={item.rating} />\r\n                                        </div> : null}\r\n                                        <div className=\"p-3\">\r\n                                            <Tags item={item} onClickToPostTags={this.onClickToPostTags} selection={selection} key={item.tags} />\r\n                                            <div className=\"f-between\">\r\n                                                <div className=\"d-flex align-items-center pe-2\" style={{ maxWidth: 'calc(100% - 25px)' }}>\r\n                                                    <div className='d-flex align-items-center overflow-hidden' style={{ maxWidth: '100%' }}>\r\n                                                        <Author imageSize={36}\r\n                                                            symbolClass={'symbol-label fs-5'}\r\n                                                            className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                            name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                        <div className=\"d-flex flex-column flex-grow-1 overflow-hidden\">\r\n                                                            {item?.link ?\r\n                                                                <a href={item?.link} target=\"_blank\" className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</a>\r\n                                                                :\r\n                                                                <span className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</span>}\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\">@{parse(item.username)}</span>\r\n                                                                <span className=\"h-4px w-4px rounded-circle mx-1 d-flex flex-shrink-0\" style={{ backgroundColor: 'var(--bs-gray-600)' }}></span>\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\"> {moment(new Date(item.createdAt * 1000)).fromNow()}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className=\"d-flex align-items-center h-24px w-24px flex-shrink-0\">\r\n                                                    <Image src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={24} width={24} alt={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center p-3 border-top\">\r\n                                            {item.status != 3 ? <div className=\"w-50 me-1\">\r\n                                                <Button variant='public' size='sm' onClick={this.clickToPostStatus(index, item.imageList?.length ? item.ptPost : item.postId, 1)} className={`${item.status == 1 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Public</Button>\r\n                                            </div> : null}\r\n                                            {item.status != 3 ? <div className=\"w-50 ms-1\">\r\n                                                <Button variant='private' size='sm' onClick={this.clickToPostStatus(index, item.imageList?.length ? item.ptPost : item.postId, 2)} className={`${item.status == 2 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Private</Button>\r\n                                            </div> : null}\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </ErrorFound>\r\n                        </div>\r\n                        : null\r\n                }) : null\r\n            }\r\n            </Masonry>\r\n            {modalData ?\r\n                <ContentModal clickToPin={this.clickToPin} clickToGetUgc={this.clickToGetUgc} clickToDeletePost={this.clickToDeletePost} clickToBlockUser={this.clickToBlockUser} modalCallback={this.handleCallback} modalToggle={showModal} modalData={modalData} exportDonwloadMedia={this.exportDonwloadMedia} slideAssets={this.slideAssets} currentIndex={this.state.currentIndex} filter={filter} handleAllImageError={handleAllImageError} onRefreshPost={this.onRefreshPost} />\r\n                : null}\r\n            <ChangeOrderModal openpinToTopModal={openpinToTopModal} closeModalPop={() => this.setState({ openpinToTopModal: false })} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isEditing: state.moderation?.isEditing,\r\n        ugcData: state.moderation?.ugcData,\r\n        ugcPopup: state.moderation?.ugcPopup,\r\n        ugcRequestData: state.moderation?.ugcRequestData,\r\n        moderation: state.moderation,\r\n        limits: state.limitExceed\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickToPostStatus: (index, ptPost, id, value) => dispatch(clickToPostStatus(index, ptPost, id, value)),\r\n        clickToPostPin: (index, postId, status) => dispatch(clickToPostPin(index, postId, status)),\r\n        clickToDeletePost: (item, index, navigate) => dispatch(clickToDeletePost(item, index, navigate)),\r\n        clickToBlockUser: (index, userName) => dispatch(clickToBlockUser(index, userName)),\r\n        getUgcDetails: (data) => dispatch(GET_UGC_POST_DETAIL(data)),\r\n        ugcModal: (state) => dispatch(ugcModal(state)),\r\n        UPDATE_INSTA_POST_ACTION: (obj) => dispatch(UPDATE_INSTA_POST_ACTION(obj)),\r\n        GET_UGC_REQUEST: (data) => dispatch(GET_UGC_REQUEST(data))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MasonryView);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header'\r\nimport { Container } from 'react-bootstrap';\r\nimport { getModeration, updateCheckAll, selectPostUpdate, activeTabActionFilter, dateRangeFilter, clickToPostStatusALL, clickToPostDeleteALL, searchTagsFilter, limitUpdate, onNextNavigateClick, onPrevNavigateClick, onUpdatePage, clickToRefresh, removeAllFilterBody, searchPostFilter, removeCheckAll, updateCheckStatusAll, CLEAR_UGC_REQUEST, CLEAR_UGC_DATA, ugcModal, postCarosal } from '../../../../actions/moderationActions'\r\nimport { IMG_LOAD_AFTER_COMPLETE_LAYOUT, fadeOutEffect } from '../../../../utils'\r\nimport { TOGGLE_ADD_GALLERY } from '../../../../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { getUserInfo_afterChanges } from '../../../../actions/loginActions';\r\nimport withRouter from '../../../routes/WithRouter';\r\nimport './moderation.scss';\r\nimport FilterBody from './Filters';\r\nimport FilterTab from './Filters/filterTab';\r\nimport AddUgcRights from './UgcRights';\r\nimport UgcStatus from './UgcRights/Status';\r\nimport Skeleton from './Elements/Skeleton'\r\nimport MasonryView from './MasonryView'\r\nimport EmptyWithIcon from '../CommonComponents/Empty/EmptyWithIcon';\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\nimport { GALLERY_WALL_UPDATE } from '../../../../actions/sceneActions';\r\n\r\nclass Moderation extends Component {\r\n  allImageQueue = [];\r\n  state = { total: 0, isCheckAll: false, isCheckedPostCount: 0, perPageCount: 10, activePage: 1, filters: [], allFirstImage: false, statusPopup: 0 }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.moderation.changeModeration_wall !== this.props.moderation.changeModeration_wall && this.props.moderation.changeModeration_wall) this.setState({ activeTab: this.props.moderation?.filter?.status }, this.clickToUncheckAll)\r\n    if (prevProps.wallsLoader !== this.props.wallsLoader) {\r\n      // if (!this.props.wallsLoader && !this.props.moderation?.listData?.length && this.props.moderation?.loding) this.props.getModeration();\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { params } = this.props;\r\n    const currentUrl = window.location.href;\r\n    const newUrl = currentUrl.replace(params?.id, localStorage.getItem('wallId'));\r\n    window.history.pushState(null, '', newUrl);\r\n    window.feedId = params.feedId;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.location.href.includes(\"ob_success\")) this.onBoardingSuccess()\r\n    document.cookie = \"callBackUrl=React\";\r\n    localStorage.removeItem('createFeedObj')\r\n    this.props.getModeration();\r\n    this.checkTour()\r\n  }\r\n  checkTour = () => {\r\n    const { allWalls, navigate } = this.props;\r\n    if (localStorage.getItem('isTour') === 'true' && !allWalls?.length && localStorage.getItem('tourStep') === '1') {\r\n      setTimeout(async () =>{\r\n        const { default: appTour } = await import('../../../../actions/appTour')\r\n        new appTour(navigate).tour.drive()\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.allImageQueue = [];\r\n    this.props.removeAllFilterBody(true)\r\n  }\r\n\r\n  onBoardingSuccess = () => {\r\n    setTimeout(() => {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: `<strong>You are almost there!</strong>`,\r\n        html: `Tag products to curate a Shoppable Gallery & publish it on your pages.`,\r\n        showCloseButton: true,\r\n        showCancelButton: false,\r\n        focusConfirm: true,\r\n        confirmButtonText: `Got it!`,\r\n        confirmButtonAriaLabel: `Got it!`,\r\n        cancelButtonText: '<i class=\"fa fa-thumbs-down\"></i>',\r\n        cancelButtonAriaLabel: 'Thumbs down'\r\n      }).then(result => {\r\n        if (result.isConfirmed) { this.props.getUserInfo_afterChanges(); this.props.navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`) }\r\n      })\r\n    }, 1000);\r\n  }\r\n\r\n  clickToCheckAll = event => {\r\n    const { isCheckAll } = this.state;\r\n    this.setState({ isCheckAll: !isCheckAll }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.updateCheckAll(this.state.isCheckAll)\r\n    })\r\n  }\r\n\r\n  clickToCheckStatusAll = (status) => event => {\r\n    this.onActionUpdateOpcity()\r\n    this.props.updateCheckStatusAll(status)\r\n  }\r\n\r\n  clickToUncheckAll = event => {\r\n    this.setState({ isCheckAll: false }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.removeCheckAll(false)\r\n    })\r\n  }\r\n\r\n  clickPostChecked = (index) => event => this.props.selectPostUpdate(index, this.onActionUpdateOpcity())\r\n\r\n  onActionUpdateOpcity = () => {\r\n    const { isCheckAll, isCheckedPostCount } = this.state;\r\n    if (isCheckAll || (isCheckedPostCount > 0)) {\r\n      if (document.getElementsByClassName(\"modSelectNo\") && document.getElementsByClassName(\"modSelectNo\")[0])\r\n        fadeOutEffect(document.getElementsByClassName(\"modSelectNo\")[0])\r\n      if (document.getElementsByClassName(\"filter-bar\") && document.getElementsByClassName(\"filter-bar\")[0]) fadeOutEffect(document.getElementsByClassName(\"filter-bar\")[0])\r\n    }\r\n  }\r\n\r\n  clickToTab = (activeTab) => event => this.props.activeTabActionFilter(activeTab)\r\n\r\n  onDateRangeFilter = (startDate, endDate) => this.props.dateRangeFilter(startDate, endDate)\r\n\r\n  onClickToFilterUpdateStatus = (status) => event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatusALL(status) }\r\n  onClickToFilterDeleteAll = event => { if (checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostDeleteALL(this.props.navigate) }\r\n  onClickNextPage = event => this.props.onNextNavigateClick()\r\n  onClickPrevPage = event => this.props.onPrevNavigateClick()\r\n  onChangePage = (page) => event => { this.props.onUpdatePage(page) }\r\n\r\n\r\n  onClickReset = (item) => {\r\n    let tempFilter = this.state.filters.filter(i => i.key === item.key)\r\n    tempFilter = tempFilter.filter((it) => {\r\n      if ([\"postType\", \"socialFeed\", \"other\"].includes(it.key))\r\n        return it.value.filter((j) => !item.value.includes(j));\r\n    });\r\n    this.setState({ filters: tempFilter }, () => this.props.clickToRefresh())\r\n  }\r\n\r\n  onClickAllReset = event => {\r\n    this.setState({ filters: [] }, () => this.props.getModeration())\r\n  }\r\n\r\n\r\n  handleAllImageError = (e) => {\r\n    try {\r\n      const src = e.target.getAttribute(\"data-id\");\r\n      if (!this.allImageQueue.some(item => item.src === src)) {\r\n        this.allImageQueue.push({ src, e });\r\n      }\r\n      if (!this.state.allFirstImage) {\r\n        this.processAllImageQueue();\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  processAllImageQueue = async () => {\r\n    const queue = this.allImageQueue;\r\n    if (queue.length && !this.state.allFirstImage) {\r\n      this.setState({ allFirstImage: true });\r\n      this.processNextImage();\r\n    }\r\n  };\r\n\r\n  processNextImage = () => {\r\n    try {\r\n      const { src, e } = this.allImageQueue[0];\r\n      if (src) {\r\n        IMG_LOAD_AFTER_COMPLETE_LAYOUT(e, this.nextProcessAllImageQueue);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  nextProcessAllImageQueue = () => {\r\n    try {\r\n      this.allImageQueue.shift();\r\n      if (this.allImageQueue.length) {\r\n        this.processNextImage();\r\n      } else {\r\n        this.setState({ allFirstImage: false });\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  updatepostCarosal = (status) => {\r\n    const { allWalls, galleryUpdate, postCarosal } = this.props\r\n    postCarosal(status)\r\n\r\n    const getWallData = allWalls?.length && allWalls.find((e) => e.id == localStorage.getItem('wallId'))\r\n    if (getWallData) galleryUpdate({ name: getWallData.name, status, carouselPost: status || 0, autoUpdate: getWallData.autoUpdate || 0, deleted: 0, id: getWallData.id, action: 2 })\r\n  }\r\n\r\n  openugcModel = () => this.props.ugcModal(true)\r\n  onShow = (id) => this.setState({ statusPopup: id })\r\n\r\n  render() {\r\n    const { isCheckAll, perPageCount, activePage, filters } = this.state;\r\n    const { moderation, searchTagsFilter, limitUpdate, loader, postCarosal, clickToRefresh, ugcModal, clearUgcData, removeAllFilterBody, searchPostFilter, allWalls, wallsLoader, feeds, ugcData, ugcPopup, CLEAR_UGC_REQUEST_DATA, navigate } = this.props;\r\n    return (\r\n      !wallsLoader && !(allWalls && allWalls.length > 0) ?\r\n        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n          <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Create a Gallery, to add feed! ⌛'} desc={'Oops! Looks like you have deleted your gallery, create one by simply clicking on the button below.'} icon={'media'} button={{ action: () => checkPermission('contentGallery', 'createGallery', true) ? this.props.TOGGLE_ADD_GALLERY(true) : {}, text: 'Create Gallery' }} isFullScreen={false} />\r\n        </div>\r\n        :\r\n        <div className=\"d-flex flex-column flex-column-fluid full-content moderation__\">\r\n          <Header postCarosal={this.updatepostCarosal} clickToRefresh={clickToRefresh} allWalls={allWalls} clickToCheckAll={this.clickToCheckStatusAll} clickToUncheckAll={this.clickToUncheckAll} isCheckAll={isCheckAll} isCheckedPostCount={moderation?.isCheckedPostCount} searchPostFilter={searchPostFilter} onClickToViewFilter={this.onClickToViewFilter} total={moderation?.total} perPageCount={perPageCount} activePage={activePage} moderation={moderation} clickToTab={this.clickToTab} onDateRangeFilter={this.onDateRangeFilter} onClickToFilterUpdateStatus={this.onClickToFilterUpdateStatus} onClickToFilterDeleteAll={this.onClickToFilterDeleteAll} searchTagsFilter={searchTagsFilter} limitUpdate={limitUpdate} onNextNavigateClick={this.onClickNextPage} onPrevNavigateClick={this.onClickPrevPage} onChangePage={this.onChangePage} onAppliedFilter={this.onAppliedFilter} activeTab={moderation?.filter?.status} key={moderation?.filter?.status} />\r\n          <Container fluid className='position-relative pt-10'>\r\n            <FilterBody {...this.props} filterBody={moderation.filterBody} />\r\n            <FilterTab  {...this.props} filterBody={moderation.filterBody} />\r\n            <UgcStatus {...this.props} statusPopup={this.state.statusPopup} onHide={() => { this.setState({ statusPopup: 0 }); CLEAR_UGC_REQUEST_DATA() }} openugcModel={this.openugcModel} />\r\n\r\n            {moderation?.total == 0 && !moderation?.loding ?\r\n              <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n                <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Whoops! You have not created a feed! ⌛'} desc={''} icon={'media'} button={{ action: () => checkPermission('networkManager', 'manageFeed', true) ? navigate(`/content/addfeed/${localStorage.getItem('wallId')}`) : {}, text: 'Create feed' }} isFullScreen={false} />\r\n              </div>\r\n              : (moderation?.listData?.length == 0 && moderation?.filter?.status == 1) ? <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n                <EmptyWithIcon title={'Oops!'} desc={'Looks like there’s nothing to see here yet. Try making some posts public to showcase your content!'} icon={'media'} button={null} isFullScreen={false} />\r\n              </div> : (moderation?.listData?.length == 0 && moderation?.filter?.status == 2) ? <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n                <EmptyWithIcon title={'No Posts Yet!'} desc={`Looks like there’s nothing to see here yet. Moderate posts which you don't want to display!`} icon={'media'} button={null} isFullScreen={false} />\r\n              </div> :\r\n                <div className=\"moderation_card tab-content pb-10 pb-lg-0 h-100\">\r\n                  {loader.filterLoader ? <Skeleton {...this.props} /> : <ErrorFound><MasonryView clickPostChecked={this.clickPostChecked}  {...moderation} removeAllFilterBody={removeAllFilterBody} activeTab={moderation?.filter?.status} searchTagsFilter={searchTagsFilter} onAppliedFilter={this.onAppliedFilter} handleAllImageError={this.handleAllImageError} filters={filters} onClickAllReset={this.onClickAllReset} onClickReset={this.onClickReset} onShow={this.onShow} navigate={navigate} /></ErrorFound>}\r\n                </div>}\r\n\r\n            {ugcPopup && ugcData && ugcData.template && ugcData.template.length ? <ErrorFound><AddUgcRights ugcData={ugcData} hideUgc={() => { ugcModal(false); clearUgcData() }} /></ErrorFound> : ''}\r\n          </Container>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    moderation: state.moderation,\r\n    loader: state.loader,\r\n    ctaData: state.ctaData?.data,\r\n    allFont: state.allFont,\r\n    showAddFeed: state.modalReducer?.showAddFeed,\r\n    showManageFeed: state.modalReducer?.showManageFeed,\r\n    showCta: state.modalReducer?.showCta,\r\n    wallsLoader: state.dashboardData?.wallsLoader,\r\n    addGalleryNow: state.dashboardData?.addGalleryNow,\r\n    ctaData: state.ctaData?.data,\r\n    ugcData: state.moderation?.ugcData,\r\n    ugcPopup: state.moderation?.ugcPopup,\r\n    ugcRequestData: state.moderation?.ugcRequestData,\r\n    feeds: state.manageFeeds?.feeds,\r\n    allWalls: state.dashboardData?.dashboarddata?.allWalls,\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getModeration: (callback) => dispatch(getModeration(callback)),\r\n    activeTabActionFilter: (status) => dispatch(activeTabActionFilter(status)),\r\n    updateCheckAll: (status) => dispatch(updateCheckAll(status)),\r\n    selectPostUpdate: (index, callBack) => dispatch(selectPostUpdate(index, callBack)),\r\n    dateRangeFilter: (startDate, endDate) => dispatch(dateRangeFilter(startDate, endDate)),\r\n    clickToPostStatusALL: (status) => dispatch(clickToPostStatusALL(status)),\r\n    clickToPostDeleteALL: (navigate) => dispatch(clickToPostDeleteALL(navigate)),\r\n    searchTagsFilter: (searchTags) => dispatch(searchTagsFilter(searchTags)),\r\n    searchPostFilter: (searchPost) => dispatch(searchPostFilter(searchPost)),\r\n    limitUpdate: (limit) => dispatch(limitUpdate(limit)),\r\n    onNextNavigateClick: () => dispatch(onNextNavigateClick()),\r\n    onPrevNavigateClick: () => dispatch(onPrevNavigateClick()),\r\n    onUpdatePage: (page) => dispatch(onUpdatePage(page)),\r\n    clickToRefresh: () => dispatch(clickToRefresh()),\r\n    postCarosal: (status) => dispatch(postCarosal(status)),\r\n    removeAllFilterBody: (status) => dispatch(removeAllFilterBody(status)),\r\n    removeCheckAll: (data) => dispatch(removeCheckAll(data)),\r\n    updateCheckStatusAll: (data) => dispatch(updateCheckStatusAll(data)),\r\n    TOGGLE_ADD_GALLERY: (status) => dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }),\r\n    getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    ugcModal: (state) => dispatch(ugcModal(state)),\r\n    clearUgcData: () => dispatch(CLEAR_UGC_DATA()),\r\n    galleryUpdate: (action) => dispatch(GALLERY_WALL_UPDATE(action)),\r\n    CLEAR_UGC_REQUEST_DATA: () => dispatch(CLEAR_UGC_REQUEST()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(withRouter(Moderation)));\r\n"],"names":["_ref","rating","className","iconClass","_jsx","concat","children","generateRandomArray","map","rate","index","FontAwesomeIcon","type","icon","QuickSearch","Component","constructor","arguments","state","tagSearchList","searchPost","selected","openSearch","onLoad","this","length","autoCompleteSearch","then","response","responseData","totalTag","responseCode","data","setState","onSearchText","text","onClickToSearchTags","selectSearch","event","props","searchTagsFilter","onClickToSearchPost","String","searchPostFilter","render","_jsxs","_Fragment","Button","variant","size","onClick","Dropdown","show","style","display","InputGroup","id","Form","Control","minHeight","placeholder","value","onChange","e","target","autoComplete","Menu","overflowY","item","Item","maxDate","handleOnApply","startDate","endDate","DateRangePicker","onApply","initialSettings","locale","format","separator","showDropdowns","ranges","Today","moment","Yesterday","subtract","startOf","endOf","DateRange","picker","onDateRangeFilter","componentWillReceiveProps","nextProps","moderation","Object","keys","filter","filterBody","dateRanges","DateRanges","uuidv4","withRouter","isCarosal","setisCarosal","useState","filters","useSelector","_state$moderation","useEffect","_props$allWalls","foundItem","allWalls","find","params","carouselPost","marginRight","marginTop","padding","Check","checked","taggedPost","TOAST_ERROR","postCarosal","Number","checkPermission","navigate","localStorage","getItem","_objectSpread","onNextNavigateClick","onPrevNavigateClick","onChangePage","paginateData","currentPage","pages","pagesIndex","parseInt","totalPages","onHide","Modal","centered","Body","Image","src","baseUrl","height","width","fluid","maxWidth","Link","to","addStatus","setAddTag","selectedEntry","selectedEntryFun","label","permissionError","setPermissionError","ugcError","setUgcError","showGetRight","setShowGetRight","fromSnapup","setFromSnapup","activeTab","dispatch","useDispatch","checkGetRight","check_uncheck_all","flag","post","ugcstatus","networkId","feedFilter","Container","clickToCheckAll","status","OverlayTrigger","placement","overlay","Tooltip","clickToRefresh","onClickToFilterUpdateStatus","onClickToFilterDeleteAll","getRights","userId","username","GET_UGC_POST_DETAIL","is_carausel","postId","ugcModal","Select","classNamePrefix","isSearchable","options","updateLimit","limitUpdate","ModerationPagination","PermissionError","ErrorModal","isLoaded","details","totalpost","publicpost","privatepost","tabName","TabTotal","upcomingpost","Nav","eventKey","clickToTab","disabled","Badge","bg","Toggle","NavDropdown","Filters","ModSubHeader","PostTagSearch","searchData","loading","textSearch","textInput","onClickToSearch","removeFilterPostTags","push","updateFilterPostTags","postTags","autocomplete","Text","sItem","isChecked","includes","PostTypeCheck","onClickPostType","selecteds","postType","fin","OtherInput","_ref2","onClickOther","other","key","AiCheck","_ref3","_moderation$filterBod","onClickAi","recommendation","checklabel","SentimentCheck","_ref4","_moderation$filterBod2","onClickSentiment","sentiment","FilterBody","super","toogleFilter","isActiveAside","setTimeout","offcanvas","document","querySelector","classList","add","onSelectFeeds","removeFilterSocialFeeds","updateFilterSocialFeeds","removeFilterPostType","updateFilterPostType","_this$props$allWalls","removeFilterOthers","updateFilterOthers","removeAiFilter","aiFilter","removeSentimentFilter","sentimentFilter","socialFeeds","feeds","bind","componentDidMount","addEventListeners","window","feedId","name","componentDidUpdate","filterAside","getElementById","addEventListener","_moderation$filterBod3","UserRuleEnableAI","Offcanvas","Accordion","flush","defaultactivekey","Header","socialFeed","Label","htmlFor","filterId","GET_NETWORK_ICON","parse","_","removeAllFilterBody","connect","_state$manageFeeds","_state$dashboardData","_state$dashboardData$","manageFeeds","dashboardData","dashboarddata","IconWrapper","FilterTab","onClickRemovePostTags","onClickToDateRangeRemove","removeDateRanges","onClickReset","HtmlParser","CardPreview","handleThumbs","mainRef","current","go","React","ugcData","Splide","hasTrack","arrows","SplideTrack","SplideSlide","ImageType","mediaClass","url","postFile","alt","isCover","Author","imageSize","symbolClass","profileUrl","picture","GET_NETWORK_NAME","ShowMoreContent","classes","content","idIndex","line","copyUrl","openSteps","copied","hash","accountDetails","postUrl","sendRequest","onRaiseRequest","setUserName","copyText","custom_msg","requestMode","postLink","link","JSON","stringify","config","method","TINY_URL","headers","axios","tinyRequest","tiny_url","catch","ex","navigator","clipboard","writeText","bitlyurl","raiseReq","open","location","replace","HOST_URL","setStep","isRequesting","Group","as","maxLength","cols","rows","CreateTemplate","uppyUploader","UppyUpload","uppyUploaderPdf","postauthor","posthandle","authorpicture","postcarousel","modalOpen","createTemplate","brandFilename","editData","client_logo","selectedBrand","client_logo_name","selectedBrandFile","tncFilename","custom_terms","selectedtnc","custom_terms_name","selectedtncFile","selectedTemplate","acceptTnc","logoError","tncError","templateName","custom_message","tncerrorMsg","nameerrorMsg","msgerrorMsg","onClickToOpenBrand","brandModalOpen","$","click","uppy","cancelAll","onClickToCloseBrand","onClickToOpenTnc","tncModalOpen","onClickToCloseTnc","removeBrandLogo","removeTnc","onSaveTemplate","obj","owner","edit","ADD_UGC_TEMPLATE","onAddNewTemplate","on","stepName","result","TEMP_URL","ext","saveTemplate","closeButton","Title","WASABI_PATH","UGC_UPLOAD_URL","load","Footer","DashboardModal","animateOpenClose","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestCloseModal","closeAfterFinish","doneButtonHandler","plugins","callback","GeneralRequest","isEdit","onCreateTemplate","getSelectedTemplate","onTemplateChange","onHideTemplate","setItem","template","t","onNextStep","onUpdateTemplate","setTncError","tmp","setCustom_msg","setSelectedTemplate","onTemplateRemove","deleteTemplate","onTemplateEdit","setBrand_link","setTermslink","setTermstype","brand_link","console","log","_this$getSelectedTemp","_this$getSelectedTemp2","_this$getSelectedTemp3","_this$getSelectedTemp4","_this$getSelectedTemp5","_this$getSelectedTemp6","_this$getSelectedTemp7","_this$getSelectedTemp8","_this$getSelectedTemp9","_this$getSelectedTemp10","setAcceptTnc","hideUgc","onSelect","download","href","rel","DELETE_UGC_TEMPLATE","channel","BroadcastChannel","SAccounts","socialAccount","authorName","authorAvatar","errorMsg","otherAc","accountList","selectedPersonalAccount","handleMessage","async","code","origin","getTwitterAuth","filterAccountData","addAccountFromId","TAGGSHOP_SOCIAL_ACCOUNT_DATA","error","_socialAccountsData$a","socialAccountsData","allAcc","accountInformations","forEach","acc","Network","ConnectedAccounts","value2","accountName","unshift","id_str","profilePicture","color","description","_allAcc$","nextStep","_JSON$parse","cookie","Application","reInit","componentWillUnmount","removeItem","removeEventListener","_selectedPersonalAcco","_selectedPersonalAcco2","_selectedPersonalAcco3","_selectedPersonalAcco4","minWidth","_acc$ConnectedAccount","_acc$ConnectedAccount2","showAddAccounntAlert","getCookieData","withCookies","cookies","setCookie","useCookies","navigation","useNavigate","userAccountData","socialAccounts","ChooseMethod","setRequestMode","Input","ugcTabKey","setUgcTabKey","step","isAccount","setIsAccount","userName","termslink","termstype","setIsRequesting","getPostIds","unique_code","postIds","referenceId","join","_tempSelected","_tempSelected2","_tempSelected3","findIndex","tempSelected","selectedImage","selectedVideo","selectedUsername","handle","bitlylink","rightsVia","hashtag","networkPostId","wallId","client","SEND_UGC","backdrop","ErrorFound","_tempSelected4","_tempSelected5","_tempSelected6","_tempSelected7","_tempSelected8","_tempSelected9","SocialAccounts","CopyUrl","UgcModalApproved","onDownloadMedia","saveAs","mediaUrl","ugcRequestData","userAgent","HTMLReactParser","userIP","userLocation","actionTime","utcOffset","timezone","custom_term_type","DOWNLOAD_CERTIFICATE","ugcid","comment","RadialChart","days","ago","series","chart","plotOptions","radialBar","hollow","margin","dataLabels","showOn","fontWeight","fontSize","offsetY","track","background","strokeWidth","fontFamily","total","colors","stroke","lineCap","prevProps","ReactApexChart","Pending","getNewdata","diff","ugccreated","COPY_TO_CLIPBOARD","RejectModal","openugcModel","statusPopup","Pendingng","ApprovedModal","ModerationSkeleton","Card","paddingBottom","ProductTags","removeTaggProduct","product_sku","productId","REMOVE_TAGGED_PRODUCT_ACTION","listView","openContent","postproduct","Row","_item$product","Col","xs","product","product_image","top","right","post_id","Tags","handleShowMore","prevState","visibleCount","items","handleShowLess","tags","split","visibleItems","slice","onClickToPostTags","ChangeOrderModal","reArrangePosts","newArray","updateOrder","indexing","spinner","GET_REORDER_PIN_TO_TOP","onLoadData","pinToTop","onDragEnd","openpinToTopModal","GET_PIN_TO_TOP_LIST","destination","reorder","list","startIndex","endIndex","Array","from","removed","splice","source","_this$state$items","closeModalPop","DragDropContext","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","Draggable","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","zIndex","newMedia","postname","ReactHtmlParser","postcontent","getItemStyle","Loader","GET_LIST_ALL_PIN_TO_TOP_POST","calback","EditAside","getTagsArray","_this$props","submitTags","tag","trim","tagString","isLoading","formattedTags","charAt","toUpperCase","selectedOption","handleSelectChange","_e$value","onChangeTag","onClickToRemoveTag","handleOpen","uppyProfileOpen","handleSave","author","onSavePost","isValidNewOption","inputValue","profile","onChangeAuthorImg","onChangeAuthor","onChangeHandle","onChangeContent","onClickRemoveAuthorImg","authorImage","onSaveTag","handleClose","isTaggModal","GET_FIRST_LETTER","CreatableSelect","isClearable","onInputChange","tagsArrayFun","removeIndex","toString","closeModalOnClickOutside","onRequestClose","hideUploadButton","autoOpenFileEditor","lineCount","Rating","ModalMedia","handleResize","modalData","winWidth","innerWidth","winHeight","innerHeight","onMediaLoad","mediaHeight","mediaWidth","mediaSize","getImageWidthHeight","count","hotspotRef","hotspotSection","spotWidth","clientWidth","spotHeight","clientHeight","_this$props$modalData","enableHotspot","hotspot","handleAllImageError","autoPlay","movePost","scale","Math","min","TextType","socialNetworkId","VideoType","mediaFile","mediaClip","poster","muted","controls","loop","isupdate","ContentModal","onChangePostImg","postImage","onChangePostType","onClickTouploadImage","callBack","postpayload","ptPost","editpost","tagPayload","onUpdateTags","_state$ctaData","ctaData","authorized","payload","_item$imageList","_item$postproduct","ImageClass","activeCarousalPostsList","activeCarousalPost","onControlledDrag","changePrdId","getCarousal","imageList","renderHotspots","hotspotList","_Item$product","_Item$product2","_Item$product3","_Item$product4","_Item$product5","_Item$product6","left","bounds","onStop","onStart","ugc_product","defaultPosition","x","y","product_title","product_discount","product_price","price_currency_symbol","hotspot_type","backgroundColor","hotspot_color","hotspot_type_color","lineHeight","updateCarousalPost","arrowShow","splideRef","useRef","setmediaSize","setmovePost","settings","perPage","pagination","start","ids","CAROUSAL_POST_PRODUCTS","getImageSize","_splideRef$current","splideInstance","splide","destroy","assetItem","assetKey","ContentModalAside","_this","_this$props$modalData2","handleResizeg","refId","undefined","getFilteredData","carousalPostsList","getPostData","filteredData","updateCarousalPostList","_modalData$imageList","hotspotValue","updateHotspot","location_hotspot","updatedData","position","l","hostpot","UPDATE_HOTSPOT_ACTION","changeHotspotStatus","hotspotEnable","isHotspotEnable","ENABLE_HOTSPOT_ACTION","onSaveCallBack","_modalData$imageList2","responceApi","modalCallback","editPostFun","editPost","searchTag","selectedTag","_this$props$modalData3","modalToggle","onRefreshPost","postPostUpdate","currentIndex","clickToPin","clickToGetUgc","clickToDeletePost","clickToBlockUser","align","newlink","slideAssets","CarousalPost","Suspense","fallback","Hotspot","ImageUrl","imgHeight","imgWidth","EditPost","isCarousal","getUserInfo_afterChanges","RefreshPostData","isRequest","isRefresh","ExpiredPostInstaQueue","refreshPostLoading","MasonryView","imageQueue","postID","itemIndex","firstRequest","showModal","tourImport","clickToPostPin","getUgcDetails","openUgcModal","clickToPostStatus","clickToGetLink","GET_UGC_REQUEST","onShow","ugcmodified","handleImageError","getAttribute","processImageQueue","imgTarget","TIKTOK_UPDATE_STATUS","shift","media","ImagePlaceholder","UPDATE_INSTA_POST_ACTION","handleModalShow","handleCallback","dataEvent","listData","checkTour","tourStep","default","appTour","tour","drive","_moderation$listData","ugcPopup","selection","Masonry","elementType","disableImagesLoaded","updateOnEachImageLoad","enableResizableChildren","_item$imageList2","_item$imageList3","highlight","pin","createdAt","boxShadow","clickPostChecked","ugcRights","overflowX","fromNow","ctastatus","buttonText","title","buttonUrl","ctaButtonColor","ctaTextColor","Date","exportDonwloadMedia","_state$moderation2","_state$moderation3","_state$moderation4","isEditing","limits","limitExceed","Moderation","allImageQueue","isCheckAll","isCheckedPostCount","perPageCount","activePage","allFirstImage","onBoardingSuccess","Swal","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","isConfirmed","onActionUpdateOpcity","updateCheckAll","clickToCheckStatusAll","updateCheckStatusAll","clickToUncheckAll","removeCheckAll","selectPostUpdate","getElementsByClassName","fadeOutEffect","activeTabActionFilter","dateRangeFilter","clickToPostStatusALL","clickToPostDeleteALL","onClickNextPage","onClickPrevPage","page","onUpdatePage","tempFilter","i","it","j","onClickAllReset","getModeration","some","processAllImageQueue","processNextImage","IMG_LOAD_AFTER_COMPLETE_LAYOUT","nextProcessAllImageQueue","updatepostCarosal","galleryUpdate","getWallData","autoUpdate","deleted","action","_this$props$moderatio","_this$props$moderatio2","changeModeration_wall","wallsLoader","componentWillMount","newUrl","history","pushState","_moderation$filter","_moderation$filter2","_moderation$filter3","_moderation$listData2","_moderation$filter4","_moderation$filter5","loader","clearUgcData","CLEAR_UGC_REQUEST_DATA","onClickToViewFilter","onAppliedFilter","UgcStatus","loding","EmptyWithIcon","desc","button","isFullScreen","filterLoader","Skeleton","AddUgcRights","TOGGLE_ADD_GALLERY","_state$modalReducer","_state$modalReducer2","_state$modalReducer3","_state$dashboardData2","_state$ctaData2","_state$dashboardData3","_state$dashboardData4","allFont","showAddFeed","modalReducer","showManageFeed","showCta","addGalleryNow","searchTags","limit","CLEAR_UGC_DATA","GALLERY_WALL_UPDATE","CLEAR_UGC_REQUEST"],"sourceRoot":""}