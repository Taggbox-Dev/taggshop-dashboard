{"version":3,"file":"static/js/8550.07232794.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Author/AuthorIcon.js","app/Layout/Main/CommonComponents/NotFound/NoCardData.js","app/Layout/Main/Home/Dashboard/SkeletonComponents/SkSocialAccounts.js","app/Layout/Main/Home/Dashboard/SocialAccount.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Author from './Author';\nimport { GET_NETWORK_ICON } from '../../../../../utils';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\n\nclass AuthorIcon extends Component {\n       render() {\n              const { networkId } = this.props;\n              return (\n                     <div className='position-relative me-2'>\n                            <Author {...this.props}/>\n                            <div className=\"position-absolute rounded-circle h-18px w-18px f-center bg-body\" style={{padding: 3, right: 0, bottom:0}}>\n                                   <img className=\"object-center-contain\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(networkId)}.svg`)} height=\"18\" width=\"18\" alt=\"Instagram\" />\n                            </div>\n                     </div>\n              );\n       }\n}\n\nexport default AuthorIcon;","import React, { Component } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nclass NoCardData extends Component {\n\n       render() {\n              const { title, desc, method, methodTitle, subTitle, subMethod } = this.props\n              return <div className={`f-center py-4 h-100 w-100 flex-column`} style={{minHeight:200}}>\n                            <div className=\"d-flex flex-column align-items-center w-100\">\n                                   <Row  className=\"mb-2 text-center justify-content-center gx-0 w-100\">\n                                          <Col xxl={8} xl={10}>\n                                          <h4 className={`text-gray-dark fw-semibold text-center`}>{title}</h4>\n                                          {desc ? <p>{desc}</p> : null}\n                                          </Col>\n                                   </Row>\n                            </div>\n                            {method ?\n                            <div className=\"d-flex\">\n                                   <Button variant='primary' className=\"m-2 btn-min-w\" onClick={method}>\n                                          {methodTitle}\n                                   </Button>\n                                   {subTitle ? <Button variant='secondary' className=\"m-2 btn-min-w\" onClick={subMethod}>\n                                          {subTitle}\n                                   </Button> : null}\n                            </div> \n                            : null}\n                     </div>\n       }\n}\n\nexport default NoCardData;","import { generateRandomArray } from '../../../../../../utils';\nconst SkSocialAccounts = () => {\n    return <div className=\"\">\n        {generateRandomArray(4).map((number, index) => (<div key={index} className=\"d-flex align-items-center pt-2 pb-2\">\n            <div className=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\">\n                <div className=\"sk_img symbol symbol-38 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                <div className=\"overflow-hidden w-100\" style={{ maxWidth: 130 }}>\n                    <p className=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p>\n                    <span className=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span>\n                </div>\n            </div>\n            <span className=\"d-flex align-items-end flex-column flex-shrink-0\" style={{ width: 100 }}>\n                <p className=\"sk_line sk_line_80 sk_line_height_10 mb-2\"></p>\n                <span className=\"sk_line sk_line_100 sk_line_height_8 mb-0 d-block\"></span>\n            </span>\n        </div>\n        ))}\n    </div>\n\n}\n\nexport default SkSocialAccounts;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME, showAddAccounntAlert } from \"../../../../../utils\";\nimport { Col, Card, Button } from \"react-bootstrap\";\nimport SkSocialAccounts from \"./SkeletonComponents/SkSocialAccounts\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\nimport NoCardData from \"../../CommonComponents/NotFound/NoCardData\";\nimport AuthorIcon from \"../../CommonComponents/Author/AuthorIcon\";\nimport withRouter from '../../../../routes/WithRouter';\n\nconst AccountList = ({feed, item, index, reconnectAccount}) => {\n    const isConnected = !feed ? item.ConnectedAccounts.api == 2 ? true : false : false\n    return  <div className=\"d-flex align-items-center pt-2 pb-2\" key={index}>\n        <div className=\"d-flex align-items-center flex-grow-1\">\n            {feed ? \n            <span className=\"h-38px w-38px rounded-circle d-flex align-items-center flex-shrink-0 me-1\">\n                <img src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.Network.id)}.svg`)} height={43} width={43} alt={GET_NETWORK_NAME(item.Network.id)} />\n            </span>\n            :\n            <AuthorIcon imageSize={38} \n            symbolClass={'symbol-label fw-bolder text-uppercase fs-5'} \n            className={'symbol symbol-38 rounded-circle flex-shrink-0 me-2 overflow-hidden'} \n            name={item.ConnectedAccounts.accountName} profileUrl={item.ConnectedAccounts.profilePicture} networkId={item.Network.id} />\n            }\n            <div className=\"d-flex text-left flex-column conn_user_info w-75\">\n                <h5 className=\"w-75 text-nowrap overflow-hidden d-block text-ellipsis mb-0\">{feed ? item.Feed.feedName : item.ConnectedAccounts.accountName}</h5>\n                {!feed ? <small className=\"text-nowrap overflow-hidden d-block text-ellipsis\">@{item.ConnectedAccounts.accountName}</small> : null}\n            </div>\n        </div>\n        <div className=\"d-flex flex-column align-items-end\">\n            {isConnected ? <div className=\"text-success d-flex fs-8\">\n                <span className=\"me-1\">\n                    <FontAwesomeIcon type={'solid'} icon={'check'}/>\n                </span>\n                <span className=\"fw-bold\">Connected</span>\n            </div>\n            : <Button variant=\"link\" onClick={() => reconnectAccount({networkId: item.Network.id, networkName: item.Network.name})}>Reconnect</Button>}\n            <span className='text-gray-600 fs-9'>{item.Network.name} Profile</span>\n        </div>\n    </div>\n}\nclass SocialAccount extends Component{\n    \n    reconnectAccount = (obj) => {\n        const item = { id: obj.networkId, name: (obj.networkName).toLowerCase() }\n        showAddAccounntAlert(item, true, false)\n    }\n    \n    connectAcc = () => this.props.navigate(\"/social-account\")\n    render(){\n        const { loader, accounts } = this.props;\n        const feeds = accounts?.feeds\n        const allAccounts = accounts?.connectedAccounts\n        return <Col sm={6}>\n            <Card className=\"card-stretch gutter-b\">\n                <Card.Body>\n                    <div className=\"f-between mb-3\">\n                        <div className=\"h4\">Social Accounts</div>\n                        {allAccounts && allAccounts.length > 5 ? <Link to={`/social-account`} className=\"btn btn-link\">View all</Link> : null}\n                    </div>\n                        {loader ? \n                        <div className=\"pe-2\" style={{height:160, overflowX:'auto'}}>\n                            <SkSocialAccounts /> \n                        </div>\n                        :\n                        allAccounts && allAccounts.length > 0 ?\n                        <div className=\"pe-2\" style={{height:160, overflowX:'auto'}}> \n                            {feeds && feeds.map((item, index) => {\n                                    return <AccountList key={index} feed={true} item={item} index={index} reconnectAccount={this.reconnectAccount}/>\n                                })}\n                                \n                            {allAccounts.map((item, index) => {\n                                return <AccountList key={index} feed={false} item={item} index={index} reconnectAccount={this.reconnectAccount}/>\n                            })}\n                        </div> :\n                        <div style={{height:200}}>\n                            <NoCardData title=\"Add your Social Accounts\" desc=\"Connecting your social media platform is the first step.\" methodTitle=\"Connect\" method={this.connectAcc} />\n                        </div>\n                        }\n                </Card.Body>\n            </Card>\n        </Col>\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        accounts: state.dashboardData.accounts,\n        loader: state.dashboardData.accounts_loader\n    }\n}\n\nexport default connect(mapStateToProps,null)(withRouter(SocialAccount))"],"names":["AuthorIcon","Component","render","networkId","this","props","_jsxs","className","children","_jsx","Author","style","padding","right","bottom","src","baseUrl","concat","GET_NETWORK_ICON","height","width","alt","NoCardData","title","desc","method","methodTitle","subTitle","subMethod","minHeight","Row","Col","xxl","xl","Button","variant","onClick","SkSocialAccounts","generateRandomArray","map","number","index","maxWidth","AccountList","_ref","feed","item","reconnectAccount","isConnected","ConnectedAccounts","api","Network","id","GET_NETWORK_NAME","imageSize","symbolClass","name","accountName","profileUrl","profilePicture","Feed","feedName","FontAwesomeIcon","type","icon","networkName","SocialAccount","constructor","arguments","obj","toLowerCase","showAddAccounntAlert","connectAcc","navigate","loader","accounts","feeds","allAccounts","connectedAccounts","sm","Card","Body","length","Link","to","overflowX","connect","state","dashboardData","accounts_loader","withRouter"],"sourceRoot":""}