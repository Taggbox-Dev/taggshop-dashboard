{"version":3,"file":"static/js/8420.1b384c2c.chunk.js","mappings":"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","sources":["app/Authentication/ShopifyInstall/index.js","app/Authentication/TempPassword.js","app/routes/loginBasePage.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; \nimport { loginWithShopify, installShopify } from '../../../actions/loginActions'; \nimport { useDispatch } from 'react-redux';\nimport { Loader } from \"../../Layout/Main/CommonComponents/Loader\";\nimport { syncWithShopify } from '../../../actions/productAction';\n\nconst useSearchParams = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    return {\n        app_load_id: searchParams.get('app_load_id'),\n        code: searchParams.get('code'),\n        embedded: searchParams.get('embedded'),\n        hmac: searchParams.get('hmac'),\n        host: searchParams.get('host'),\n        id_token: searchParams.get('id_token'),\n        link_source: searchParams.get('link_source'),\n        locale: searchParams.get('locale'),\n        session: searchParams.get('session'),\n        shop: searchParams.get('shop'),\n        timestamp: searchParams.get('timestamp'),\n    };\n};\n\nconst removeNullParams = (obj) => {\n    return Object.fromEntries(\n        Object.entries(obj).filter(([_, value]) => value !== null && value !== undefined)\n    );\n};\n\nconst ShopifyInstall = ({ history, isInstall }) => {\n    const params = useSearchParams();\n    const cleanParams = removeNullParams(params);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (isInstall) {\n            if (cleanParams.embedded) {\n                dispatch(loginWithShopify(cleanParams, history))\n            } else {\n                installShopify(cleanParams.shop);\n            }\n        } else {\n            if(localStorage.getItem('syncShopify') == 'true') dispatch(syncWithShopify({...cleanParams, guestUseShopify:'guest', ownerId: localStorage.getItem('ownerId')}))\n            else dispatch(loginWithShopify(cleanParams, history))\n        }\n    }, []);\n\n    return <div className='h-100vh w-100 f-center'><Loader /></div>;\n};\n\nexport default ShopifyInstall","import React, { Component } from \"react\";\nimport { Form, Button} from 'react-bootstrap';\nimport { TOAST_ERROR, validatePassword } from \"../../utils\";\nimport FormTerms from \"./Components/FormTerms\";\nimport PwdStrength from \"../Layout/Main/CommonComponents/PwdStrength\";\nimport { FontAwesomeIcon } from \"../../Assets/AssetsHelper\";\nimport { resetPasswords } from \"../../actions/loginActions\";\nimport { connect } from \"react-redux\";\nimport { TAGSHOP_USER_HOME_DATA } from \"../../actions/sceneActions\";\nclass TempPassword extends Component {\n    constructor(props) {\n        super(props)\n    }\n    state = {\n        pwd:'',\n        showPass: false,\n        pwdError:false,\n        strength:0,\n        isRequesting:false,\n        rePwd:'',\n        showRePass:false\n    }\n\n    checkPassStrength = event => {\n        const password = event.target.value;\n        const { strength } = validatePassword(password);\n        this.setState({ pwd: password, strength: strength, pwdError:false });\n    }\n\n    onPasswordReTextChange = event => {\n        this.setState({ rePwd: event.target.value }, () => {\n            if (this.state.pwd != this.state.rePwd) this.setState({ rePwdError: true })\n            else this.setState({ rePwdError: false })\n        })\n    }\n\n\n    onSetPwd = event => {\n        const { pwd, rePwd, pwdError, rePwdError, strength } = this.state;\n        \n        if(strength == 4){\n        var self = this;\n        if(pwd && String(pwd).length >= 8 && rePwd && String(rePwd).length == String(pwd).length && !pwdError && !rePwdError){\n            this.setState({isRequesting:true})\n            resetPasswords({ userId: localStorage.getItem('ownerId'), token: localStorage.getItem('token'), password: pwd }).then((response) => {\n                this.setState({isRequesting:false})\n                this.props.getHomeData()\n                this.props.history(\"/accounts/otherinfo\")\n            }).catch(()=>{\n                this.setState({isRequesting:false})\n                TOAST_ERROR('Some Error occured, please try again later.')\n            })\n        }\n        else{\n            if(!pwd || String(pwd).length < 8) this.setState({pwdError: true})\n            else if(pwd != rePwd) this.setState({ rePwdError: true})\n        }\n        }\n        else{\n            this.setState({pwdError:true})\n        }\n    }\n\n    render(){\n        const { pwdError, showPass, strength, pwd, isRequesting, rePwd, rePwdError, showRePass } = this.state\n        return <div className=\"w-100 mb-lg-0 mb-3\">\n            <>\n                <div className=\"text-start mb-5\">\n                    <h1 className=\"mb-0 display-2 fw-bold mb-3\">Set Password</h1>\n                    <div className=\"text-gray-500 fs-8\">Create a new password for accessing the platform.</div>\n                </div>\n                <div className=\"mb-8\">\n                    <Form.Group className=\"mb-4 mb-xl-5\">\n                        <Form.Label className=\"fw-bold \" htmlFor=\"password_\">Password</Form.Label>\n                        <div className={`position-relative d-block mb-1 ${pwdError ? 'is-invalid mb-1':''}`}>\n                            <Form.Control type={showPass ? 'text' : 'password'} placeholder=\"Password\" id=\"password_\" size='lg' maxLength=\"24\" onChange={this.checkPassStrength} value={pwd}/>\n                            <span className=\"view_pass fs-6 btn btn-icon bg-transparent border-0 text-gray-500 position-absolute translate-middle top-50\" onClick={event => this.setState({ showPass: !showPass })}>\n                                <FontAwesomeIcon icon={showPass ? 'eye' : 'eye-slash'}/>\n                            </span>\n                        </div>\n                        {pwdError ? <span className=\"invalid-feedback mb-1\">Enter valid password.</span> : null}\n                        <span className={!pwdError ? `text-muted` : 'text-danger'}>Use 8 or more characters with a mix of letters, numbers & symbols.</span>\n                    </Form.Group>\n                    <PwdStrength strength={strength} />\n                    <div className=\"fv-row mb-3 pt-1\">\n                        <Form.Group className={`mb-4 mb-xl-5`} onKeyDown={e => e.key == 'Enter' ? this.onSetPwd() : ''}>\n                            <Form.Label className=\"fw-bold \" htmlFor=\"re-password_\">Confirm Password</Form.Label>\n                            <span className={`position-relative d-block mb-2  ${rePwdError ? `is-invalid` : ``} `}>\n                                <Form.Control type={showRePass ? 'text' : 'password'} id=\"re-password_\" size=\"lg\" placeholder=\"Repeat Password\" minLength=\"8\" maxLength=\"24\" onChange={this.onPasswordReTextChange} value={rePwd || ''} />\n                                <span className=\"view_pass fs-6 btn btn-icon bg-transparent border-0 text-gray-500 position-absolute translate-middle top-50\" onClick={() => this.setState({ showRePass: !showRePass })}>\n                                    <FontAwesomeIcon icon={showRePass ? 'eye' : 'eye-slash'}/>\n                                </span>\n                            </span>\n                            {rePwdError ? <div className=\"invalid-feedback\">Password does not match</div> : null}\n                        </Form.Group>\n                    </div>\n    </div>\n                <div className=\"d-grid mb-4 w-100\">\n                    <Button variant=\"primary\" size={'lg'} type=\"submit\" className={`${isRequesting ? ' disabled' : ''}`}  onClick={()=>this.onSetPwd()}>\n                        <span className=\"indicator-label\" style={{ display: isRequesting ? 'none' : 'block' }}>Get Started!</span>\n                        <span className=\"indicator-progress\" style={{ display: !isRequesting ? 'none' : 'block' }}> Please wait...\n                            <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\n                        </span>\n                    </Button>\n                </div>\n                <FormTerms/>\n            </>\n        </div>\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    getHomeData : () => dispatch(TAGSHOP_USER_HOME_DATA()),\n})\n\nexport default connect(null, mapDispatchToProps)(TempPassword)","import React, { Suspense, useState, useEffect } from \"react\";\n// import Login from \"../Authentication/Login\";\n// import SignUp from '../Authentication/SignUp'\n// import ForgotPassword from '../Authentication/ForgotPassword'\n// import ResetPassword from '../Authentication/ResetPassword'\n\nimport { Routes, Route, Navigate, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport StripeCallback from '../Layout/Main/PricePlan/StripeCallback';\n\n// import MoreInfo from '../Authentication/MoreInfo'\n// import VerifyEmail from '../Authentication/verifyEmail'\n// import AccountVerify from '../Authentication/Components/AccountVerify'\n// import PricePlan from \"../Layout/Main/PricePlan/SignUpPricePlan\";\n// import Authentication from \"../Authentication\";\nimport ErrorFound from \"../ErrorFound\";\nimport { HOST_URL } from \"../../actions/api\";\nimport { BIGCOMMERCE_LOAD_LOGIN, installShopify, loginWithBigcommerce, loginWithShopify } from \"../../actions/loginActions\";\nimport { Loader } from \"../Layout/Main/CommonComponents/Loader\";\nimport PageHead from \"./pageTitle\";\nimport Authorization from '../../utils/Authorization';\nimport UgcRightsAction from \"../Layout/Main/UgcRightsAction\";\nimport ShopifyInstall from \"../Authentication/ShopifyInstall\"\nimport ShopifyPlanCallback from \"../Layout/Main/PricePlan/ShopifyPlanCallback\";\nimport ColabSignUp from \"../Authentication/ColabSignUp\";\nimport TempPassword from \"../Authentication/TempPassword\";\n//const ShareAccount = React.lazy(() => import(\"../components/shareAccount\"));\n\nconst Login = React.lazy(() => import(\"../Authentication/Login\"));\nconst SignUp = React.lazy(() => import(\"../Authentication/SignUp\"));\nconst ForgotPassword = React.lazy(() => import(\"../Authentication/ForgotPassword\"));\nconst ResetPassword = React.lazy(() => import(\"../Authentication/ResetPassword\"));\nconst MoreInfo = React.lazy(() => import(\"../Authentication/MoreInfo\"));\nconst VerifyEmail = React.lazy(() => import(\"../Authentication/verifyEmail\"));\nconst AccountVerify = React.lazy(() => import(\"../Authentication/Components/AccountVerify\"));\nconst PricePlan = React.lazy(() => import(\"../Layout/Main/PricePlan/SignUpPricePlan\"));\nconst Authentication = React.lazy(() => import(\"../Authentication\"));\nconst ShareAccount = React.lazy(() => import(\"../Layout/Main/SocialAccount/ShareAccount\"));\n\nconst UpdateResetPassword = (props) => {\n  const params = useParams();\n  return <Suspense fallback={null}><ResetPassword prefix={props.prefix} params={params} /></Suspense>\n}\n\nconst UpdateVerifyEmail = (props) => {\n  const params = useParams();\n  return <Suspense fallback={null}><VerifyEmail prefix={props.prefix} params={params} history={props.history} /></Suspense>\n}\n\nconst SwitchInTaggshop = (props) => {\n  const location = useLocation();\n  const isToken = new URLSearchParams(location.search).get(\"token\");\n  const callback = new URLSearchParams(location.search).get(\"callback\");\n  if (isToken) {\n    localStorage.setItem(\"token\", isToken)\n    window.location.href = callback\n  }\n  return <div className='h-100vh w-100 f-center'><Loader /></div>\n}\n\nconst Redirectlogin = (props) => {\n  localStorage.clear()\n  const params = useParams();\n  const isAdmin = window.location.href.includes('admin')\n  if (isAdmin) localStorage.setItem(\"isAdmin\", 1)\n  else localStorage.setItem(\"isAdmin\", 0)\n\n\n  if (params.token) {\n    localStorage.setItem(\"token\", atob(params.token))\n    window.location.href = `${HOST_URL}home`\n  }\n  return <div className='h-100vh w-100 f-center'><Loader /></div>\n}\n\n\nconst BigCommerceAuth = ({ history }) => {\n\n  const location = useLocation();\n  const code = new URLSearchParams(location.search).get(\"code\");\n  const account_uuid = new URLSearchParams(location.search).get(\"account_uuid\");\n  const context = new URLSearchParams(location.search).get(\"context\");\n  const scope = new URLSearchParams(location.search).get(\"scope\");\n\n  useEffect(() => {\n    loginWithBigcommerce({ code, account_uuid, context, scope }, history);\n  }, []);\n\n  return <div className='h-100vh w-100 f-center'><Loader /></div>\n}\n\nconst BigCommercLogin = () => {\n  const location = useLocation()\n  const signed_payload = new URLSearchParams(location.search).get(\"signed_payload\")\n  const signed_payload_jwt = new URLSearchParams(location.search).get(\"signed_payload_jwt\")\n  useEffect(() => {\n    BIGCOMMERCE_LOAD_LOGIN({ signed_payload, signed_payload_jwt })\n  }, [])\n\n  return <div className='h-100vh w-100 f-center'><Loader /></div>\n}\n\nexport default function LoginBasePage(props) {\n  const navigate = useNavigate()\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\") && !window.location.pathname.includes('/accounts') && !window.location.pathname.includes('/connection') && !window.location.pathname.includes('/bigcommerce') && !window.location.pathname.includes('/Shopify') && !window.location.pathname.includes('/autologin') && !window.location.pathname.includes('/redirectlogin') && !window.location.pathname.includes('/ugc_right') && !window.location.pathname.includes('/feeds/authCallback') && !window.location.pathname.includes('/collaborator/request')) {\n      navigate('/')\n    }\n  }, [])\n\n  return (\n    <ErrorFound>\n      <PageHead />\n      <Routes>\n        <Route exact path=\"/autologin\" element={<SwitchInTaggshop history={props.history} />} />\n        <Route exact path=\"/redirectlogin/:token/:isAdmin\" element={<Redirectlogin />} />\n        <Route exact path=\"/redirectlogin/:token\" element={<Redirectlogin />} />\n        <Route exact path=\"/\" element={<Suspense fallback={null}><Authentication><Login prefix=\"/\" history={navigate} /></Authentication></Suspense>} />\n        {/* <Route exact path=\"/accounts/register\" element={<Suspense fallback={null}><Authentication><SignUp prefix=\"/\" history={navigate} /></Authentication></Suspense>} /> */}\n        <Route exact path=\"/accounts/login\" element={<Suspense fallback={null}><Authentication><Login prefix=\"/\" history={navigate} /></Authentication></Suspense>} />\n        <Route exact path=\"/accounts/forgotpassword\" element={<Suspense fallback={null}><Authentication><ForgotPassword prefix=\"/\" activeProduct=\"0\" /></Authentication></Suspense>} />\n        <Route exact path=\"/accounts/temp-pwd\" element={<Suspense fallback={null}><Authentication><TempPassword prefix=\"/\" activeProduct=\"0\" history={navigate} /></Authentication></Suspense>} />\n        <Route exact path=\"/accounts/resetpassword/:userId/:token\" element={<Suspense fallback={null}><Authentication><UpdateResetPassword prefix=\"/\" /></Authentication></Suspense>} />\n\n        <Route exact path=\"/accounts/otherinfo\" element={<Suspense fallback={null}><Authentication><MoreInfo prefix=\"/\" addEmail={false} history={props.history} getBack={props.getBack}/></Authentication></Suspense>} />\n        <Route exact path=\"/accounts/extemail\" element={<Suspense fallback={null}><Authentication><MoreInfo addEmail={true} prefix=\"/\" history={props.history} /></Authentication></Suspense>} />\n\n        <Route exact path=\"/accounts/price\" element={<Suspense fallback={null}><PricePlan history={props.history} /></Suspense>} />\n        {/* <Route exact path=\"/accounts/verifyemail/:id\" element={<UpdateVerifyEmail prefix=\"/\" history={props.history} />} />\n        <Route exact path=\"/accounts/verify\" element={<Suspense fallback={null}><AccountVerify prefix=\"/\" history={props.history} /></Suspense>} /> */}\n\n\n        <Route exact path=\"/feeds/authCallback\" element={<Authorization />} />\n        <Route exact path=\"/accounts/paymentPaidCallback\" element={<StripeCallback />} />\n        <Route exact path=\"/ugc_right/:id\" element={<UgcRightsAction />} />\n \n        <Route path=\"/Shopify/token\" element={<ShopifyInstall history={navigate} isInstall={false} />} />\n        <Route path=\"/Shopify/install\" element={<ShopifyInstall history={navigate} isInstall={true} />} />\n        <Route path=\"/bigcommerce/oauth\" element={<BigCommerceAuth history={navigate} />} />\n        <Route path=\"/bigcommerce/load\" element={<BigCommercLogin />} />\n        {/* http://localhost:3000/v2/Shopify/install?shop=jewelsofjaipurindia.myshopify.com */}\n        <Route exact path=\"/connection/:id\" element={<Suspense fallback={null}><ShareAccount /></Suspense>} />\n        <Route path=\"*\" element={<Navigate to={`/accounts/login`} />} />\n        <Route exact path=\"/accounts/shopifypaymentcomplete\" element={<ShopifyPlanCallback />} />\n        <Route path=\"/collaborator/request/:ownerToken/:collaboratorToken\" element={<Authentication><ColabSignUp history={navigate} /></Authentication>}></Route>\n      </Routes>\n\n    </ErrorFound>\n  )\n}"],"names":["_ref2","history","isInstall","params","useSearchParams","location","useLocation","searchParams","URLSearchParams","search","app_load_id","get","code","embedded","hmac","host","id_token","link_source","locale","session","shop","timestamp","cleanParams","obj","Object","fromEntries","entries","filter","_ref","_","value","undefined","dispatch","useDispatch","useEffect","loginWithShopify","installShopify","localStorage","getItem","syncWithShopify","guestUseShopify","ownerId","_jsx","className","children","Loader","TempPassword","Component","constructor","props","super","state","pwd","showPass","pwdError","strength","isRequesting","rePwd","showRePass","checkPassStrength","event","password","target","validatePassword","this","setState","onPasswordReTextChange","rePwdError","onSetPwd","String","length","resetPasswords","userId","token","then","response","getHomeData","catch","TOAST_ERROR","render","_jsxs","_Fragment","Form","Group","Label","htmlFor","Control","type","placeholder","id","size","maxLength","onChange","onClick","FontAwesomeIcon","icon","PwdStrength","onKeyDown","e","key","minLength","Button","variant","style","display","FormTerms","connect","TAGSHOP_USER_HOME_DATA","Login","React","ForgotPassword","ResetPassword","MoreInfo","PricePlan","Authentication","ShareAccount","UpdateResetPassword","useParams","Suspense","fallback","prefix","SwitchInTaggshop","isToken","callback","setItem","window","href","Redirectlogin","clear","includes","atob","HOST_URL","BigCommerceAuth","account_uuid","context","scope","loginWithBigcommerce","BigCommercLogin","signed_payload","signed_payload_jwt","BIGCOMMERCE_LOAD_LOGIN","LoginBasePage","navigate","useNavigate","pathname","ErrorFound","PageHead","Routes","Route","exact","path","element","activeProduct","addEmail","getBack","Authorization","StripeCallback","UgcRightsAction","ShopifyInstall","Navigate","to","ShopifyPlanCallback","ColabSignUp"],"sourceRoot":""}