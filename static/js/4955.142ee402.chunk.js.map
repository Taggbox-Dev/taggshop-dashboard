{"version":3,"file":"static/js/4955.142ee402.chunk.js","mappings":"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","sources":["app/Layout/Main/Feeds/ManualUpload/ManualHead.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Alert, Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\nimport { generateRandomArray, GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../../utils\";\nimport { getCustomNetwork } from \"../../../../../actions/appsMoreAction\";\nimport withRouter from \"../../../../routes/WithRouter\";\n\nclass ManualHead extends Component{\n    state={\n        networkList:[{id:18}, {id:28}],\n        loader:false\n    }\n    \n    // componentDidMount(){\n    //     getCustomNetwork().then(response => {\n    //         const {responseData} = response.data\n    //         if(responseData?.length > 0) this.setState({networkList:responseData, loader:false})\n    //     })\n    // }\n\n    render(){\n        const {loader, networkList} = this.state\n        const { onBoarding, setNetwork, navigate } = this.props\n        return <div className='d-flex flex-column flex-column-fluid w-100 py-5 manual_upload_'>\n            {!onBoarding ? <div className=\"subheader\">\n                <Container fluid>\n                    <div className='d-flex align-items-center'>\n                        <Link to={`/content/addfeed/${localStorage.getItem('wallId')}`} className=\"btn btn-icon bg-gray-100 btn-sm me-2\" title='Upload Feed'><FontAwesomeIcon icon={'angle-left'} iconClass={'me-0'}/></Link>\n                        <h1 className=\"me-2 h4 my-3\">Upload Feed</h1>\n                    </div>\n                </Container>\n            </div> : null}\n            <Container fluid>\n                <Card className={`${onBoarding?'shadow-none border-0':''}`}>\n                    <Card.Body className='f-center flex-column manual_upload_card'>\n                        <h3 className='text-center mb-3'>Manual Uploads</h3>\n                        <p className='text-center mb-8'>Upload content directly to the feed via device or by adding a post URL from Instagram or TikTok </p>\n                        <div className='f-center flex-wrap w-100 flex-column'>\n                            {!loader ? \n                            <Row className='w-100' style={{maxWidth:600}}>\n                                <Col>\n                                    <Button onClick={() => onBoarding ? setNetwork(0) : navigate(`/manual-upload/feed?network=0`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                        <p className='display-2 mb-3'>\n                                            <FontAwesomeIcon type={'light'} icon={'laptop'} iconClass={'me-0'}/>\n                                        </p>\n                                        <p className='mb-0 fs-10 fw-medium'>My Device</p>\n                                    </Button>\n                                </Col>\n\n                                {networkList.length > 0 ? networkList.map(network =><Col>\n                                    <Button onClick={() => onBoarding ? setNetwork(network.id) : navigate(`/manual-upload/feed?network=${network.id}`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                        <p className='display-2 mb-3'>\n                                            <Image src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} height={36} width={36} fluid/>\n                                        </p>\n                                        <p className='mb-0 fs-10 fw-medium'>{GET_NETWORK_NAME(network.id)}</p>\n                                    </Button>\n                                </Col>) : null}\n                            </Row> \n                            :\n                            <Row className='w-100' style={{maxWidth:600}}>\n                            {generateRandomArray(3).map((_, index) => <Col>\n                                <div key={index} className=\"btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4 d-flex\">\n                                    <div className=\"sk_rect h-40px w-40px mb-3\"></div>\n                                    <div className=\"sk_line h-10px mb-1 w-75\"></div>\n                                </div>\n                                </Col>)}\n                            </Row>\n                            }\n                            {onBoarding ? \n                                <div className=\"f-center\">\n                                    <Button variant='link' className=\"text-decoration-underline\" onClick={() => this.props.onBack('c_n')}>\n                                        Choose another Network\n                                    </Button>\n                                </div>: null}\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(ManualHead)"],"names":["ManualHead","Component","constructor","arguments","state","networkList","id","loader","render","this","onBoarding","setNetwork","navigate","props","_jsxs","className","children","_jsx","Container","fluid","Link","to","localStorage","getItem","title","FontAwesomeIcon","icon","iconClass","Card","Body","Row","style","maxWidth","generateRandomArray","map","_","index","Col","Button","onClick","type","length","network","Image","src","baseUrl","GET_NETWORK_ICON","height","width","GET_NETWORK_NAME","variant","onBack","withRouter"],"sourceRoot":""}