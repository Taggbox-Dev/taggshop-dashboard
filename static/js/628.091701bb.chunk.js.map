{"version":3,"file":"static/js/628.091701bb.chunk.js","mappings":"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","sources":["app/Layout/Main/Collaborator/Collaborator.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Badge, Button, Card, Container, Dropdown, OverlayTrigger, Table, Tooltip } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ProfileImage from \"../CommonComponents/ProfileImage/ProfileImage\";\nimport moment from \"moment\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\nimport EmptyWithIcon from \"../CommonComponents/Empty/EmptyWithIcon\";\nimport { connect } from \"react-redux\";\nimport { deleteCollaborator, getCollaboratorList, updatePermission, updateStatus } from \"../../../../actions/collaboratorActions\";\nimport { GET_COLLABORATOR_LIST } from \"../../../../reducer/keys\";\nimport Swal from \"sweetalert2\";\nimport withRouter from \"../../../routes/WithRouter\";\nimport { TOAST_ERROR } from \"../../../../utils\";\n\n\nconst rowHeadings = [{name:\"Collaborator\", width:160}, {name:\"Invited\", width:130}, {name:\"Status\", width:100}, {name:\"Permission\", width:100}, {name:\"Invited By\", width:120}, {name:\"Actions\", width:70}]\nclass Collaborator extends Component{\n\n    state = {\n        loading:true,\n        userRole: null\n\n    }\n\n    componentDidMount(){\n        const { userData } = this.props\n        if(userData) this.getCollaborators(userData)\n    }\n\n    componentWillReceiveProps(nextProps){\n        const { userData } = nextProps\n        if(JSON.stringify(userData) != JSON.stringify(this.props.userData)) this.getCollaborators(userData)\n    }\n\n    getCollaborators = (userData) => {\n        const { setCollaboratorList } = this.props\n        getCollaboratorList().then(response=>{\n            const userType = userData.collaborator == '' || userData.collaborator.activeAccount == 0 ? 3 : 0\n            const { workspace } = response.data.responseData\n            setCollaboratorList(workspace)\n            this.setState({loading:false, userRole: userType})\n        }).catch(ex=>{this.setState({loading:false},()=>{})})\n    }\n\n    modifyCollaborator = (value,type) => {\n        const { updateCollaboratorPermission, deleteCollaborator } = this.props\n        Swal.fire({\n            title: 'Are you sure?',\n            text: type == \"delete\" ? \"Do you wish to continue and delete the chosen item?\" : \"Modifying this setting will lead to alterations in permissions.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: type == \"delete\" ? \"Yes, delete it!\" : 'Yes, change permission!'\n          }).then((result) => {\n            if (result.isConfirmed) type == \"delete\" ? deleteCollaborator({collaborators: String(value)}) : updateCollaboratorPermission(value)\n        })\n    }\n\n    render(){\n        const { loading, userRole } = this.state\n        const { collaboratorList, userData } = this.props\n        return <div className='d-flex flex-column flex-column-fluid full-content'>\n            <div className=\"subheader\">\n                <Container fluid>\n                    <div className=\"nav nav-underline\">\n                        <div className='nav-item'>\n                            <Link to={'/profile'} className=\"nav-link\" title=\"Profile\">Profile</Link>\n                        </div>\n                        {userData && (userData.collaborator == '' || userData.collaborator?.activeAccount == 0) ? <div className='nav-item'>\n                            <Link to={'/transactions'} className=\"nav-link\" title=\"Plan Details\">Plan Details</Link>\n                        </div> : null}\n                        <div className='nav-item'>\n                            <Link to={'/social-account'} className=\"nav-link\" title=\"Accounts\">Social Accounts</Link>\n                        </div>\n                        <div className='nav-item'>\n                            <Link to={'/collaborator'} className=\"nav-link active\" title=\"Collaborator\">Collaborator</Link>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n            <Container>\n                <Card>\n                    <Card.Header className='f-between d-flex'>\n                        <h2 className=\"me-2 h4 my-3\">Collaborator Panel</h2>\n                        <div className=\"f-center\">\n                            <Link to={'/collaborator/add'} className=\"btn btn-primary my-2 btn-sm\" title=\"Invite Collaborator\">\n                                <FontAwesomeIcon icon={'plus'}/>\n                                Invite Collaborator\n                            </Link>\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                        <div style={{minHeight:'calc(100vh - 240px)'}}>\n                        {loading ?<Loader/> : collaboratorList.length>0 ?\n                        <div className=\"table-responsive\" style={{minHeight:300}}>\n                            <Table size='lg' className=\"align-middle gs-0 gy-3\">\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        {rowHeadings.map((head,index)=> {return <th key={index} className={`fw-bold text-nowrap ${head.name==\"Actions\" ? \"text-end\" : \"\"}`} style={{minWidth: head.width}}>{head.name}</th>})}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {collaboratorList.map(collaborator=>{return <tr>\n                                    <td>\n                                        <div className=\"d-flex align-items-center\">\n                                            <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                imageSize={40}\n                                                symbolClass={'symbol-label fs-6 bg-primary'}\n                                                name={collaborator['UserCollab.name']} profileUrl={collaborator['UserCollab.picture']} networkId={''} />\n                                            <div className=\"overflow-hidden\" style={{ maxWidth: 200 }}>\n                                                <p className=\"text-gray-dark fw-semibold mb-0 text-ellipsis fs-8\">{collaborator['UserCollab.name']}</p>\n                                                <span className=\"fs-9 mb-0 text-gray-500 fw-medium text-ellipsis d-block\">{collaborator['UserCollab.emailId']}</span>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <p className=\"text-gray-900 fw-medium mb-0 text-nowrap\">{moment(collaborator['UserCollab.created']).format(\"Do MMM YYYY\")}</p>\n                                        <span className=\"fs-9 fw-medium text-gray-500 text-nowrap\">{moment.utc(new Date(collaborator['UserCollab.created'])).format(\"h:mm a\")}</span>\n                                    </td>\n                                    <td>\n                                        {collaborator.status!=2 ?\n                                        <label className=\"form-check form-switch\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" checked={collaborator.status==1} onChange={()=>this.props.updateStatus(collaborator)} />\n                                            </label>\n                                            :\n                                            <Badge bg=\"\" className=\"badge-light-warning\">Pending</Badge>\n                                        }\n                                    </td>\n                                    <td>\n                                        <div className=\"d-flex align-items-center\">\n                                            \n                                            {userRole == 3 ? <Dropdown style={{minWidth:200}}>\n                                                <Dropdown.Toggle variant=\"secondary\" className=\"d-flex align-items-center w-100 justify-content-between bg-white fs-9\">\n                                                    {collaborator.role==1 ? \"Admin\" : \"Manager\"}\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu className=\"w-100\">\n                                                    <Dropdown.Item key={0} onClick={()=> collaborator.role == 1 ? TOAST_ERROR(\"Collaborator is already an admin.\") : this.modifyCollaborator(collaborator, \"change\")}>Admin</Dropdown.Item>\n                                                    <Dropdown.Item key={1} onClick={()=> collaborator.role == 2 ? TOAST_ERROR(\"Collaborator is already a manager.\") : this.props.navigate(`/collaborator/edit/${collaborator.id}?permission=1`)}>Manager</Dropdown.Item>\n                                                </Dropdown.Menu>\n                                            </Dropdown>:collaborator.role==1 ?\"Admin\" : \"Manager\"}\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div className=\"d-flex align-items-center cursor-pointer text-decoration-none\">\n                                            <ProfileImage className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                imageSize={36}\n                                                symbolClass={'symbol-label fs-6 bg-primary'}\n                                                name={collaborator['UserAdmin.name']} profileUrl={collaborator['UserAdmin.picture']}/>\n                                            <p className=\"text-gray-dark fw-medium mb-0 text-ellipsis\">{collaborator['UserAdmin.name']}</p>\n                                        </div>\n                                    </td>\n                                    <td className=\"pr-0 text-end\">\n                                        <div className=\"d-flex align-items-center justify-content-end\">\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                                <Link to={`/collaborator/edit/${collaborator.id}`} id={`col-edit-${collaborator.id}`} className={`btn btn-icon btn-sm btn-active-primary ms-2`} title=\"Edit Collaborator\">\n                                                    <FontAwesomeIcon type=\"solid\" icon={'pen'}/>\n                                                </Link>\n                                            </OverlayTrigger>\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                                <Button id={`col-remove-${collaborator.id}`} variant=\"icon\" size='sm' className={`btn-active-danger ms-2`} aria-label=\"delete\" onClick={()=>this.modifyCollaborator(collaborator.id, \"delete\")}>\n                                                    <FontAwesomeIcon type=\"solid\" icon={'trash-can'}/>\n                                                </Button>\n                                            </OverlayTrigger>\n                                        </div>\n                                    </td>\n                                </tr>})}\n                                </tbody>\n                            </Table>\n                        </div>\n                            :  \n                            <div className=\"f-center\" style={{minHeight:'calc(100vh - 240px)'}}>\n                                <EmptyWithIcon title=\"Uh-oh! Nothing to see here.\" desc={'You can start adding new collaborators here.'} icon={'user-plus'} button={{ text: 'Invite Collaborator', action:()=>this.props.navigate('/collaborator/add') }} isFullScreen={false} />\n                            </div>\n                        }\n                       \n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container> \n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        collaboratorList: state.collaborator.collaboratorList,\n        userData: state.authorized?.userData?.user_data\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    deleteCollaborator : (id) => dispatch(deleteCollaborator(id)),\n    setCollaboratorList : (workspace) => dispatch({type: GET_COLLABORATOR_LIST, payload: workspace }),\n    updateCollaboratorPermission : (collaborator) => dispatch(updatePermission(collaborator)),\n    updateStatus: (collaborator) => dispatch(updateStatus(collaborator))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Collaborator))"],"names":["rowHeadings","name","width","Collaborator","Component","constructor","arguments","state","loading","userRole","getCollaborators","userData","setCollaboratorList","this","props","getCollaboratorList","then","response","userType","collaborator","activeAccount","workspace","data","responseData","setState","catch","ex","modifyCollaborator","value","type","updateCollaboratorPermission","deleteCollaborator","Swal","title","text","icon","showCancelButton","confirmButtonText","result","isConfirmed","collaborators","String","componentDidMount","componentWillReceiveProps","nextProps","JSON","stringify","render","_userData$collaborato","collaboratorList","_jsxs","className","children","_jsx","Container","fluid","Link","to","Card","Header","FontAwesomeIcon","Body","style","minHeight","Loader","length","Table","size","map","head","index","minWidth","ProfileImage","imageSize","symbolClass","profileUrl","networkId","maxWidth","moment","format","Date","status","checked","onChange","updateStatus","Badge","bg","Dropdown","Toggle","variant","role","Menu","Item","onClick","TOAST_ERROR","navigate","id","OverlayTrigger","placement","overlay","Tooltip","Button","EmptyWithIcon","desc","button","action","isFullScreen","connect","_state$authorized","_state$authorized$use","authorized","user_data","dispatch","GET_COLLABORATOR_LIST","payload","updatePermission","withRouter"],"sourceRoot":""}