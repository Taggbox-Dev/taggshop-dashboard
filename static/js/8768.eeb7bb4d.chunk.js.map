{"version":3,"file":"static/js/8768.eeb7bb4d.chunk.js","mappings":"2NAKA,MAAMA,UAAqBC,EAAAA,UACvBC,MAAAA,GACI,MAAM,MAACC,EAAK,QAAEC,EAAO,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,GAAaC,KAAKC,MACtDC,EAAQJ,EAAkB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MAAgB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUO,MAC9CC,EAAQP,EAAmB,OAATC,QAAS,IAATA,OAAS,EAATA,EAAWO,oBAA+B,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWQ,cACpE,IAAIC,EAAWC,SAAUJ,GAASH,GAAgB,KAAQ,KAY1D,OAAOQ,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,UAAU,gCAA+BC,UAClDC,EAAAA,EAAAA,MAACH,EAAAA,EAAKI,KAAI,CAAAF,SAAA,EACNC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,KAAIC,SAAElB,KACrBe,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CAACC,UAAU,MAAMC,SAASR,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAAAN,SAAEjB,IAAmBiB,UAClEH,EAAAA,EAAAA,KAAA,QAAAG,UAAMH,EAAAA,EAAAA,KAACU,EAAAA,GAAe,CAACC,KAAM,QAASC,KAAM,cAAeC,UAAW,uBAG9ET,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,KAAIC,SAAA,CAAER,GAAY,EAAE,IAAEH,GAAY,MACjDQ,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,SArBRC,EAqB0BlB,EApBnCkB,GAAK,GACE,SACAA,GAAK,GACL,UACAA,GAAK,EACL,UAEA,WAauCd,UAAU,SAASe,IAAKnB,GAAkB,YArB/EkB,KA0BzB,EAEA,MAOA,GAAeE,EAAAA,EAAAA,KAPSC,IAAU,IAADC,EAAAC,EAC7B,MAAO,CACHlC,SAA6C,QAArCiC,EAAED,EAAMG,WAAWC,SAASC,iBAAS,IAAAJ,OAAA,EAAnCA,EAAqCK,SAC/CpC,UAA6B,QAApBgC,EAACF,EAAMO,qBAAa,IAAAL,OAAA,EAAnBA,EAAqBM,cAClC,GAGL,CAAwC7C,E","sources":["app/Layout/Main/Home/Dashboard/OverallCount.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { OverlayTrigger, Tooltip, Col, Card, ProgressBar } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\n\nclass OverallCount extends Component {\n    render(){\n        const {title, tooltip, userRule, gallery, dashBoard} = this.props\n        const total = gallery ? userRule?.walls : userRule?.feeds\n        const count = gallery ? dashBoard?.numberOfActiveWalls : dashBoard?.allfeedsCount\n        let progress = parseInt((count / (total ? total : 100)) * 100);\n        const getColor = e => { \n            if (e >= 70) {\n                return 'danger';\n            } else if (e >= 50) {\n                return 'warning';\n            } else if (e >= 0) {\n                return 'success';\n            } else {\n                return 'unknown';\n            }\n        }\n        return <Card className=\"card-50 card-stretch gutter-b\">\n            <Card.Body>\n                <div className=\"f-between mb-3\">\n                    <div className=\"h4\">{title}</div>\n                    <OverlayTrigger placement='top' overlay={<Tooltip>{tooltip}</Tooltip>} >\n                        <span><FontAwesomeIcon type={'solid'} icon={'circle-info'} iconClass={'text-muted'}/></span>\n                    </OverlayTrigger>\n                </div>\n                <div className=\"d-flex flex-column\">\n                    <div className=\"h4\">{count?count:0}/{total?total:0}</div>\n                    <ProgressBar variant={getColor(progress)} className=\"h-10px\" now={progress?progress:0} />\n                </div>\n            </Card.Body>\n        </Card>\n    return <h1>HELLO</h1>\n}}\n\nconst mapStateToProps = state => {\n    return {\n        userRule: state.authorized.userData.user_data?.UserRule,\n        dashBoard:state.dashboardData?.dashboarddata\n    }\n}   \n\nexport default connect(mapStateToProps)(OverallCount)"],"names":["OverallCount","Component","render","title","tooltip","userRule","gallery","dashBoard","this","props","total","walls","feeds","count","numberOfActiveWalls","allfeedsCount","progress","parseInt","_jsx","Card","className","children","_jsxs","Body","OverlayTrigger","placement","overlay","Tooltip","FontAwesomeIcon","type","icon","iconClass","ProgressBar","variant","e","now","connect","state","_state$authorized$use","_state$dashboardData","authorized","userData","user_data","UserRule","dashboardData","dashboarddata"],"sourceRoot":""}