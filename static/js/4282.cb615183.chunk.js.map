{"version":3,"file":"static/js/4282.cb615183.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Rating.js","app/Layout/Main/Moderation/Header/Elements/QuickSearch.js","app/Layout/Main/Moderation/Header/Elements/dateRange/dateRange.js","app/Layout/Main/Moderation/Header/Elements/dateRange/index.js","app/Layout/Main/Moderation/Header/Elements/index.js","app/Layout/Main/Moderation/Elements/Pagination.js","app/Layout/Main/Moderation/UgcRights/Elements/ErrorModal.js","app/Layout/Main/Moderation/UgcRights/Elements/PermissionError.js","app/Layout/Main/Moderation/Header/Elements/ModSubHeader.js","app/Layout/Main/Moderation/Header/index.js","app/Layout/Main/Moderation/Filters/postTagSearch.js","app/Layout/Main/Moderation/Filters/index.js","app/Layout/Main/Moderation/Filters/filterTab.js","app/Layout/Main/Moderation/UgcRights/Elements/CardPreview.js","app/Layout/Main/Moderation/UgcRights/Elements/CopyUrl.js","actions/tinyUrlAction.js","app/Layout/Main/Moderation/UgcRights/Elements/CreateTemplate.js","app/Layout/Main/Moderation/UgcRights/Elements/GeneralRequest.js","app/Layout/Main/Moderation/UgcRights/Elements/SocialAccounts.js","app/Layout/Main/Moderation/UgcRights/Elements/ChooseMethod.js","app/Layout/Main/Moderation/UgcRights/index.js","app/Layout/Main/Moderation/UgcRights/Status/ApprovedModal.js","app/Layout/Main/Moderation/UgcRights/Status/RadialChart.js","app/Layout/Main/Moderation/UgcRights/Status/PendingModal.js","app/Layout/Main/Moderation/UgcRights/Status/RejectModal.js","app/Layout/Main/Moderation/UgcRights/Status/index.js","app/Layout/Main/Moderation/Elements/Skeleton.js","app/Layout/Main/Moderation/Elements/TagedProducts.js","app/Layout/Main/Moderation/Elements/Tags.js","app/Layout/Main/Moderation/Elements/ChangeOrderModal.js","app/Layout/Main/Moderation/ContentModal/EditElements/EditAside.js","app/Layout/Main/CommonComponents/MediaType/TextType.js","app/Layout/Main/Moderation/ContentModal/Elements/ModalMedia.js","app/Layout/Main/Moderation/ContentModal/EditElements/index.js","app/Layout/Main/Moderation/ContentModal/Elements/Hotspot.js","app/Layout/Main/Moderation/ContentModal/ContentModal.js","app/Layout/Main/Moderation/Elements/RefreshPost.js","app/Layout/Main/Moderation/MasonryView.js","app/Layout/Main/Moderation/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '../../../../Assets/AssetsHelper';\r\nimport { generateRandomArray } from '../../../../utils';\r\n\r\n\r\nconst Rating = ({ rating, className, iconClass }) => {\r\n       return rating ? \r\n              <div className={`f-center ${className}`}>\r\n                     {generateRandomArray(5).map((rate, index) => <span className={`${rate > rating? 'text-gray-300' : 'text-warning'} ${iconClass}`} key={index}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'star'}/>\r\n                            </span>)\r\n                     }\r\n              </div> \r\n       : null\r\n}\r\nexport default Rating\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions'\r\nimport { Button, InputGroup, Form, Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\n\r\n\r\nclass QuickSearch extends Component {\r\n    state = { tagSearchList: [], searchPost: \"\", selected: \"\", openSearch: false }\r\n\r\n    onLoad = () => {\r\n        const { searchPost } = this.state;\r\n        if (searchPost.length > 0) {\r\n            autoCompleteSearch(searchPost).then((response) => {\r\n                const { responseData, totalTag, responseCode } = response.data;\r\n                if (responseCode === 200) this.setState({ tagSearchList: responseData?.totalTag })\r\n                else this.setState({ tagSearchList: [] })\r\n            })\r\n        }\r\n        else { this.setState({ tagSearchList: [] }) }\r\n    }\r\n\r\n    onSearchText = (text) => this.setState({ searchPost: text }, () => this.onLoad())\r\n\r\n\r\n    onClickToSearchTags = (selectSearch) => event => {\r\n        this.setState({ searchPost: selectSearch, selected: selectSearch, tagSearchList: [] }, () => this.props.searchTagsFilter(this.state.selected))\r\n    }\r\n\r\n    onClickToSearchPost = (selectSearch) => event => {\r\n        if (selectSearch && String(selectSearch).length > 0) this.setState({ searchPost: '', selected: selectSearch, tagSearchList: [] }, () => this.props.searchPostFilter(selectSearch))\r\n    }\r\n\r\n    render() {\r\n        const { tagSearchList, openSearch, searchPost } = this.state;\r\n        return <>\r\n            <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => this.setState({ openSearch: !openSearch })}>\r\n                <FontAwesomeIcon icon={openSearch ? 'xmark' : 'magnifying-glass'} />\r\n            </Button>\r\n            <Dropdown show={tagSearchList && tagSearchList.length > 0 ? true : false} className=\"assets_search_input position-absolute me-lg-2\" style={{ display: openSearch ? 'block' : 'none' }}>\r\n                <div className=\"quick_search d-flex align-items-center\">\r\n                    <InputGroup id=\"inputSpinner\" className=\"p-0 spinner-gray spinner-sm\">\r\n                        {openSearch && <Form.Control size='sm' style={{ minHeight: '32px' }} className='' id=\"assets_search_input\" placeholder=\"What are you looking for?\" value={searchPost} onChange={(e) => this.onSearchText(e.target.value)} autoComplete='off' />}\r\n                        <Button className='' size='sm' id=\"inputCloseButton\" variant=\"primary\" onClick={this.onClickToSearchPost(searchPost)}>\r\n                            <FontAwesomeIcon icon=\"magnifying-glass\" />\r\n                        </Button>\r\n                    </InputGroup>\r\n                    {(tagSearchList && tagSearchList.length > 0) ? <Dropdown.Menu className=\"w-100 dropdwon-height top-100\" style={{ overflowY: 'auto' }}>\r\n                        {\r\n                            tagSearchList.map((item) => <Dropdown.Item key={item} onClick={this.onClickToSearchTags(item)}>{item}</Dropdown.Item>)\r\n                        }\r\n                    </Dropdown.Menu> : null}\r\n                </div>\r\n            </Dropdown>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default QuickSearch;","import React, { useState } from \"react\";\r\nimport moment from 'moment'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\n\r\nconst DateRange = (props) => {\r\n    const { children, maxDate, handleOnApply, startDate, endDate } = props\r\n    return <DateRangePicker onApply={handleOnApply} startDate={startDate} endDate={endDate} initialSettings={{\r\n        locale: { format: 'DD-MM-YYYY', separator: '-' },\r\n        maxDate: maxDate,\r\n        showDropdowns: false,\r\n        startDate: startDate, endDate: endDate,\r\n        ranges: {\r\n            Today: [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\")],\r\n            Yesterday: [\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'days').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 7 Days': [\r\n                moment().subtract(6, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last 30 Days': [\r\n                moment().subtract(29, 'days').format(\"DD-MM-YYYY\"),\r\n                moment().format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'This Month': [\r\n                moment().startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n            'Last Month': [\r\n                moment().subtract(1, 'month').startOf('month').format(\"DD-MM-YYYY\"),\r\n                moment().subtract(1, 'month').endOf('month').format(\"DD-MM-YYYY\"),\r\n            ],\r\n        },\r\n    }}\r\n    // onCallback={handleCallback}\r\n    >\r\n        {\r\n            children\r\n        }\r\n    </DateRangePicker>\r\n\r\n}\r\nexport default DateRange","import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment'\r\nimport DateRanges from './dateRange'\r\nclass DateRange extends Component {\r\n    state = {\r\n        startDate: moment().endOf('month').format(\"DD-MM-YYYY\"),\r\n        endDate: moment().format(\"DD-MM-YYYY\"),\r\n        maxDate: moment().endOf('month').format(\"DD-MM-YYYY\")\r\n    }\r\n    handleOnApply = (event, picker) => {\r\n        this.setState({ startDate: picker.startDate.format(\"YYYY-MM-DD\"), endDate: picker.endDate.format(\"YYYY-MM-DD\") })\r\n        this.props.onDateRangeFilter(picker.startDate.format(\"YYYY-MM-DD\"), picker.endDate.format(\"YYYY-MM-DD\"))\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { moderation } = nextProps\r\n        if (moderation && Object.keys(moderation.filter).length > 0 && moderation.filter.startDate != \"\") {\r\n            this.setState({ startDate: moment(moderation.filter.startDate).format(\"DD-MM-YYYY\"), endDate: moment(moderation.filter.endDate).format(\"DD-MM-YYYY\") })\r\n        }\r\n        if (moderation.filterBody && moderation.filterBody.dateRanges && Object.keys(moderation.filterBody.dateRanges).length == 0 && this.state.startDate != moment().subtract(30, 'days').format(\"DD-MM-YYYY\")) {\r\n            this.setState({ startDate: moment().subtract(30, 'days').format(\"DD-MM-YYYY\"), endDate: moment().format(\"DD-MM-YYYY\") })\r\n        }\r\n    }\r\n    render() {\r\n        const { children } = this.props;\r\n        const { startDate, endDate, maxDate } = this.state;\r\n        return <DateRanges children={children} startDate={startDate} endDate={endDate} maxDate={maxDate} handleOnApply={this.handleOnApply} key={uuidv4()} />\r\n    }\r\n}\r\n\r\nexport default DateRange\r\n","import React from 'react'\r\nimport QuickSearch from './QuickSearch'\r\nimport DateRange from './dateRange'\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { Link } from 'react-router-dom';\r\nimport withRouter from '../../../../../routes/WithRouter';\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\r\n\r\nconst Filters = (props) => {\r\n\r\n    return <div className=\"d-flex flex-wrap\">\r\n        <button onClick={() => checkPermission('networkManager', 'manageFeed') ? props.navigate(`/content/managefeed/${localStorage.getItem('wallId')}`) : {}} className=\"btn btn-outline-primary text-nowrap btn-sm me-2\">\r\n        <FontAwesomeIcon icon={'list-check'} iconClass={'d-inline d-lg-none me-0 me-sm-1'} />\r\n        <span className='d-none d-lg-inline'>Manage Feeds </span>\r\n        </button>\r\n        <QuickSearch {...props} />\r\n        <DateRange {...props}>\r\n            <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"calander_\">\r\n                <FontAwesomeIcon icon={'calendar-range'} />\r\n            </Button>\r\n        </DateRange>\r\n        <Button variant=\"icon\" size='sm' className=\"btn-active-primary ms-2\" id=\"filter_aside\">\r\n            <FontAwesomeIcon icon={'filter'} />\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withRouter(Filters);","import React from 'react'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ModerationPagination = ({ moderation, onNextNavigateClick, onPrevNavigateClick , onChangePage}) => {\r\n    const { paginateData } = moderation;\r\n    if (!paginateData || !Object.keys(paginateData).length) return null;\r\n    \r\n    return <ul className=\"pagination pagination-sm my-1 ms-3\">\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == 1 ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == 1 ? null : onPrevNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-left'} />\r\n                </span>\r\n            </li>\r\n            {\r\n            (paginateData.pages && paginateData.pages.length > 0) ? paginateData.pages.map((item, pagesIndex) => {\r\n\r\n                return (parseInt(pagesIndex) < 1) ?\r\n                    <li key={`lIi${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li> :\r\n\r\n                    (((paginateData.currentPage <= 3) && (parseInt(pagesIndex) === 2 || parseInt(pagesIndex) === 1)) || (paginateData.currentPage >= parseInt(paginateData.pages.length) - 2 && (parseInt(pagesIndex) >= parseInt(paginateData.pages.length) - 3))) ?\r\n                    <>\r\n                        {pagesIndex === parseInt(paginateData.pages.length) - 3 && parseInt(paginateData.pages.length) > 4 ?\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>:\r\n                            null\r\n                        }\r\n                        <li key={`li${pagesIndex}`} className={`page-item${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                            <span className=\"page-link\">{item}</span>\r\n                        </li>\r\n                    </>\r\n                    :\r\n                    (parseInt(paginateData.pages.length) - 3 == pagesIndex) ?\r\n                    (paginateData.currentPage > 3 && paginateData.currentPage < paginateData.pages.length - 2) ?\r\n                        <>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className={`page-item active`} onClick={onChangePage(item)}>\r\n                                <span className=\"page-link\">{paginateData.currentPage}</span>\r\n                            </li>\r\n                            <li key={`li${pagesIndex}`} className=\"page-item disabled\">\r\n                                <span className=\"page-link\">...</span>\r\n                            </li>\r\n                        </>\r\n                        :\r\n                        <li key={`li${pagesIndex}`} className=\"page-item disabled\"> <span className=\"page-link\">...</span> </li>\r\n\r\n                    : (parseInt(paginateData.pages.length) - 1 == pagesIndex) ?\r\n                    <li key={`li${pagesIndex}`} className={`page-item ${paginateData.currentPage == item ? \" active\" : ' cursor-pointer'}`} onClick={onChangePage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li>\r\n                    : null\r\n            }) : null}\r\n            <li className=\"page-item\">\r\n                <span className={`page-link ${paginateData.currentPage == paginateData.totalPages ? ' disabled' : ' cursor-pointer'}`} onClick={paginateData.currentPage == paginateData.totalPages ? null : onNextNavigateClick}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'angle-right'} />\r\n                </span>\r\n            </li>\r\n        </ul>\r\n}\r\nexport default ModerationPagination;\r\n","import { Modal, Image, Button } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nconst ErrorModal = ({ show, onHide }) => {\r\n  return <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-3\" src={baseUrl('media/images/error/ugc-request.png')} height={206} width={500} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n              To send UGC Rights request in bulk, make sure you choose posts from a single user.\r\n            </p>\r\n            <Button className=\"btn-min-w\" size=\"lg\" onClick={onHide}>OK</Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { Image, Modal } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PermissionError = ({show, onHide}) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} centered onHide={onHide}>\r\n        <Modal.Body className=\"text-center p-7\">\r\n            <Image className=\"my-7\" src={baseUrl('media/images/error/warning.svg')} height={70} width={70} fluid/>\r\n            <p className=\"text-center my-5 fs-6 mx-auto fw-bold text-muted\" style={{maxWidth:400}}>\r\n            You do not have access to UGC Rights as per your current plan. Please upgrade your plan to unlock this feature.\r\n            </p>\r\n            <Link className=\"btn-min-w mb-5 btn btn-lg btn-primary\" size=\"lg\" to={'/price'}>Upgrade Now</Link>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PermissionError;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport { GET_UGC_POST_DETAIL, ugcModal } from '../../../../../../actions/moderationActions'\r\nimport { Container, Tooltip, OverlayTrigger, Badge, Button, Form } from 'react-bootstrap'\r\nimport ModerationPagination from '../../Elements/Pagination'\r\nimport ErrorModal from '../../UgcRights/Elements/ErrorModal'\r\nimport PermissionError from '../../UgcRights/Elements/PermissionError'\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper'\r\nimport { checkPermission } from '../../../../../../actions/collaboratorActions'\r\n\r\n\r\nconst ModSubHeader = (props) => {\r\n    const [addStatus, setAddTag] = useState(false)\r\n    const categories = [{ label: \"50\", value: 50 }, { label: \"100\", value: 100 }, { label: \"200\", value: 200 }]\r\n    const [selectedEntry, selectedEntryFun] = useState([{ label: \"50\", value: 50 }])\r\n    const [permissionError, setPermissionError] = useState(false)\r\n    const [ugcError, setUgcError] = useState(false)\r\n    const [showGetRight, setShowGetRight] = useState(false)\r\n    const [fromSnapup, setFromSnapup] = useState(false)\r\n    const { moderation, activeTab } = props\r\n    const dispatch = useDispatch()\r\n    const updateLimit = event => { \r\n        props.limitUpdate(parseInt(event.value))\r\n        selectedEntryFun(event) \r\n    }\r\n    const refreshPost = () => { props.clickToRefresh(); } \r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            checkGetRight()\r\n        };\r\n    }, [moderation])\r\n\r\n\r\n    const getRights = () => {\r\n        const { check_uncheck_all } = moderation\r\n        let userId = null\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) {\r\n                setPermissionError(true)\r\n                flag = true\r\n            }\r\n            if (post.networkId == 29) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n            if (post.type == 1) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) {\r\n                setPermissionError(true)\r\n                setFromSnapup(true)\r\n                flag = true\r\n            }\r\n\r\n            if (userId == null) userId = post.username\r\n            else if (userId != null && userId != post.username && !flag) {\r\n                setUgcError(true)\r\n                flag = true\r\n            }\r\n        })\r\n        if (!flag) {\r\n            const id = check_uncheck_all.data.map(item => item.id)\r\n            dispatch(GET_UGC_POST_DETAIL({ is_carausel: 0, postId: id, id, }))\r\n            dispatch(ugcModal(true))\r\n        }\r\n    }\r\n\r\n    const checkGetRight = () => {\r\n        const { check_uncheck_all } = moderation\r\n        var flag = false\r\n        check_uncheck_all.data.map(post => {\r\n            if (post.ugcstatus == 1 && !flag) flag = true\r\n            if (post.networkId == 29) flag = true\r\n            if (post.type == 1) flag = true\r\n            if (!((post.networkId == 3 && post.feedFilter == 62) || (post.networkId == 18 && (post.feedFilter == 24 || post.feedFilter == 25 || post.feedFilter == 26)))) flag = true\r\n        })\r\n        setShowGetRight(!flag)\r\n    }\r\n\r\n    return <Container fluid>\r\n            <div className=\"f-between py-1 mod_header\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Form.Check type=\"checkbox\" id=\"select_all_\" className='btn btn-secondary btn-sm px-2 me-2 text-nowrap my-1' label={`${moderation.check_uncheck_all.data.length ? moderation.check_uncheck_all.data.length +` Selected` : `Select All`}`} onChange={props.clickToCheckAll(moderation.check_uncheck_all.status)} checked={moderation.check_uncheck_all.status}/>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh</Tooltip>}>\r\n                        <Button variant='icon' size='sm' className=\"btn-active-primary\" onClick={() => refreshPost()}>\r\n                            <span className='d-inline-block'><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    {moderation.check_uncheck_all && moderation.check_uncheck_all.data.length > 0 ? \r\n                    <div className=\"d-flex align-items-center mx-lg-2 mod_actions flex-wrap\">\r\n                        {activeTab == 0 || activeTab == 2 ? <Button variant='success' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(1)}>\r\n                            <FontAwesomeIcon icon={'check'} iconClass='me-1'/>\r\n                            Public\r\n                        </Button>: null}\r\n                        {activeTab == 0 || activeTab == 1 ? <Button variant='danger' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterUpdateStatus(2)}>\r\n                            <FontAwesomeIcon icon={'xmark'} iconClass='me-1'/>\r\n                            Private\r\n                        </Button>: null}\r\n                        <Button variant='warning' size=\"sm\" className=\"me-2 my-1\" onClick={props.onClickToFilterDeleteAll}>\r\n                            <FontAwesomeIcon icon={'trash-can'} iconClass='me-1'/>\r\n                            Delete\r\n                        </Button>\r\n                        {/* {!(UserRuleManualTag || UserRuleEnableAI) ? <Button variant='primary' size=\"sm\" className=\"me-2\" onClick={() => addTag()}>\r\n                            <FontAwesomeIcon type=\"solid\" icon={'tag'} iconClass='me-1'/>\r\n                            Add Tag\r\n                        </Button>:null} */}\r\n                        {showGetRight ? <Button variant='dark' size=\"sm\" className=\"me-2 my-1\" onClick={() => checkPermission('contentGallery', 'editGallery', true) ? getRights() : {}}>\r\n                            <FontAwesomeIcon icon={'user-check'} iconClass='me-1'/>\r\n                            Get Rights\r\n                        </Button>:null}\r\n                    </div>\r\n                    \r\n                    :null}\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Select className={`selectpicker selectpicker-sm d-none d-lg-flex`} classNamePrefix=\"selectpicker\" isSearchable={false} options={categories} value={selectedEntry} onChange={e => updateLimit(e)} /> \r\n                    <ModerationPagination {...props} />\r\n                </div>\r\n            </div>\r\n        <PermissionError show={permissionError} fromSnapup={fromSnapup} onHide={() => setPermissionError(false)} />\r\n        <ErrorModal show={ugcError} onHide={() => setUgcError(false)} />\r\n    </Container>\r\n\r\n}\r\nexport default ModSubHeader;","import { Nav, Badge, Container, Dropdown, NavDropdown } from 'react-bootstrap'\r\nimport Filters from './Elements'\r\nimport ModSubHeader from './Elements/ModSubHeader'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ModHeader = (props) => {\r\n    const isLoaded = props.moderation.details && Object.keys(props.moderation.details).length > 0 ? true : false\r\n    var {activeTab, totalpost, publicpost, privatepost , tabName, TabTotal } = 0\r\n    var upcomingpost = []\r\n    if(isLoaded){\r\n        activeTab = props.activeTab\r\n        totalpost = props.moderation.details.totalpost\r\n        publicpost = props.moderation.details.publicpost\r\n        privatepost = props.moderation.details.privatepost\r\n        upcomingpost = props.moderation.details.upcomingpost\r\n        tabName = activeTab == 0 ? \"All Posts\" : activeTab == 1 ? \"Public\" : activeTab == 2 ? \"Private\" : \"Upcoming\" \r\n        TabTotal = activeTab == 0 ? totalpost : activeTab == 1 ? publicpost : activeTab == 2 ? privatepost : upcomingpost \r\n    }\r\n\r\n    return <div className=\"dualheader subheader\">\r\n                <Container className=\"f-between flex-wrap border-bottom\" fluid>\r\n                    <div className=\"d-flex align-items-center flex-wrap h-48px\">\r\n                        <Nav variant=\"underline\" className='d-none d-lg-flex'>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==0 ? 'active' :''} eventKey=\"allPost\" onClick={isLoaded ? props.clickToTab(0) : null} disabled={!isLoaded}>\r\n                                    All Posts\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 0 ? \"badge-primary\":\"badge-light-primary\"}`}>{totalpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==1 ? 'active' :''} eventKey=\"public\" onClick={isLoaded ? props.clickToTab(1) : null} disabled={!isLoaded}>\r\n                                    Public\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 1 ? \"badge-primary\":\"badge-light-primary\"}`}>{publicpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==2 ? 'active' :''} eventKey=\"private\" onClick={isLoaded ? props.clickToTab(2) : null} disabled={!isLoaded}>\r\n                                    Private\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 2 ? \"badge-primary\":\"badge-light-primary\"}`}>{privatepost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            {upcomingpost && upcomingpost > 0 ? <Nav.Item>\r\n                                <Nav.Link style={{padding:'13px 0px'}} className={props.activeTab ==3 ? 'active' :''} eventKey=\"upcomming\">\r\n                                    Upcoming\r\n                                    <Badge bg=\"\" className={`m-0 py-1 ms-2 ${activeTab == 3 ? \"badge-primary\":\"badge-light-primary\"}`}>{upcomingpost}</Badge> \r\n                                </Nav.Link>\r\n                            </Nav.Item>:null}\r\n                        </Nav>\r\n                        <Dropdown className='d-flex d-lg-none'>\r\n                            <Dropdown.Toggle variant=\"secondary\" size='sm' id=\"mod-tab\">\r\n                            {tabName} <Badge bg=\"\" className={\"m-0 py-1 badge-light-primary mx-1\"}>{TabTotal}</Badge>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <NavDropdown.Item eventKey=\"1\" onClick={isLoaded ? props.clickToTab(0) : null} >All Posts <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{totalpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"2\" onClick={isLoaded ? props.clickToTab(1) : null} >Public <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{publicpost}</Badge> </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"3\" onClick={isLoaded ? props.clickToTab(2) : null}>Private <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{privatepost}</Badge> </NavDropdown.Item>\r\n                                {upcomingpost && upcomingpost > 0 ? <NavDropdown.Item eventKey=\"4\" onClick={isLoaded ? props.clickToTab(3) : null} >Upcoming <Badge className='ms-2 rounded-3' bg={\"light-primary\"}>{upcomingpost}</Badge> </NavDropdown.Item>:null}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center flex-wrap flex-grow-1 justify-content-end\">\r\n                        <Filters {...props} />\r\n                    </div>\r\n                </Container>\r\n                <ModSubHeader {...props} />\r\n            </div>\r\n}\r\nexport default ModHeader;\r\n\r\n","import React, { Component } from 'react'\r\nimport { autoCompleteSearch } from '../../../../../actions/moderationActions'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { InputGroup, Form, Button, Dropdown, Badge } from 'react-bootstrap';\r\n\r\nclass PostTagSearch extends Component {\r\n    state = { searchData: [], searchPost: \"\", selected: [], loading: false, textSearch: \"\" }\r\n\r\n    onSearchText = (textInput) => {\r\n        this.setState({ loading: true, textSearch: textInput })\r\n        if (textInput?.length > 0) {\r\n            autoCompleteSearch(textInput).then((response) => {\r\n                const { responseData , responseCode } = response.data;\r\n                this.setState({ searchData: responseCode === 200 ? responseData?.totalTag :[], loading: false })\r\n            }); \r\n\r\n        } else {\r\n            this.setState({ searchData: [], loading: false, searchPost: '', textSearch: '' });\r\n        }\r\n    };\r\n\r\n    onClickToSearch = (selectSearch, status) => event => {\r\n        if (!status) {\r\n            const { selected } = this.state;\r\n            this.state.selected.push(selectSearch)\r\n            this.setState({ searchPost: selectSearch, selected: selected , textSearch:'', searchData: [] }, () => { this.props.updateFilterPostTags(this.state.searchPost) })\r\n        }\r\n        else {\r\n            this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n            this.props.removeFilterPostTags(selectSearch)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { filterBody } = nextProps\r\n        if (filterBody.postTags.length == 0 && this.state.searchData.length > 0) this.setState({ searchData: [], searchPost: \"\", textSearch: \"\" })\r\n    }\r\n\r\n    render() {\r\n        const { searchData, loading, textSearch } = this.state;\r\n        const { postTags } = this.props; \r\n        return <div className=\"form-group tag_search mb-5 mt-3 position-relative\">\r\n                <InputGroup id=\"searchTagElements\" className={`spinner-secondary spinner-right position-relarive w-100 mb-3`}>\r\n                    <Form.Control placeholder=\"Search\" className={loading ? `spinner` : `spinner`} value={textSearch} onChange={(e)=>this.onSearchText(e.target.value)} autocomplete=\"off\"/>\r\n                    <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={'magnifying-glass'}/>\r\n                    </InputGroup.Text>\r\n                </InputGroup>\r\n                {(searchData && (searchData.length > 0 || textSearch.length > 0)) &&\r\n                <Dropdown.Menu show={true} className=\"w-100 dropdwon-height\" style={{ overflowY: 'auto' }}>\r\n                    {searchData.map((sItem, index) => {\r\n                        const isChecked = postTags.includes(sItem) || false\r\n                        return <Dropdown.Item key={index} onClick={this.onClickToSearch(sItem, isChecked)}>{sItem}</Dropdown.Item>\r\n                    })}\r\n                </Dropdown.Menu>}\r\n                <div className=\"mb-3 mb-xl-4\">\r\n                    <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                    {postTags && postTags.map((item, index) => {\r\n                        return parseInt(index) < 9 ? <Badge key={index} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                    <span className=' text-ellipsis d-block'>{item}</span>\r\n                                    <Button variant='link' size='sm' className=\"p-0 ms-1 text-gray-800\" onClick={this.onClickToSearch(item, true)}>\r\n                                        <FontAwesomeIcon icon={'xmark'} iconClass={'me-0'}/>\r\n                                    </Button>\r\n                            </Badge>\r\n                    :null})}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default PostTagSearch;","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\n// import { generateSocialName } from '../../Feeds/utils'\r\nimport { GET_NETWORK_ICON } from '../../../../../utils';\r\nimport PostTagSearch from './postTagSearch'\r\nimport { updateFilterPostTags, updateFilterSocialFeeds, updateFilterPostType, updateFilterOthers, removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeAllFilterBody } from '../../../../../actions/moderationActions'\r\nimport { Accordion, Offcanvas, Button, Image, Form } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst PostTypeCheck = ({ value, onClickPostType, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.postType.length > 0 ? moderation.filterBody.postType.filter((fin) => fin == value) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickPostType(value, isChecked)} checked={isChecked} />\r\n}\r\n\r\nconst OtherInput = ({ value, onClickOther, moderation, label, id }) => {\r\n    const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.other.length > 0 ? moderation.filterBody.other.filter((fin) => fin.key == id) : []\r\n    const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n    return <Form.Check type=\"checkbox\" className='mb-4' value=\"1\" label={label} id={id} onChange={onClickOther(id, value, isChecked)} checked={isChecked}  />\r\n}\r\n\r\n\r\nclass FilterBody extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { socialFeeds: [], postType: [], other: [], feeds: [], isActiveAside: false }\r\n        this.toogleFilter = this.toogleFilter.bind(this);\r\n    }\r\n   \r\n\r\n    toogleFilter = () => {\r\n        this.setState({ isActiveAside: !this.state.isActiveAside, })\r\n        setTimeout(() => {\r\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\r\n            if (offcanvas) {\r\n                offcanvas.classList.add('filter-backdrop');\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    onSelectFeeds = (key, value, status) => event => {\r\n        if (!status) this.props.updateFilterSocialFeeds({ key, value })\r\n        else this.props.removeFilterSocialFeeds({ key, value })\r\n    }\r\n    onClickPostType = (value, status) => event => {\r\n        if (!status) this.props.updateFilterPostType(value)\r\n        else this.props.removeFilterPostType(value)\r\n    }\r\n    onClickOther = (key, value, status) => event => {\r\n        if (!status) this.props.updateFilterOthers({ key, value })\r\n        else this.props.removeFilterOthers({ key, value })\r\n    }\r\n    componentDidMount() {\r\n        this.addEventListeners(); \r\n\r\n        if (window.feedId && window.feedId != \"\") {\r\n            const { feeds } = this.props \r\n            feeds && feeds.map((item, index) => { if (window.feedId == item.id) { this.props.updateFilterSocialFeeds({ key: item.name, value: window.feedId }) } })\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() { this.addEventListeners(); }\r\n\r\n    addEventListeners() {\r\n        const filterAside = document.getElementById(\"filter_aside\");\r\n        if (filterAside) {\r\n            filterAside.addEventListener(\"click\", this.toogleFilter);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { moderation, feeds} = this.props\r\n        const { isActiveAside } = this.state\r\n        const UserRuleEnableAI = false;\r\n        const UserRuleManualTag = true;\r\n        const postTags = moderation?.filterBody?.postTags;\r\n        \r\n\r\n        return <Offcanvas show={isActiveAside} placement={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\r\n            <Offcanvas.Body>\r\n                <div className=\"f-between px-4 py-3 border-bottom\">\r\n                    <span className=\"fs-6 fw-medium\">Add Filter</span>\r\n                    <Button variant='icon' size='sm' className='btn-active-primary' onClick={this.toogleFilter}>\r\n                        <FontAwesomeIcon icon={'xmark'}/>\r\n                    </Button>\r\n                </div>\r\n                {(UserRuleEnableAI || UserRuleManualTag) ?\r\n                    <Accordion className=\"border-bottom\" flush>\r\n                        <Accordion.Item defaultactivekey=\"0\">\r\n                            <Accordion.Header>\r\n                                <span className=\"text-uppercase fs-8 fw-medium\">Post Tags</span>\r\n                            </Accordion.Header>\r\n                            <Accordion.Body className=\"px-5 py-1\">\r\n                                {UserRuleEnableAI &&\r\n                                    <Image className='mb-3' src={baseUrl('media/svg/trusense.svg')} height={23} width={120} fluid/>\r\n                                }\r\n                                <div id=\"tag_post_btn\" className=\"collapse show\" data-parent=\"#tagspost\">\r\n                                    <PostTagSearch postTags={postTags} {...this.props} />\r\n                                </div>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                    : null}\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Social Feeds</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <div id=\"social_feed_btn\" className=\"collapse show\" data-parent=\"#post_type_drop\">\r\n                                <div className=\"checkbox-list\">\r\n                                    {\r\n                                        feeds && feeds.map((item, index) => {\r\n                                            const selecteds = Object.keys(moderation.filterBody).length > 0 && moderation.filterBody.socialFeed.length > 0 ? moderation.filterBody.socialFeed.filter((fin) => fin.value == item.id) : []\r\n                                            const isChecked = selecteds && selecteds.length > 0 ? true : false\r\n                                            return item.status ? <Form.Label key={index} className='d-flex align-items-start mb-4' htmlFor={`moderationfeed${item.id}`}>\r\n                                                    <Form.Check type=\"checkbox\" id={`moderationfeed${item.id}`} value={item.id} data-filter={item.filterId} onChange={this.onSelectFeeds(item.name, item.id, isChecked)} checked={isChecked} style={{marginTop:2}}/>\r\n                                                    <Image className='mx-2' src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} fluid/>\r\n                                                    <span className='fil_network'>{parse(item.name)}</span>\r\n                                                </Form.Label> :''\r\n                                        })\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Post Type</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <PostTypeCheck value=\"1\" onClickPostType={this.onClickPostType} {...this.props} label={`Text Only`} id={`text_only`}/>\r\n                            <PostTypeCheck value=\"2,4\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Image`} id={`image_only`}/>\r\n                            <PostTypeCheck value=\"3,5\" onClickPostType={this.onClickPostType} moderation={moderation} label={`With Video`} id={`video_only`}/>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion className=\"border-bottom\" flush>\r\n                    <Accordion.Item defaultactivekey=\"0\">\r\n                        <Accordion.Header>\r\n                            <span className=\"text-uppercase fs-8 fw-medium\">Other</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"px-5 py-1\">\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Pinned to top`} id={`pinFilter`}/>\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Recent`} id={`recentFilter`} />\r\n                            <OtherInput value=\"1\" onClickOther={this.onClickOther} moderation={moderation} label={`Retweets`} id={`retweetsFilter`} />\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                <div className=\"d-flex flex-column mx-5 py-4\">\r\n                    <Button variant='link' onClick={this.props.removeAllFilterBody} className=\"\">Reset Results</Button>\r\n                </div>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         moderation: state.moderation ,\r\n         feeds: state.manageFeeds?.feeds\r\n        }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateFilterPostTags: (data) => dispatch(updateFilterPostTags(data)),\r\n        updateFilterSocialFeeds: (data) => dispatch(updateFilterSocialFeeds(data)),\r\n        updateFilterPostType: (data) => dispatch(updateFilterPostType(data)),\r\n        updateFilterOthers: (data) => dispatch(updateFilterOthers(data)),\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { Form, Button, Badge } from 'react-bootstrap';\r\nimport { removeFilterSocialFeeds, removeFilterPostType, removeFilterOthers, removeFilterPostTags, removeDateRanges, removeAllFilterBody } from '../../../../../actions/moderationActions'\r\nimport HtmlParser from 'react-html-parser';\r\nclass FilterTab extends Component {\r\n    onSelectFeeds = (data) => event => { this.props.removeFilterSocialFeeds(data) }\r\n    onClickPostType = (value) => event => { this.props.removeFilterPostType(value) }\r\n    onClickOther = (data) => event => { this.props.removeFilterOthers(data) }\r\n    onClickRemovePostTags = (value) => event => { this.props.removeFilterPostTags(value) }\r\n    onClickToDateRangeRemove = event => { this.props.removeDateRanges() }\r\n\r\n    render() {\r\n        const { filters, onClickReset, filterBody } = this.props\r\n        return (filterBody.socialFeed.length > 0 || filterBody.postType.length > 0 || filterBody.postTags.length > 0 || filterBody.other.length > 0 || Object.keys(filterBody.dateRanges).length > 0) ? <div className=\"d-flex align-items-start mb-2\">\r\n            <span className=\"text-muted fw-medium me-2 my-2 text-nowrap\">Filter By : </span>\r\n            <div className=\"d-flex flex-wrap align-items-center\">\r\n                {\r\n                    (Object.keys(filterBody.dateRanges).length > 0) ? <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                        {`${filterBody.dateRanges.startDate} - ${filterBody.dateRanges.endDate}`}\r\n                        <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickToDateRangeRemove}>\r\n                            <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </Button>\r\n                    </Badge> : null\r\n                }\r\n                {\r\n                    filterBody.postTags && filterBody.postTags.map((sItem) => {\r\n                        return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                            {sItem}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickRemovePostTags(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </Badge>\r\n                    })\r\n                }\r\n                {\r\n                    filterBody.socialFeed && filterBody.socialFeed.map((sItem) => {\r\n                        return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary text-icon\">\r\n                            {sItem.key == \"onsiteupload\" ? \"SnapUp\" : HtmlParser(sItem.key)}\r\n                            <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onSelectFeeds(sItem)}>\r\n                                <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                            </Button>\r\n                        </Badge>\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.postType && filterBody.postType.map((sItem) => {\r\n                        if (sItem == \"1\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Text Only\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem == \"2,4\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                With Image\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem == \"3,5\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                With Video\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickPostType(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    filterBody.other && filterBody.other.map((sItem) => {\r\n                        if (sItem.key == \"highlightFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Highlight Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"pinFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Pin Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"recentFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Recent Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                        else if (sItem.key == \"retweetsFilter\") {\r\n                            return <Badge bg='gray-200' className=\"rounded-pill badge-light-secondary\">\r\n                                Retweets Post\r\n                                <Button variant='icon' className='p-0 bg-gray-200 rounded-circle border-0 h-18px w-18px ms-2' onClick={this.onClickOther(sItem)}>\r\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                                </Button>\r\n                            </Badge>\r\n                        }\r\n                    })\r\n                }\r\n                <Button variant='dark' className='rounded-pill py-1 m-1' onClick={this.props.removeAllFilterBody}>Reset</Button>\r\n            </div>\r\n        </div> : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { moderation: state.moderation }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeFilterSocialFeeds: (data) => dispatch(removeFilterSocialFeeds(data)),\r\n        removeFilterPostType: (data) => dispatch(removeFilterPostType(data)),\r\n        removeFilterOthers: (data) => dispatch(removeFilterOthers(data)),\r\n        removeFilterPostTags: (data) => dispatch(removeFilterPostTags(data)),\r\n        removeDateRanges: () => dispatch(removeDateRanges()),\r\n        removeAllFilterBody: () => dispatch(removeAllFilterBody()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTab);","import React, { Component } from 'react'\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\r\nimport '@splidejs/splide/css';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n//import { Options } from '@splidejs/splide';\r\n\r\n\r\n\r\nexport default class CardPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mainRef = React.createRef();\r\n  }\r\n\r\n  handleThumbs = (id) => {\r\n    if (this.mainRef.current) {\r\n      this.mainRef.current.go(id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {ugcData} = this.props\r\n\r\n    const mainOptions = {\r\n      type      : 'loop',\r\n      perPage   : 1,\r\n      perMove   : 1,\r\n      gap       : '1rem',\r\n      pagination: false,\r\n      height    : '10rem',\r\n      navigation: false,\r\n      \r\n    };\r\n\r\n    if(ugcData.data && ugcData.data.length == 1) mainOptions.arrows= false\r\n    return <div className='mx-auto' style={{maxWidth:450}}>\r\n              <Splide hasTrack={ false } options={{ arrows: false }}>\r\n                <SplideTrack>\r\n                {ugcData.data && ugcData.data.length ? ugcData.data.map((item,index)=>{ \r\n                  return <SplideSlide key={index}>\r\n                      <div className={'d-flex flex-column w-100'}>\r\n                        <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={item.postFile} alt={\"\"} isCover={true} />\r\n                        <div className='p-3'>\r\n                          <div className=\"d-flex align-items-start mb-2\">\r\n                              <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                  <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                      imageSize={40}\r\n                                      symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                      name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                  <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                      <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.name}</strong></p>\r\n                                      <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.username}</p>\r\n                                  </div>\r\n                              </div>  \r\n                              <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                  <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                      <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} />\r\n                                  </OverlayTrigger>\r\n                              </span>\r\n                          </div>\r\n                          <ShowMoreContent classes={'mb-3'} content={item.content} idIndex={item.id} line={4} />\r\n                        </div>\r\n                      </div>\r\n                  </SplideSlide>\r\n                    }):null}\r\n                </SplideTrack>\r\n                {ugcData.data && ugcData.data.length > 1 ? <div className=\"splide__arrows\">\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--prev start-0\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                    </Button>\r\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--next end-0\">\r\n                      <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\r\n                  </Button>\r\n                </div> : null}\r\n              </Splide>\r\n            </div>\r\n\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HOST_URL } from '../../../../../../actions/api'\r\nimport { TOAST_ERROR } from '../../../../../../utils'\r\nimport { tinyRequest } from '../../../../../../actions/tinyUrlAction';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { logRoles } from '@testing-library/react';\r\n\r\nexport default class copyUrl extends Component {\r\n\r\n    state = { openSteps: false, copied: false, hash: 'yes', accountDetails: {}, postUrl: '' }\r\n    componentDidMount() {\r\n        this.copyText();\r\n    }\r\n\r\n    sendRequest = () => {\r\n        const { onRaiseRequest, setUserName } = this.props\r\n        // setUserName(this.state.accountDetails.username)\r\n        onRaiseRequest(this.state.hash)\r\n    }\r\n\r\n    copyText = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n        const postLink = ugcData?.data && ugcData?.data[0] ? ugcData?.data[0].link : ''\r\n        tinyRequest(postLink).then((response) => {\r\n            const { data } = response.data\r\n            this.setState({ postUrl: data?.tiny_url })\r\n        }).catch((ex) => {\r\n            this.setState({ postUrl: postLink })\r\n        })\r\n\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' ' + ugcData.bitlyurl)\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg}. Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n    }\r\n\r\n    raiseReq = () => {\r\n        const { ugcData, custom_msg, requestMode } = this.props\r\n\r\n        if (this.state.hash == '' || !this.state.hash) { TOAST_ERROR('Hashtag for UGC Rights is required!'); return; }\r\n        this.sendRequest()\r\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' Post : ' + this.state.postUrl + ' . Form Link : ' + ugcData.bitlyurl);\r\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\r\n        else navigator.clipboard.writeText(`${custom_msg} Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\r\n        if ((ugcData.data[0].networkId == 18 || ugcData.data[0].networkId == 2) && requestMode == 0) setTimeout(() => window.open(`https://ig.me/m/${ugcData.data[0].username}`, '_blank'), 400)\r\n        else setTimeout(() => window.open(ugcData.data[0].link, '_blank'), 400)\r\n        setTimeout(() => {\r\n            window.location.replace(`${HOST_URL}content/moderation/${localStorage.getItem('wallId')}`)\r\n        }, 400);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { ugcData, custom_msg, setStep, requestMode, isRequesting } = this.props\r\n        const { openSteps, copied, hash } = this.state;\r\n        return <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n           \r\n            <h3 className='mb-3'>Your UGC Request is Ready</h3>\r\n\r\n            <div className=\"form-group ugc_right_col\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={requestMode == 0 ? custom_msg : localStorage.getItem('ownerId') == '142546' ? `${custom_msg}` : `${custom_msg} Just reply with #${hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!` || \"\"} disabled />\r\n                </Form.Group>\r\n            </div>\r\n\r\n            {requestMode == 1 ? <>\r\n\r\n                <div className=\"form-group ugc_right_col\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"ugc_rights_hash_value\">Enter Hashtag for UGC Rights <span className=\"text-danger\">*</span> </Form.Label>\r\n                        <Form.Control as={'textarea'} id=\"ugc_rights_hash_value\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={hash} onChange={e => this.setState({ hash: e.target.value })} >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n            </> : null}\r\n            {requestMode == 0 ? <>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text className=\"cursor-pointer\">\r\n                        <FontAwesomeIcon type={'solid'} icon={'link'}/>\r\n                    </InputGroup.Text>\r\n                    <Form.Control className=\"p-2\"  size='lg' value={ugcData.bitlyurl ? String(ugcData.bitlyurl):'---'} />\r\n                </InputGroup>\r\n                <Button variant='primary' className='w-100 mb-4' onClick={() => this.setState({ copied: true }, () => this.copyText())}>\r\n                    {!copied ? \"Copy Url\" : \"Url Copied\"}\r\n                </Button>\r\n            </> : null}\r\n\r\n                   \r\n            <h5> Steps to proceed </h5>\r\n            <ul className={`list-unstyled list-points fs-8`}>\r\n                <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n            </ul>\r\n                    \r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(2)}>Back</Button>\r\n            <Button className={isRequesting ? 'spinner' : ''} onClick={() => this.raiseReq()}>Raise Request</Button>\r\n        </div>\r\n        \r\n        </>\r\n    }\r\n}\r\n\r\n","import axios from \"axios\"; \r\nimport { TINY_URL } from \"./api\";\r\nconst apiToken = `YhhvoiyS1HLShf3CsiZAUsUZK2qTY1JGrJ045Z12sipRKGeEbM1FVHnQVd4f`\r\nexport const tinyRequest = (url) => {\r\n    var data = JSON.stringify({\r\n        \"url\": url\r\n    });\r\n    var config = {\r\n        method: 'post',\r\n        url: `${TINY_URL}?api_token=${apiToken}`,\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: data\r\n    };\r\n    return axios(config)\r\n}","import { Component } from \"react\";\r\nimport { Modal, Button, InputGroup, Form, Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { DashboardModal, Dashboard } from \"@uppy/react\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport $ from \"jquery\";\r\nimport { ADD_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\n\r\n\r\n\r\nclass CreateTemplate extends Component {\r\n  uppyUploader = new UppyUpload()\r\n  uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n  state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: this.props.editData.client_logo, selectedBrand: this.props.editData.client_logo_name, selectedBrandFile: this.props.editData.client_logo, tncFilename: this.props.editData.custom_terms, selectedtnc: this.props.editData.custom_terms_name, selectedtncFile: this.props.editData.custom_terms, selectedTemplate: null, acceptTnc: false, logoError: false, tncError: false, templateName: this.props.editData.name, custom_msg: this.props.editData.custom_message, tncerrorMsg: false, nameerrorMsg: false, msgerrorMsg: false, };\r\n\r\n  componentDidMount() {\r\n    this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedBrandFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          brandFilename: result.name,\r\n          selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          logoError: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n      this.setState(\r\n        {\r\n          selectedtncFile: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncFilename: result.name,\r\n          selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n          tncerrorMsg: false\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n          }, 300);\r\n        }\r\n      );\r\n    });\r\n\r\n    // this.props.ugcData\r\n  }\r\n\r\n\r\n  onClickToOpenBrand = () => {\r\n    this.setState({ brandModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploader.uppy.cancelAll();\r\n      this.setState({ brandModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseBrand = () => {\r\n    this.uppyUploader.uppy.cancelAll();\r\n    this.setState({ brandModalOpen: false });\r\n  };\r\n\r\n  onClickToOpenTnc = () => {\r\n    this.setState({ tncModalOpen: true });\r\n    $(\".uppy-Dashboard-close\").click(() => {\r\n      this.uppyUploaderPdf.uppy.cancelAll();\r\n      this.setState({ tncModalOpen: false });\r\n    });\r\n  };\r\n  onClickToCloseTnc = () => {\r\n    this.uppyUploaderPdf.uppy.cancelAll();\r\n    this.setState({ tncModalOpen: false });\r\n  };\r\n\r\n  removeBrandLogo = () => {\r\n    this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n  }\r\n  removeTnc = () => {\r\n    this.setState({\r\n      tncFilename: null,\r\n      selectedtnc: \"\",\r\n      selectedtncFile: null,\r\n    })\r\n  }\r\n\r\n  onSaveTemplate = () => {\r\n    const { createTemplate, selectedBrand, tncFilename, brandFilename, selectedtnc, selectedtncFile, selectedTemplate, templateName, selectedBrandFile, custom_msg } = this.state;\r\n\r\n    if (!custom_msg || !templateName || !tncFilename || !brandFilename) {\r\n      if (!custom_msg) this.setState({ msgerrorMsg: true })\r\n      if (!templateName) this.setState({ nameerrorMsg: true })\r\n      if (!tncFilename) this.setState({ tncerrorMsg: true })\r\n      if (!brandFilename) this.setState({ logoError: true })\r\n    }\r\n    else {\r\n      var obj = { owner: localStorage.getItem('ownerId'), name: templateName, custom_message: custom_msg, custom_terms: selectedtnc, custom_terms_name: tncFilename, client_logo: selectedBrand, client_logo_name: brandFilename }\r\n      if (this.props.edit) obj = { ...obj, id: this.props.editData.id }\r\n      this.props.ADD_UGC_TEMPLATE(obj, this.props.onAddNewTemplate)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { show, onHide, saveTemplate, edit } = this.props;\r\n    const { brandModalOpen, tncModalOpen, createTemplate, selectedBrand, tncFilename, logoError, selectedtncFile, selectedTemplate, acceptTnc, tncError, selectedBrandFile, templateName, custom_msg, brandFilename, tncerrorMsg, nameerrorMsg, msgerrorMsg } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal size=\"lg\" show={show} onHide={onHide} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{edit ? 'Edit' : `Create New`} Template</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_name\">Template Name <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control placeholder=\"enter your template name\" autoComplete=\"off\" id=\"t_name\" className={`${nameerrorMsg ? `is-invalid` : ``}`} value={templateName} onChange={(e) => this.setState({ templateName: e.target.value, nameerrorMsg: false })} maxLength=\"255\" />\r\n                    <span id=\"t_nameerror\" className=\"invalid-feedback\" >{nameerrorMsg ? \"Name is required\" : ''}</span>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Custom Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                    <Form.Control as={'textarea'} className={`${msgerrorMsg ? `is-invalid` : ``}`} id=\"t_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_msg} onChange={(e) => this.setState({ custom_msg: e.target.value, msgerrorMsg: false })} />\r\n                    <span id=\"t_msgerror\" className=\"invalid-feedback\" >{msgerrorMsg ? \"Custom message is required\" : ''}</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_logo\">Brand Logo <span className=\"text-danger\">*</span></Form.Label>\r\n                    {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer ${logoError ? `is-invalid border-danger` : ``}`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                      <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                    </div> :\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className=\"me-3 me-xxl-4\">\r\n                            <div className=\"symbol h-90px w-90px position-relative rounded-2 overflow-hidden\">\r\n                                <Image src={selectedBrandFile?.includes('https://cloud.tagshop.ai/') ? selectedBrandFile : `${WASABI_PATH}${UGC_UPLOAD_URL}/${selectedBrandFile}`} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center flex-wrap\">\r\n                            <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                    <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <span id=\"t_logoerror\" className=\"invalid-feedback\">Brand Logo is required</span>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"t_msg\">Terms and Conditions<span className=\"text-danger\">*</span></Form.Label>\r\n                    <InputGroup className={`${tncerrorMsg ? `is-invalid` : ``}`}>\r\n                      <div className=\"form-control form-control-lg\">\r\n                        {selectedtncFile ? \r\n                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                        <span className=\"text-ellipsis fs-8 p-1 rounded-1\">{tncFilename}</span> \r\n                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                          <FontAwesomeIcon type={'solid'} icon={'xmark'}/>\r\n                        </span>\r\n                      </div> : ''}\r\n                      </div>\r\n                      <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                    </InputGroup>\r\n                    <span id=\"tcError\" className=\"invalid-feedback\" >{tncerrorMsg ? \"Terms & Conditions is required\" : ''}</span>\r\n                  </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Button variant='secondary' className='ms-3 btn-min-w' onClick={onHide}>Cancel</Button>\r\n                <Button className='ms-3 btn-min-w' onClick={this.onSaveTemplate}>Save Template</Button>\r\n            </Modal.Footer>\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploader.uppy}\r\n            open={brandModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseBrand}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n          />\r\n          <DashboardModal\r\n            animateOpenClose={true}\r\n            proudlyDisplayPoweredByUppy={false}\r\n            inline={false}\r\n            showProgressDetails={true}\r\n            height={750}\r\n            browserBackButtonClose={true}\r\n            showRemoveButtonAfterComplete={false}\r\n            uppy={this.uppyUploaderPdf.uppy}\r\n            open={tncModalOpen}\r\n            onRequestCloseModal={this.onClickToCloseTnc}\r\n            closeAfterFinish={true}\r\n            doneButtonHandler={this.doneButtonHandler}\r\n            plugins={[\"Url\", \"Webcam\"]}\r\n          />\r\n\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // ugcData: state.moderation.ugcData,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    ADD_UGC_TEMPLATE: (data, callback) => dispatch(ADD_UGC_TEMPLATE(data, callback))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTemplate);\r\n","import { Component } from \"react\";\r\nimport { DashboardModal } from \"@uppy/react\";\r\nimport $ from \"jquery\";\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport CreateTemplate from \"./CreateTemplate\";\r\nimport { connect } from \"react-redux\";\r\nimport { DELETE_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\r\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\r\nimport UppyUpload from \"../../../../../../utils/uppyUpload\";\r\nimport { TEMP_URL } from \"../../../../../../actions/constants\";\r\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GeneralRequest extends Component {\r\n\r\n    state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: null, selectedBrand: \"\", selectedBrandFile: null, tncFilename: null, selectedtnc: \"\", selectedtncFile: null, selectedTemplate: this.props.selectedTemplate, tncError: this.props.tncError, custom_message: this.props.custom_msg, isEdit: false, editData: {} };\r\n\r\n    uppyUploader = new UppyUpload()\r\n    uppyUploaderPdf = new UppyUpload(['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'])\r\n    componentDidMount() {\r\n        const { ugcData, setBrand_link, setTermslink, setTermstype, brand_link } = this.props\r\n\r\n        this.uppyUploader.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            setBrand_link(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            this.setState(\r\n                {\r\n                    selectedBrandFile: `${result.id}.${result.ext}`,\r\n                    brandFilename: result.name,\r\n                    selectedBrand: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploader.uppy.cancelAll();\r\n                        this.setState({ brandModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n        });\r\n\r\n        this.uppyUploaderPdf.uppy.on(\"transloadit:result\", (stepName, result) => {\r\n            this.setState(\r\n                {\r\n                    selectedtncFile: `${result.id}.${result.ext}`,\r\n                    tncFilename: result.name,\r\n                    selectedtnc: `${TEMP_URL}${result.id}.${result.ext}`,\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.uppyUploaderPdf.uppy.cancelAll();\r\n                        this.setState({ tncModalOpen: false });\r\n                    }, 300);\r\n                }\r\n            );\r\n            setTermslink(`${TEMP_URL}${result.id}.${result.ext}`)\r\n            setTermstype(result.name)\r\n        });\r\n\r\n        this.onTemplateChange(this.props.selectedTemplate)\r\n        setTimeout(() => {\r\n            if (ugcData && ugcData.template && ugcData.template.length && !this.state.selectedTemplate) {\r\n                this.setState({ tncFilename: ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms, selectedtncFile: ugcData.template[0].custom_terms })\r\n            }\r\n            if (brand_link) this.setState({ selectedBrandFile: brand_link }, () => console.log('brand_link', brand_link, this.state.selectedBrandFile))\r\n        }, 500);\r\n\r\n    }\r\n\r\n    onClickToOpenBrand = () => {\r\n        this.setState({ brandModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploader.uppy.cancelAll();\r\n            this.setState({ brandModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseBrand = () => {\r\n        this.uppyUploader.uppy.cancelAll();\r\n        this.setState({ brandModalOpen: false });\r\n    };\r\n\r\n    onClickToOpenTnc = () => {\r\n        this.setState({ tncModalOpen: true });\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppyUploaderPdf.uppy.cancelAll();\r\n            this.setState({ tncModalOpen: false });\r\n        });\r\n    };\r\n    onClickToCloseTnc = () => {\r\n        this.uppyUploaderPdf.uppy.cancelAll();\r\n        this.setState({ tncModalOpen: false });\r\n    };\r\n\r\n    onCreateTemplate = () => {\r\n        this.setState({ createTemplate: true })\r\n    }\r\n\r\n    onAddNewTemplate = (id) => {\r\n\r\n        const tmp = this.getSelectedTemplate(id)\r\n        if (tmp) this.onTemplateChange(id)\r\n        // if(tmp) this.setState({selectedTemplate: id})\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n\r\n    onHideTemplate = () => {\r\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\r\n    }\r\n    getSelectedTemplate = (value) => {\r\n        const { ugcData } = this.props\r\n        const { selectedTemplate } = this.state\r\n        const id = value ? value : selectedTemplate\r\n        localStorage.setItem('selectedTemplate',id)\r\n        if (ugcData && ugcData.template && ugcData.template.length) {\r\n            if (!id) { return ugcData.template[0] }\r\n            const template = ugcData.template.filter(t => t.id == id)[0]\r\n            return template\r\n        }\r\n        else return null\r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { acceptTnc, requestMode , onUpdateTemplate} = this.props\r\n        onUpdateTemplate()\r\n        if (requestMode == 1) {\r\n            this.props.setStep(2)\r\n        }\r\n        else if (acceptTnc && requestMode == 0) {\r\n            this.props.setStep(2)\r\n        }\r\n        else this.setState({ tncError: true }, () => this.props.setTncError(true))\r\n    }\r\n    //     this.setState({tncFilename : ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms,\r\n    //  selectedtncFile:ugcData.template[0].custom_terms, custom_message: ugcData.template[0].custom_message }, () => this.props.setCustom_msg(this.state.custom_message))\r\n\r\n    onTemplateChange = (e) => {\r\n        const tmp = this.getSelectedTemplate(e)\r\n        if (tmp) {\r\n            this.setState({ selectedTemplate: e }, () => {\r\n                this.setState({\r\n                    custom_message: tmp.custom_message,\r\n                    tncFilename: tmp.custom_terms_name,\r\n                    selectedtnc: tmp.custom_terms,\r\n                    selectedtncFile: tmp.custom_terms,\r\n                    brandFilename: tmp.client_logo_name,\r\n                    selectedBrand: tmp.client_logo,\r\n                    selectedBrandFile: tmp.client_logo,\r\n\r\n                });\r\n                this.props.setCustom_msg(tmp?.custom_message);\r\n                this.props.setSelectedTemplate(e);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onTemplateRemove = (data) => {\r\n        this.props.deleteTemplate({ owner: data.owner, id: data.id }, () => this.onTemplateChange(1))\r\n    }\r\n\r\n    onTemplateEdit = (data) => {\r\n        this.onCreateTemplate()\r\n        this.setState({ isEdit: true, editData: data })\r\n    }\r\n\r\n    removeBrandLogo = () => {\r\n        this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\r\n    }\r\n    removeTnc = () => {\r\n        this.setState({\r\n            tncFilename: null,\r\n            selectedtnc: null,\r\n            selectedtncFile: null\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            brandModalOpen,\r\n            tncModalOpen,\r\n            createTemplate,\r\n            selectedBrand,\r\n            selectedBrandFile,\r\n            tncFilename,\r\n            selectedtncFile, selectedTemplate,\r\n            tncError,\r\n            custom_message,\r\n            isEdit,\r\n            editData,\r\n            brandFilename\r\n        } = this.state;\r\n\r\n        const { ugcData, setCustom_msg, setAcceptTnc, acceptTnc, hideUgc, setBrand_link, setTermslink, setTermstype, requestMode } = this.props\r\n        //   setBrand_link(selectedBrandFile)\r\n        //  setTermslink(ugcData.template[0].custom_terms) \r\n        // setTermstype(ugcData.template[0].custom_terms_name) \r\n\r\n        return (<>\r\n                {ugcData && ugcData.template && ugcData.template.length ?\r\n                <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n                        \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <div className=\"d-flex f-between mb-3\">\r\n                                <Form.Label className=\"mb-0\">Choose From Templates</Form.Label>\r\n                                <Button variant=\"link\" size=\"sm\" onClick={this.onCreateTemplate}>\r\n                                    <FontAwesomeIcon icon={'plus'}/>\r\n                                    Create Template\r\n                                </Button>\r\n                            </div>\r\n                            <Dropdown className=\"ugc-templates mb-3\" onSelect={(e) => this.onTemplateChange(e)}>\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"w-100 d-flex f-between\">\r\n                                    {this.getSelectedTemplate()?.name}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"w-100 dropdown-height\">\r\n                                    {ugcData.template && ugcData.template.map(t => (\r\n                                        <Dropdown.Item eventKey={t.id} className=\"f-between\" key={`drp_${t.id}`}>\r\n                                            <span className=\"text-ellipsis\">{t.name}</span> \r\n                                            {t.owner != 0 ?\r\n                                            <span className=\"dropdown-option\">\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateEdit(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'pen'}/>\r\n                                                </Button>\r\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateRemove(t)}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </span>\r\n                                            : null\r\n                                        } </Dropdown.Item>\r\n                                    ))}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>  \r\n                        <div className=\"form-group ugc_right_col\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"r_msg\">Message <span className=\"text-danger\">*</span> </Form.Label>\r\n                                <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_message} onChange={(e) => this.setState({ custom_message: e.target.value }, () => setCustom_msg(e.target.value))} >\r\n                                    {this.getSelectedTemplate()?.custom_message ? this.getSelectedTemplate()?.custom_message : `We loved your creative brilliance! Can we showcase your incredible work and give you the recognition you deserve? ✨📸🙌. \r\n                                Please approve our request so we can use your content in our marketing campaign.`}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                       \r\n                            <>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_logo\">Brand Logo</Form.Label>\r\n                                {!selectedBrandFile ? <div className={`p-6 border border-dashed rounded-2 cursor-pointer`} onClick={() => this.onClickToOpenBrand()} style={{maxWidth:300}}>\r\n                                    <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\r\n                                </div> :\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"me-3 me-xxl-4\">\r\n                                        <div className=\"symbol h-90px w-90px position-relative rounded-2 bg-light overflow-hidden\">\r\n                                            <Image src={this.getSelectedTemplate()?.client_logo ? (this.getSelectedTemplate()?.client_logo?.includes('https://cloud.tagshop.ai') || this.getSelectedTemplate()?.client_logo?.includes('https://cloud.taggbox.com')) ? this.getSelectedTemplate()?.client_logo : `${WASABI_PATH}${UGC_UPLOAD_URL}/${this.getSelectedTemplate()?.client_logo}` : selectedBrand} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                                        <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}>\r\n                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'}/>\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"t_msg\">Terms and Conditions</Form.Label>\r\n                                <InputGroup className=\"mb-1\">\r\n                                    <div className=\"form-control p-2\">\r\n                                        {selectedtncFile ? \r\n                                        <div className=\"overflow-hidden d-flex align-items-center\"> \r\n                                        <span className=\"text-ellipsis fs-8 bg-light p-1 rounded-1\">{tncFilename}</span> \r\n                                        <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\r\n                                        <FontAwesomeIcon icon={'xmark'}/>\r\n                                        </span>\r\n                                    </div> : ''}\r\n                                    </div>\r\n                                    <InputGroup.Text className=\"cursor-pointer\" onClick={() => this.onClickToOpenTnc()}>Attach File</InputGroup.Text>\r\n                                </InputGroup>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Link to={baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx')} target=\"_blank\" className=\"btn btn-link p-0 text-nowrap btn-sm\" download={true}>\r\n                                        Use our predefined content\r\n                                        <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-1 d-flex\">\r\n                                <Form.Check type=\"checkbox\" id=\"ugc-tc\" className=\"me-2 mt-1\" value={acceptTnc} onChange={(e) => setAcceptTnc(e.target.checked)} checked={acceptTnc ? true : false}/>\r\n                                <Form.Label htmlFor=\"ugc-tc\">Accept our <a href=\"https://tagshop.ai/terms-of-service/\" rel=\"noreferrer\" className=\"fw-bold text-primary\" target=\"_blank\">Terms & Conditions</a> Click on Generate Request to proceed to next step.</Form.Label>\r\n                                \r\n                            </Form.Group>\r\n                            {tncError && !acceptTnc ? <span id=\"term_error\" className=\"text-danger\">Please accept Terms and Conditions</span> : null}\r\n                            </> \r\n\r\n                </div> : null}\r\n                <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                    <Button variant=\"secondary\" className=\"me-2\" onClick={() => {this.props.setStep(4); this.setState({tncError:false})}}>Back</Button>\r\n                    <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                </div>\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploader.uppy}\r\n                    open={brandModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseBrand}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                />\r\n\r\n\r\n                <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppyUploaderPdf.uppy}\r\n                    open={tncModalOpen}\r\n                    onRequestCloseModal={this.onClickToCloseTnc}\r\n                    closeAfterFinish={true}\r\n                    doneButtonHandler={this.doneButtonHandler}\r\n                    plugins={[\"Url\", \"Webcam\"]}\r\n                />\r\n                {createTemplate ? <CreateTemplate show={true} edit={isEdit} editData={editData} onHide={this.onHideTemplate} onAddNewTemplate={this.onAddNewTemplate} /> : null}\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteTemplate: (data, callback) => dispatch(DELETE_UGC_TEMPLATE(data, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralRequest);\r\n","import React, { Component } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCookies, withCookies } from 'react-cookie';\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from '../../../../../../actions/sceneActions';\r\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\r\nimport { showAddAccounntAlert } from './utils';\r\nimport { useNavigate } from 'react-router';\r\nimport { addAccountFromId } from '../../../../../../utils/addAccount';\r\nimport { getTwitterAuth } from '../../../../../../utils/auth';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nconst SocialAccounts = (props) => {\r\n  const [cookies, setCookie] = useCookies([]);\r\n  const navigation = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const socialAccountsData = useSelector(state => state.userAccountData.socialAccounts)\r\n  return <SAccounts {...props} cookies={cookies} navigation={navigation} dispatch={dispatch} socialAccountsData={socialAccountsData} />\r\n}\r\nclass SAccounts extends Component {\r\n  state = { socialAccount: 0, authorName: null, authorAvatar: null, errorMsg: false, otherAc: false, accountDetails: {}, accountList: [], selectedPersonalAccount: null }\r\n\r\n  handleMessage = async (event) => {\r\n    try {\r\n      const response = JSON.parse(event.data);\r\n      const { code } = response;\r\n      const networkId = localStorage.getItem('networkId');\r\n      const type = localStorage.getItem('connectionType');\r\n      if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\r\n        if (type == 'moderation-ugc') {\r\n          if (code) {\r\n            if (networkId == 1) {\r\n              await getTwitterAuth(code, (response) => {\r\n                if (response && Object.keys(response).length > 0) this.filterAccountData(networkId, response);\r\n              })\r\n            } else {\r\n              await addAccountFromId(networkId, code, () => this.props.dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(null, () => this.filterAccountData(networkId, null))));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.filterAccountData(2, null);\r\n    document.cookie = \"callBackUrl=React\";\r\n    window.addEventListener(\"message\", this.handleMessage);\r\n    channel.addEventListener(\"message\", this.handleMessage);\r\n    if (window.Application) window.Application.reInit()\r\n    if (this.props.networkId == parseInt(JSON.parse(localStorage.getItem('instagram_ugc'))?.networkId)) {\r\n      this.setState({ accountDetails: JSON.parse(localStorage.getItem('instagram_ugc')) })\r\n    }\r\n    else this.setState({ accountDetails: null })\r\n  }\r\n\r\n  filterAccountData = (id, data) => {\r\n    const { socialAccountsData, setUserName } = this.props\r\n    let allAcc = []\r\n    socialAccountsData?.accountInformations?.forEach(acc => {\r\n      if (acc.Network.id == id && acc.ConnectedAccounts) {\r\n        acc.ConnectedAccounts.value2 = acc.ConnectedAccounts.accountName;\r\n        allAcc.push(acc);\r\n      }\r\n    });\r\n    if (id == 1 && data) {\r\n      allAcc.unshift({\r\n        ConnectedAccounts: {\r\n          id: data.id_str,\r\n          value2: data.name,\r\n          profilePicture: data.picture\r\n        },\r\n        Network: {\r\n          color: \"#0F1419\",\r\n          description: \"Twitter\",\r\n          icon: \"fa-twitter\",\r\n          id: 1,\r\n          name: \"Twitter\",\r\n          status: 1\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    this.setState({\r\n      accountList: allAcc,\r\n      selectedPersonalAccount: allAcc[0] || ''\r\n    }, () => setUserName(allAcc[0]?.ConnectedAccounts.value2 || ''));\r\n  };\r\n\r\n\r\n  sendRequest = () => {\r\n    const { setStep, setUserName } = this.props\r\n    if (this.state.accountDetails) {\r\n      setUserName(this.state.accountDetails.username)\r\n      setStep(3)\r\n    }\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { setStep } = this.props\r\n    if (this.state.selectedPersonalAccount) setStep(3)\r\n    else { this.setState({ errorMsg: true }) }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.removeItem(\"networkId\")\r\n    window.removeEventListener(\"message\", this.handleMessage);\r\n    channel.removeEventListener(\"message\", this.handleMessage);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { setStep, networkId, setUserName } = this.props\r\n    const { errorMsg, accountList, selectedPersonalAccount } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\r\n          <div className=\"ugc_steps ugc-logged-ac modal-body\">\r\n            <>\r\n            {selectedPersonalAccount ? \r\n            <Dropdown style={{ minWidth: 220 }} id=\"connectedAll\">\r\n              <Dropdown.Toggle  variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`}>\r\n                <div className=\"d-flex align-items-center flex-grow-1\">\r\n                  <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                      imageSize={30}\r\n                      symbolClass={'symbol-label fs-8'}\r\n                      name={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''} \r\n                      profileUrl={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.profilePicture : ''} networkId={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.networkId :''} />\r\n                  <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                      <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName :''}</p>\r\n                  </div>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"w-100\">\r\n                <div className=\"navi flex-column navi-hover py-2 px-5 connectedAllAccounts\">Select Account:</div>\r\n                {accountList.map(acc => {        \r\n                  return <Dropdown.Item key={acc.ConnectedAccounts.id} onClick={() => { this.setState({ selectedPersonalAccount: acc }, () => setUserName(acc.ConnectedAccounts.value2)) }}>\r\n                      <div className=\"d-flex align-items-center\">\r\n                          <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                              imageSize={30}\r\n                              symbolClass={'symbol-label fs-8'}\r\n                              name={acc.ConnectedAccounts.value2} profileUrl={acc.ConnectedAccounts?.profilePicture} networkId={acc.ConnectedAccounts?.networkId} />\r\n                          <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                              <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{acc.ConnectedAccounts.value2}</p>\r\n                          </div>\r\n                      </div>\r\n                  </Dropdown.Item>\r\n                })}\r\n                <Dropdown.Item onClick={() => { localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId) }}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                        imageSize={30}\r\n                        symbolClass={'symbol-label fs-8'}\r\n                        name={''} profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={''} />\r\n                    <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\r\n                        <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Another Account</p>\r\n                    </div>\r\n                  </div>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown> :\r\n\r\n            <Button variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`} onClick={() => {localStorage.setItem('connectionType', 'moderation-ugc'); showAddAccounntAlert(networkId)}}>\r\n              <div className=\"d-flex align-items-center flex-grow-1\">\r\n                <Author className={'symbol symbol-30 symbol-circle flex-shrink-0 me-2'}\r\n                    imageSize={30}\r\n                    symbolClass={'symbol-label fs-8'}\r\n                    name={''} \r\n                    profileUrl={baseUrl('media/images/error/no-profile.jpg')} networkId={networkId} />\r\n                <div className=\"overflow-hidden f-between w-100 pe-3\" >\r\n                    <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Account</p>\r\n                    <FontAwesomeIcon icon={'plus'} />\r\n                </div>\r\n              </div>\r\n            </Button>\r\n            }\r\n            {errorMsg ? <span id=\"social_account_error\" className=\"invalid-feedback\">\r\n              Please connect account\r\n            </span> : null}\r\n            </>\r\n          </div>\r\n          <span id=\"reSearch_cookies\" onClick={() => this.getCookieData()}></span>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n          <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(1)}>Back</Button>\r\n          <Button onClick={() => this.nextStep()}>Next Step</Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default withCookies(SocialAccounts)","import { Component } from \"react\";  \r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport { TOAST_ERROR } from \"../../../../../../utils\";\r\nimport { FontAwesomeIcon } from \"../../../../../../Assets/AssetsHelper\";\r\n\r\nclass ChooseMethod extends Component {\r\n\r\n    state = {\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onNextStep = () => {\r\n        const { requestMode } = this.props\r\n        if (requestMode != null) {\r\n            this.props.setStep(1)\r\n        }\r\n        else TOAST_ERROR('Please select the mode for Right Request')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { setRequestMode, requestMode } = this.props\r\n\r\n        return (\r\n                <>\r\n                    <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                        <h3 className=\"mb-1 h5\">Select the mode for Right Request</h3>\r\n                        <p className=\"text-muted\">Tagshop offers two distinct modes to request rights. Comment Request and DM Request. </p>\r\n\r\n                        <div className=\"mb-3 d-flex flex-column\">\r\n                            <div value={'viaComments'} className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 1 ? 'border-success' : ''}`} onClick={() => setRequestMode(1)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'comment'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">Comment Request</p>\r\n                                        <span className=\"fs-9\">Request creators consent as a comment on their post.</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 1 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 1 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                            <div className={`cursor-pointer mb-4 d-flex border justify-content-between p-3 rounded-1 ${requestMode == 0 ? 'border-success' : ''}`} onClick={() => setRequestMode(0)}>\r\n                                <div className=\"d-flex me-3 fw-normal\">\r\n                                    <FontAwesomeIcon icon={'message'} iconClass={'fs-2 mt-1'}/>\r\n                                    <span className=\"text-start ps-2\">\r\n                                        <p className=\"h5 mb-0 fw-bold\">DM Request</p>\r\n                                        <span className=\"fs-9\">Send a Rights request directly into the DM of the creators!</span>\r\n                                    </span>\r\n                                </div>\r\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                                <span className={`w-20px fs-6 ${requestMode == 0 ? 'text-success' : 'text-muted'}`}>\r\n                                    <FontAwesomeIcon type={requestMode == 0 ? 'solid' : ''} icon={'check-circle'} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => this.props.hideUgc()}>Cancel</Button>\r\n                        <Button onClick={() => this.onNextStep()} >Next Step</Button>\r\n                    </div>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // ugcData: state.moderation.ugcData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseMethod);\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Modal, Button, Nav} from \"react-bootstrap\";\r\nimport { ADD_UGC_TEMPLATE, SEND_UGC } from \"../../../../../actions/moderationActions\";\r\nimport CardPreview from \"./Elements/CardPreview\"; \r\nimport CopyUrl from \"./Elements/CopyUrl\";\r\nimport GeneralRequest from \"./Elements/GeneralRequest\";\r\nimport SocialAccounts from \"./Elements/SocialAccounts\";\r\nimport './rights.scss'\r\nimport ChooseMethod from \"./Elements/ChooseMethod\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../../actions/sceneActions\";\r\nimport ErrorFound from \"../../../../ErrorFound\";\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { TOAST_ERROR } from \"../../../../../utils\";\r\n\r\n\r\nconst UgcModal = (props) => {\r\n  const { hideUgc, ugcData } = props\r\n  const [ugcTabKey, setUgcTabKey] = useState('general')\r\n  const [custom_msg, setCustom_msg] = useState(\"\")\r\n  const [selectedTemplate, setSelectedTemplate] = useState(localStorage.getItem('selectedTemplate') || '')\r\n  const [acceptTnc, setAcceptTnc] = useState(false)\r\n  const [tncError, setTncError] = useState(false)\r\n  const [step, setStep] = useState(4)\r\n  const [isAccount, setIsAccount] = useState('')\r\n  const [userName, setUserName] = useState('')\r\n  const [brand_link, setBrand_link] = useState('')\r\n  const [termslink, setTermslink] = useState('')\r\n  const [termstype, setTermstype] = useState('') \r\n  const [requestMode, setRequestMode] = useState()\r\n  const [isRequesting, setIsRequesting] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA())\r\n  }, [])\r\n \r\n  const sendRequest=()=>{\r\n    if(isAccount){\r\n      setStep(3)\r\n      onRaiseRequest()\r\n    }\r\n  }\r\n\r\n  const getPostIds = () => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    let postIds = []\r\n    if (data.length > 0) {\r\n      data.map((item, index) => {\r\n        postIds.push(item.referenceId)\r\n      })\r\n    }\r\n    return postIds.join(',')\r\n  }\r\n\r\n\r\n  const onRaiseRequest = (hash) => {\r\n    const { template, data, unique_code, bitlyurl } = ugcData\r\n    setIsRequesting(true)\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = {\r\n      custom_message: custom_msg,\r\n      feedId: data[0].feedId,\r\n      networkId: data[0].networkId,\r\n      selectedImage: data[0].postFile,\r\n      selectedVideo: '',\r\n      selectedUsername: data[0].username,\r\n      handle:userName,\r\n      postId: data.length > 1 ? getPostIds() : data[0].referenceId,\r\n      brand_link: brand_link ? brand_link :tempSelected?.client_logo,\r\n      termslink: termslink ? termslink:tempSelected?.custom_terms,\r\n      termstype: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      bitlylink: bitlyurl,\r\n      unique_code: unique_code,\r\n      rightsVia: requestMode,\r\n      hashtag: hash,\r\n      networkPostId: data[0].postId,\r\n      wallId:localStorage.getItem('wallId'),\r\n      client:localStorage.getItem('ownerId')\r\n    }\r\n    SEND_UGC(obj, ()=>setIsRequesting(false))\r\n  }\r\n\r\n\r\n\r\n const onUpdateTemplate = () => {\r\n    const { template } = ugcData\r\n    const index = template.findIndex(t => t.id == selectedTemplate)\r\n    let tempSelected = template[index]\r\n    if(!tempSelected) tempSelected =template[0]\r\n    var obj = { \r\n      client_logo: brand_link ? brand_link :tempSelected?.client_logo,\r\n      custom_terms: termslink ? termslink:tempSelected?.custom_terms,\r\n      custom_terms_name: termstype ? termstype:tempSelected?.custom_terms_name,\r\n      custom_message: custom_msg,\r\n      name:tempSelected?.name,\r\n      owner:localStorage.getItem('ownerId'),\r\n      id:tempSelected?.id\r\n    }\r\n  if(![1,2,3].includes(tempSelected?.id)){\r\n    if (!custom_msg ) {\r\n      TOAST_ERROR('Message field is required')\r\n    }\r\n    else {\r\n      dispatch(ADD_UGC_TEMPLATE(obj,''))\r\n    }\r\n  }\r\n  else{console.log('first')}\r\n  }\r\n\r\n  return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                  <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'}/>\r\n                  UGC Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={() => hideUgc()}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                  {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n\r\n                {step != 4 ? <div className=\"ugc-wizard-nav\">\r\n                        <Nav variant=\"nav\" className=\"bg-gray-200 justify-content-between row gx-0\">\r\n                        <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${[1,2,3].includes(step) ? `active` : ``}`} onClick={()=>setStep(1)}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[1,2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[1,2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">General Request</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 2 || step == 3 ? `active` : `disabled`}`} onClick={()=>acceptTnc ? setStep(2):''}>\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={((acceptTnc && requestMode == 0) || requestMode == 1) && [2,3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Social Account</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 f-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\r\n                                    <span className={`d-flex flex-shrink-0 me-1 ${[3].includes(step) ? 'text-success' : 'text-muted'}`}>\r\n                                      <FontAwesomeIcon type={[3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\"/>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap text-body\">Preview</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </div>\r\n                    : <></>}\r\n\r\n\r\n\r\n                    {ugcData && step ==4? <ErrorFound><ChooseMethod ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setRequestMode={setRequestMode} hideUgc={hideUgc}/></ErrorFound> : null}\r\n\r\n                    {ugcData && step ==1?  <ErrorFound><GeneralRequest ugcData={ugcData} requestMode={requestMode}  setStep={setStep} setAcceptTnc={setAcceptTnc} acceptTnc={acceptTnc} tncError={tncError} setTncError={setTncError} selectedTemplate={selectedTemplate} setSelectedTemplate={setSelectedTemplate} setCustom_msg={setCustom_msg} custom_msg={custom_msg} setBrand_link={setBrand_link} brand_link={brand_link} setTermslink={setTermslink} setTermstype={setTermstype}  termstype={termstype} hideUgc={hideUgc} onUpdateTemplate={onUpdateTemplate}/></ErrorFound> : null}\r\n\r\n                    {((acceptTnc && requestMode == 0) || requestMode == 1) && step ==2?  <ErrorFound><SocialAccounts  setStep={setStep} setUserName={setUserName} setIsAccount={setIsAccount} networkId={ugcData.data[0].networkId != 18 ? ugcData.data[0].networkId : 2} /></ErrorFound>:\"\"}\r\n\r\n                    {custom_msg && ugcData && step ==3 ? <ErrorFound><CopyUrl requestMode={requestMode} onRaiseRequest={onRaiseRequest} setUserName={setUserName} networkId={ugcData.data[0].networkId} setUgcTabKey={setUgcTabKey} setStep={setStep} ugcData={ugcData} custom_msg={custom_msg} isRequesting={isRequesting} /></ErrorFound> : null}\r\n\r\n                </div>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n};\r\n\r\nexport default (UgcModal);\r\n","import React, { Component } from 'react'\r\nimport HTMLReactParser from 'react-html-parser';\r\nimport moment from 'moment'\r\nimport { WASABI_PATH } from '../../../../../../actions/api'; \r\nimport { DOWNLOAD_CERTIFICATE } from '../../../../../../actions/ugcAction';\r\nimport {saveAs} from \"file-saver\";\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass UgcModalApproved extends Component {\r\n    onDownloadMedia = (data) => {\r\n        if (data.type != 5 && data.type != 3) {\r\n            saveAs(data.postFile, `${data.id}`);\r\n        }\r\n        else{\r\n            saveAs(data.mediaUrl, `${data.id}`);\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide } = this.props;\r\n        return ugcRequestData ? <>\r\n\r\n            <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                <Modal.Header className=\"justify-content-between py-0\">\r\n                    <span className='text-muted fw-medium'>\r\n                        <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1 text-success'}/>\r\n                        Access Image\r\n                    </span>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                    <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                        <h3 className='text-center mb-4'>Your UGC Request Approved</h3>\r\n                        <div className='mx-auto' style={{maxWidth:450}}>\r\n                            <div className={'d-flex flex-column w-100'}>\r\n                                <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                <div className='p-4'>\r\n                                    <div className=\"d-flex align-items-start mb-2\">\r\n                                        <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                            <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                imageSize={40}\r\n                                                symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                name={ugcRequestData.name} profileUrl={ugcRequestData.picture} networkId={ugcRequestData.networkId} />\r\n                                            <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </div>\r\n                                    <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"full_modal_sidebar position-relative\">\r\n                        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                            <div className=\"ugc-information\">\r\n                                <h2 className=\"mb-5 h3\">Information</h2>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User handle</span><span className=\" m_grid_uername\">{`@${ugcRequestData.username}`}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">User name</span><span className=\" m_grid_name\">{ugcRequestData.name}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Device</span>\r\n                                        <span className=\" ugc-deviceupdate\">\r\n                                            {ugcRequestData.userAgent ?\r\n                                                HTMLReactParser(ugcRequestData.userAgent)\r\n                                                : null\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">IP Address</span><span className=\" ugc-userIP\"> {\r\n                                            ugcRequestData.userIP\r\n                                        }</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">Location</span><span className=\" ugc-userLocation\">\r\n                                            {\r\n                                                ugcRequestData.userLocation\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Post Approval Date</span><span className=\" ugc-actionTime\">{moment(ugcRequestData.actionTime).utcOffset(0).format('YYYY-MM-DD  hh:mm:ss a')}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mr-2\">TimeZone</span>\r\n                                        <span className=\" ugc-timezone\">{ugcRequestData.timezone ? HTMLReactParser(ugcRequestData.timezone) : null}</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\r\n                                        <span className=\"text-muted mr-2\">Terms &amp; Condition</span>\r\n                                        <span className=\" ugc-tncdownload\">\r\n                                            <a className='btn btn-link' href={(ugcRequestData.custom_terms) ? `${WASABI_PATH}test/${ugcRequestData.custom_terms}` : `${WASABI_PATH}test/${ugcRequestData.custom_term_type}`} target=\"_blank\"><span className=\"ugc-terms overflow-hidden text-ellipsis text-nowrap\">{ugcRequestData.custom_term_type}</span>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/></a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-top px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\r\n                                        <span className=\"text-muted mb-2\">Approval Certificate</span>\r\n                                        <span className=\"f-between w-100\">\r\n                                            Rights Management \r\n                                            <a className='btn btn-dark ms-1' onClick={() => DOWNLOAD_CERTIFICATE(ugcRequestData.ugcid)}>Download\r\n                                                <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'}/>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {ugcRequestData.comment ? <div className=\"ugc-user-comment mt-7\">\r\n                                <h2 className=\"mb-5\">User Comment</h2>\r\n                                <div className=\"user-comment-box p-5\">\r\n                                    <p>{ugcRequestData.comment}</p>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                            <Button variant=\"secondary\" className=\"me-3 btn-min-w\" onClick={onHide} >Close</Button>\r\n                            <Button className=\"btn-min-w\" onClick={() => this.onDownloadMedia(ugcRequestData)}>Download</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </> : null\r\n\r\n    }\r\n}\r\n\r\nexport default UgcModalApproved","import React, { Component } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\n\r\nclass RadialChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var days = (30 - props.ago) * 3.33;\r\n        this.state = {\r\n            series: [days],\r\n            options: {\r\n                chart: {\r\n                    height: 320,\r\n                    type: \"radialBar\"\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\",\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: true,\r\n                                fontWeight: '700',\r\n                                name: \"TEST\"\r\n                            },\r\n                            value: {\r\n                                color: [\"#545454\"],\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: false\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: [\"#f2f6f8\"],\r\n                            strokeWidth: '100%'\r\n                        },\r\n                        dataLabels: {\r\n                            show: true,\r\n                            name: {\r\n                                show: true,\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 600,\r\n                                color: '#545454',\r\n                                offsetY: -10\r\n                            },\r\n                            value: {\r\n                                show: false,\r\n                                fontSize: '14px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800,\r\n                                color: '#545454',\r\n                                offsetY: 16\r\n                            },\r\n                            total: {\r\n                                show: true,\r\n                                label: props.ago + \"Days\",\r\n                                color: '#373d3f',\r\n                                fontSize: '16px',\r\n                                fontFamily: 'inter',\r\n                                fontWeight: 800\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                colors: [\"#ffa800\"],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                }\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ago !== this.props.ago){\r\n            var days = (30 - this.props.ago) * 3.33;\r\n            this.setState({  \r\n                    series: [days],\r\n                    options: {\r\n                        chart: {\r\n                            height: 320,\r\n                            type: \"radialBar\"\r\n                        },\r\n                        plotOptions: {\r\n                            radialBar: {\r\n                                hollow: {\r\n                                    margin: 0,\r\n                                    size: \"65%\",\r\n                                },\r\n                                dataLabels: {\r\n                                    showOn: \"always\",\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontWeight: '700',\r\n                                        name: \"TEST\"\r\n                                    },\r\n                                    value: {\r\n                                        color: [\"#545454\"],\r\n                                        fontSize: \"30px\",\r\n                                        fontWeight: '700',\r\n                                        offsetY: 12,\r\n                                        show: false\r\n                                    }\r\n                                },\r\n                                track: {\r\n                                    background: [\"#f2f6f8\"],\r\n                                    strokeWidth: '100%'\r\n                                },\r\n                                dataLabels: {\r\n                                    show: true,\r\n                                    name: {\r\n                                        show: true,\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 600,\r\n                                        color: '#545454',\r\n                                        offsetY: -10\r\n                                    },\r\n                                    value: {\r\n                                        show: false,\r\n                                        fontSize: '14px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800,\r\n                                        color: '#545454',\r\n                                        offsetY: 16\r\n                                    },\r\n                                    total: {\r\n                                        show: true,\r\n                                        label: this.props.ago + \"Days\",\r\n                                        color: '#373d3f',\r\n                                        fontSize: '16px',\r\n                                        fontFamily: 'inter',\r\n                                        fontWeight: 800\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        colors: [\"#ffa800\"],\r\n                        stroke: {\r\n                            lineCap: \"round\",\r\n                        }\r\n                    }\r\n        \r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={350} />\r\n\r\n    }\r\n}\r\n\r\nexport default RadialChart;","\r\nimport moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport RadialChart from './RadialChart'\r\nimport { Link } from 'react-router-dom';\r\nimport CardPreview from '../Elements/CardPreview';\r\nimport { COPY_TO_CLIPBOARD } from '../../../../../../utils';\r\n\r\nexport default class Pending extends Component {\r\n    state={days:0, copied:false}\r\n\r\n    componentDidMount(){ this.getNewdata() }\r\n\r\n    getNewdata=()=>{\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        var new_date = moment().diff(moment(ugcRequestData.ugccreated, \"YYYY-MM-DD\"), 'days');\r\n        var ago = 30 - new_date;\r\n        this.setState({days:ago})\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.ugcRequestData.ugccreated !== this.props.ugcRequestData.ugccreated){\r\n            this.getNewdata();\r\n        }\r\n    }\r\n    copyText = (id) => {\r\n        COPY_TO_CLIPBOARD(id)\r\n        this.setState({copied:true})\r\n        setTimeout(()=>{this.setState({copied:false})},1000)\r\n    }\r\n    render() {\r\n        const { ugcData, ugcRequestData, onHide } = this.props\r\n        const { days, copied} = this.state\r\n        return (<Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>\r\n                    <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-warning'}/>\r\n                    Pending Request\r\n                </span>\r\n                <div className='ms-5 d-flex justify-content-end'>\r\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                    <h3 className='text-center mb-4'>Oops! Your UGC Request is pending now</h3>\r\n                    {ugcData ? <CardPreview ugcData={ugcData} /> : null}\r\n                </div>\r\n                <div className=\"rights_modal_sidebar position-relative\">\r\n                    <div className='p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard'>\r\n                        <div className='mb-3'>\r\n                            {days ? <RadialChart ago={ days} />:''}\r\n                        </div>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text>\r\n                                <FontAwesomeIcon type={'solid'} icon={'link'} />\r\n                            </InputGroup.Text>\r\n                            <Link id=\"rights_link\" className=\"form-control form-control-lg\" to={ugcRequestData.bitlyurl} target=\"_blank\">{ugcRequestData.bitlyurl}</Link>\r\n                        </InputGroup>\r\n                        <Form.Group className=\"mb-5\">\r\n                            <Button size='lg' onClick={()=>this.copyText('rights_link')} className='w-100'>{copied? 'Url Copied' :'Copy Url'}</Button>\r\n                        </Form.Group>\r\n                        <h5> Steps to proceed </h5>\r\n                        <ul className={`list-unstyled list-points fs-8`}>\r\n                            <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\r\n                            <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\r\n                            <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                            <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                            <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                        <Button className=\"btn-min-w\" onClick={onHide}>Done</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import moment from 'moment';\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport Author from '../../../CommonComponents/Author/Author';\r\nimport ShowMoreContent from '../../../CommonComponents/ShowMoreContent';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nclass RejectModal extends Component {\r\n\r\n\r\n    render() {\r\n        const { ugcRequestData, ugcData, onHide, openugcModel } = this.props;\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n                    <Modal.Header className=\"justify-content-between py-0\">\r\n                        <span className='text-muted fw-medium'>\r\n                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-danger'}/>\r\n                            Rejected Post\r\n                        </span>\r\n                        <div className='ms-5 d-flex justify-content-end'>\r\n                            <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                        <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\r\n                            <h3 className='text-center mb-4'>Rejected Post</h3>\r\n                            <div className='mx-auto' style={{maxWidth:450}}>\r\n                                <div className={'d-flex flex-column w-100'}>\r\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\r\n                                    <div className='p-4'>\r\n                                        <div className=\"d-flex align-items-start mb-2\">\r\n                                            <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\r\n                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                    imageSize={40}\r\n                                                    symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                    name={ugcRequestData.name} profileUrl={ugcRequestData?.postFile} networkId={ugcRequestData.networkId} />\r\n                                                <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\r\n                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\r\n                                                </div>\r\n                                            </div>  \r\n                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\r\n                                                    <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(ugcRequestData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(ugcRequestData.networkId)} data-invert={GET_NETWORK_NAME(ugcRequestData.networkId)} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </div>\r\n                                        <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"full_modal_sidebar position-relative\">\r\n                            <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\r\n                                <h2 className=\"mb-5 text-center\">Sorry! Your UGC Request has been rejected</h2>\r\n                                <div className=\"mb-7\">\r\n                                    <Button size='lg' className=\"w-100\" onClick={openugcModel}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'user-check'}/>\r\n                                        Get Rights\r\n                                    </Button>\r\n                                </div>\r\n                                <ul className={`list-unstyled list-points fs-8`}>\r\n                                    <li className='mb-1'>Keep the request personalized</li>\r\n                                    <li className='mb-1'>Be clear about your intentions with the post</li>\r\n                                    <li className='mb-1'>Appreciate the post owner's efforts</li>\r\n                                    <li className='mb-1'>Offer rewards to users</li>\r\n                                    <li className='mb-1'>Add T&C with your request</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end p-4 border-top\">\r\n                                <Button className=\"btn-min-w\" onClick={onHide} >Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n    }\r\n}\r\n\r\nexport default RejectModal","import ApprovedModal from '../../UgcRights/Status/ApprovedModal'\r\nimport Pendingng from '../../UgcRights/Status/PendingModal'\r\nimport RejectModal from '../../UgcRights/Status/RejectModal'\r\n\r\nconst UgcStatus = (props) => {\r\n    const { ugcData, statusPopup, ugcRequestData, onHide, openugcModel } = props\r\n    return (<>\r\n        {statusPopup == 1 && ugcRequestData && ugcRequestData.username ? <Pendingng ugcData={ugcData} ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n        {statusPopup == 3 && ugcRequestData && ugcRequestData.username ? <RejectModal ugcRequestData={ugcRequestData} ugcData={ugcData} onHide={onHide}  openugcModel={openugcModel} /> : null}\r\n        {statusPopup == 2 && ugcRequestData && ugcRequestData.username ? <ApprovedModal ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\r\n    </>)\r\n}\r\nexport default UgcStatus","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { generateRandomArray } from '../../../../../utils';\r\n\r\nconst ModerationSkeleton = () => {\r\n    return (\r\n        <div className=\"row gx-2\">\r\n            {generateRandomArray(20).map((_, index) => (\r\n                <div className='assetsItem' key={index}>\r\n                    <Card className='border-0'>\r\n                        <Card.Body className='p-0'>\r\n                            <div className=\"f-between flex-wrap flex-sm-nowrap border-bottom p-2\">\r\n                                <span className=\"d-flex\">\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                    <span className=\"sk_rect h-14px w-14px my-1 me-2\"></span>\r\n                                </span>\r\n                                <span className=\"sk_line h-10px w-20px\"></span>\r\n                            </div>\r\n                            <div className=\"sk_img rounded-0 w-100 flex-shrink-0 overflow-hidden\" style={{ paddingBottom: '100%' }}></div>\r\n                            <div className=\"d-flex align-items-center p-3\">\r\n                                <div className=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\">\r\n                                    <div className=\"sk_img symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                    <div className=\"overflow-hidden w-100\" style={{ maxWidth: '130px' }}>\r\n                                        <p className=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p>\r\n                                        <span className=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"d-flex align-items-end flex-column flex-shrink-0\" style={{ width: '100px' }}>\r\n                                    <div className=\"sk_img symbol symbol-28 rounded-1 flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                </span>\r\n                            </div>\r\n                            <div className='d-flex align-items-center p-3 border-top'>\r\n                                <div className='w-50 me-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                                <div className='w-50 ms-1'>\r\n                                    <div className=\"sk_line sk_line_100 h-34px rounded-1\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModerationSkeleton;\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType';\r\nimport { connect } from 'react-redux';\r\nimport { REMOVE_TAGGED_PRODUCT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nclass ProductTags extends Component {\r\n    removeTaggProduct = (product_sku, productId, referenceId) => { if(checkPermission('contentGallery', 'editGallery', true)) {this.props.REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId, this.props.navigate); }};\r\n\r\n    render() {\r\n        const { item, listView , index, openContent} = this.props;\r\n        return (item.postproduct && item.postproduct.length > 0 ?\r\n                <Row className='d-flex gx-2 flex-nowrap product-scroll'>\r\n                    {item.postproduct.map((item, index) => {\r\n                        return <Col xs={2} key={index} style={{width:'20%'}}>\r\n                            <div className='w-100 position-relative'>\r\n                                <ImageType mediaClass=\"rounded-1 overflow-hidden position-relative bg-body\" size={100} url={item?.product?.product_image} height={50} width={50} alt={''} isCover={true} />\r\n                                <span className='h-16px w-16px rounded-circle bg-danger cursor-pointer position-absolute f-center text-white fs-10' style={{ top: -6, right: -6 }} onClick={() => this.removeTaggProduct(item.product.product_sku, item.product.id, item.post_id)}>\r\n                                <FontAwesomeIcon icon={'xmark'} />\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                    })}\r\n                    <Col xs={2} style={{width:'20%'}}>\r\n                        <Button variant='light-primary' className='f-center flex-shrink-0 p-0 h-100 w-100 fs-6' onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                            <FontAwesomeIcon icon={'plus'} iconClass={'me-0'}/>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Button variant='light-primary' className={`w-100 box-shadow`}  onClick={()=>openContent(item, index)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                    <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />Tag Products\r\n                </Button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { moderation: state.moderation, }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return { REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId, navigate) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)), }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTags)","import React, { Component } from 'react'\r\nimport { Badge, Button } from 'react-bootstrap';\r\n\r\nclass Tags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.item.tags ? String(this.props.item.tags).split(',') : [],\r\n            visibleCount: 5,\r\n        };\r\n    }\r\n\r\n \r\n    handleShowMore = () => {\r\n        this.setState(prevState => ({\r\n            visibleCount: prevState.items.length,\r\n        }));\r\n    };\r\n\r\n    handleShowLess = () => {\r\n        this.setState({\r\n            visibleCount: 5,\r\n        });\r\n    };\r\n    render() {\r\n\r\n        const { items, visibleCount } = this.state;\r\n        const visibleItems = items.slice(0, visibleCount);\r\n        return <>\r\n\r\n            {visibleItems && visibleItems.length > 0 ? <div className=\"d-flex align-items-center flex-wrap mb-2 w-100 overflow-hidden\">\r\n                <div className='w-100 d-flex flex-wrap'>\r\n                    {\r\n                        visibleItems.map((Item, index) => {\r\n                            return Item && String(Item).length > 0 ? <Badge key={index} bg='' className={`badge-outline-secondary ${index == 99999 ? 'border-gradient' : 'border'}`} onClick={this.props.onClickToPostTags(Item)}>{Item}</Badge> : null\r\n\r\n                        })\r\n                    }\r\n                    {items.length > 5 ? visibleCount < items.length ? (\r\n                        <Button variant='secondary' onClick={this.handleShowMore} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show More\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant='secondary' onClick={this.handleShowLess} className='rounded-pill px-3 py-0 h-26px fs-10 fst-italic m-1'>\r\n                            Show Less\r\n                        </Button>\r\n                    ):null}\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    }\r\n}\r\nexport default Tags","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { connect } from 'react-redux';\r\nimport { GET_LIST_ALL_PIN_TO_TOP_POST } from '../../../../../reducer/keys';\r\nimport { GET_PIN_TO_TOP_LIST, GET_REORDER_PIN_TO_TOP } from '../../../../../actions/moderationActions';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Card, Image, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../utils'\r\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport ImageType from '../../CommonComponents/MediaType/ImageType'\r\nimport Author from '../../CommonComponents/Author/Author'\r\nimport { Loader } from '../../CommonComponents/Loader';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed); return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({ ...draggableStyle });\r\nconst getListStyle = isDraggingOver => ({});\r\n\r\nclass ChangeOrderModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [], newArray: [], spinner:false, updateOrder: false };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n    componentDidMount() { this.onLoadData(this.props); }\r\n\r\n\r\n    reArrangePosts = () => {\r\n        const { newArray, updateOrder } = this.state;\r\n        const postId = newArray.map(item => item.id);\r\n        const indexing = newArray.map((_, index) => index + 1);\r\n        if(updateOrder) {\r\n            this.setState({spinner:true})\r\n            this.props.GET_REORDER_PIN_TO_TOP(postId, indexing, \r\n                setTimeout(() => {\r\n                    this.setState({spinner:false})\r\n                }, 1000)\r\n                \r\n            )}\r\n        \r\n    };\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.openpinToTopModal !== this.props.openpinToTopModal) {\r\n            if (this.props.openpinToTopModal) this.props.GET_PIN_TO_TOP_LIST()\r\n        }\r\n        if (prevProps.pinToTop !== this.props.pinToTop) this.onLoadData(this.props)\r\n    }\r\n\r\n\r\n    onLoadData = (props) => {\r\n        const { pinToTop } = props;\r\n        this.setState({ items: pinToTop, newArray: pinToTop });\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        if (!result.destination) { return; }\r\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\r\n        this.setState({ items,  newArray: items , updateOrder:true});\r\n    }\r\n    render() {\r\n        const { openpinToTopModal, closeModalPop } = this.props\r\n        const {spinner} = this.state\r\n        return (\r\n\r\n            <Modal className='pintotop_modal' size=\"lg\" show={openpinToTopModal} onHide={closeModalPop} centered>\r\n                <Modal.Header closeButton >\r\n                    <Modal.Title>Change Order</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='mx-xl-4 px-lg-4 py-lg-2 mx-0 overflow-auto' style={{height:500}}>\r\n                        {this.state.items && this.state.items?.length > 0 ? \r\n                        <DragDropContext onDragEnd={this.onDragEnd} >\r\n                            <Droppable droppableId=\"droppable\">\r\n                                {(provided, snapshot) => (\r\n                                    <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\r\n                                        {this.state.items && this.state.items.length && this.state.items.map((item, index) => (\r\n                                            <Draggable key={`item-${index}`} draggableId={`item-${index}`} index={index}>\r\n                                                {(provided, snapshot) => (\r\n                                                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}>\r\n                                                        <Card data-id={item.id} className='mb-4'>\r\n                                                            <Card.Body className='p-2'>\r\n                                                                <span className='position-absolute start-0 translate-middle h-18px w-18px rounded-circle f-center bg-dark text-gray-100 top-50 fs-10 fw-medium' style={{ zIndex: 1 }}>{index + 1}</span>\r\n                                                                <div className=\"d-flex flex-lg-row flex-column\">\r\n                                                                    <div className='f-center h-100 text-gray-300 me-2 fs-6'>\r\n                                                                        <FontAwesomeIcon type={'solid'} icon={'grip-dots-vertical'} />\r\n                                                                    </div>\r\n                                                                    <div className='d-flex flex-shrink-0 flex-column cursor-pointer pe-lg-4 mx-auto mb-lg-0 mb-5' style={{ width: 120 }}>\r\n                                                                        <ImageType mediaClass={'position-relative rounded-1 overflow-hidden w-100'} size={100} height={120} width={120} url={item.newMedia} alt={''} isCover={true} />\r\n                                                                    </div>\r\n                                                                    <div className=\"d-flex flex-grow-1 flex-column pl-lg-5 w-100 overflow-hidden\">\r\n                                                                        <div className=\"d-flex align-items-start mb-1\">\r\n                                                                            <Link href={item.link} target='_blank' className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none text-gray-800\">\r\n                                                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                                                    imageSize={40}\r\n                                                                                    symbolClass={'symbol-label fw-bolder fs-5'}\r\n                                                                                    name={item.postname} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                                                <div className=\"pe-2 w-100 overflow-hidden\">\r\n                                                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.postname}</strong></p>\r\n                                                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.postname}</p>\r\n                                                                                </div>\r\n                                                                            </Link>\r\n                                                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\r\n                                                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\r\n                                                                                    <Image className=\"h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(item.networkId)} data-invert={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                                                </OverlayTrigger>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <p className='line-clamp line-clamp-3 mb-1'>{item.postcontent}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                        :\r\n                        <Loader />}\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant='secondary' className='ms-3 btn-min-w' onClick={closeModalPop}>Cancel</Button>\r\n                    <Button className={`ms-3 btn-min-w ${spinner ? 'spinner':''}`} onClick={this.reArrangePosts}>Done</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pinToTop: state.moderation?.pinToTop\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        GET_LIST_ALL_PIN_TO_TOP_POST: () => dispatch(GET_LIST_ALL_PIN_TO_TOP_POST()),\r\n        GET_PIN_TO_TOP_LIST: () => dispatch(GET_PIN_TO_TOP_LIST()),\r\n        GET_REORDER_PIN_TO_TOP: (postId, indexing, calback) => dispatch(GET_REORDER_PIN_TO_TOP(postId, indexing, calback))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeOrderModal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, OverlayTrigger, Tooltip, Button, Image, Badge } from 'react-bootstrap';\r\nimport { GET_FIRST_LETTER, TOAST_ERROR } from '../../../../../../utils';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\r\nimport { autoCompleteSearch } from '../../../../../../actions/moderationActions';\r\nimport { DashboardModal } from '@uppy/react';\r\nimport UppyUpload from '../../../../../../utils/uppyUpload';\r\nimport $ from 'jquery'\r\nimport { WASABI_PATH } from '../../../../../../actions/api';\r\n\r\nconst uppyUploader = new UppyUpload()\r\nclass EditAside extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = { tagString: [], searchPost: '', selectedOption: [], isLoading: false, uppyProfileOpen: false, profile: '' };\r\n       }\r\n\r\n       componentDidMount() {\r\n              if (uppyUploader) {\r\n                     uppyUploader.uppy.on('transloadit:result', (stepName, result) => {\r\n                            this.props.onChangeAuthorImg(`${WASABI_PATH}tmp/${result.id}.${result.ext}`)\r\n                            setTimeout(() => {\r\n                                   uppyUploader.uppy.cancelAll()\r\n                                   this.setState({ uppyProfileOpen: false })\r\n                            }, 300)\r\n                     })\r\n              }\r\n              this.getTagsArray()\r\n       }\r\n\r\n       getTagsArray = () => {\r\n              let submitTags = (this.props?.tags || \"\").split(\",\").filter(tag => tag.trim().length > 0);\r\n              this.setState({ tagString: submitTags });\r\n\r\n       }\r\n       componentDidUpdate(prevProps) {\r\n              if (prevProps.tags !== this.props.tags) {\r\n                     this.getTagsArray();\r\n              }\r\n       }\r\n\r\n       onLoad = () => {\r\n              const { searchPost } = this.state;\r\n              if (searchPost?.length > 0) {\r\n                     this.setState({ isLoading: true });\r\n\r\n                     autoCompleteSearch(searchPost).then((response) => {\r\n                            const { responseData, responseCode } = response.data;\r\n                            if (responseCode === 200) {\r\n                                   const formattedTags = responseData?.totalTag.map(tag => ({ value: tag, label: tag.charAt(0).toUpperCase() + tag.slice(1) }));\r\n                                   this.setState({ selectedOption: formattedTags, isLoading: false });\r\n                            } else {\r\n                                   this.setState({ selectedOption: [], isLoading: false });\r\n                            }\r\n\r\n                     }).catch(() => {\r\n                            this.setState({ isLoading: false });\r\n                     });\r\n              } else {\r\n                     this.setState({ selectedOption: [], isLoading: false });\r\n              }\r\n       }\r\n\r\n\r\n       onSearchText = (textInput) => { this.setState({ searchPost: textInput }, () => this.onLoad()); }\r\n\r\n       handleSelectChange = (e) => {\r\n              const { tagString } = this.state;\r\n              if (e?.value?.length) {\r\n                     if (tagString.includes(e.value)) {\r\n                            TOAST_ERROR('Tag already exists');\r\n                     } else {\r\n                            this.setState({ tagString: [...tagString, e.value] }, () => this.props.onChangeTag(this.state.tagString.join(',')));\r\n                     }\r\n              }\r\n       };\r\n\r\n\r\n\r\n       onClickToRemoveTag = (index) => event => {\r\n              let { tagString } = this.state;\r\n              tagString.splice(index, 1)\r\n              this.setState({ tagString }, () => this.props.onChangeTag(tagString.join(',')))\r\n       }\r\n\r\n       handleOpen = event => {\r\n              this.setState({ uppyProfileOpen: true, })\r\n              $(\".uppy-Dashboard-close\").click(() => {\r\n                     uppyUploader.uppy.cancelAll()\r\n                     this.setState({ uppyProfileOpen: false })\r\n              })\r\n       }\r\n\r\n       handleSave = () => {\r\n              const { author, handle, onSavePost, content } = this.props;\r\n              if (author && handle && content) { onSavePost(); }\r\n       };\r\n\r\n\r\n       isValidNewOption = (inputValue) => {\r\n              return inputValue.length >= 3;\r\n            };\r\n\r\n       render() {\r\n              const { onChangeAuthor, onChangeHandle, onChangeContent, onClickRemoveAuthorImg, author, handle, authorImage, onSavePost, onSaveTag,  content, handleClose, loading, isTaggModal } = this.props\r\n              const { tagString, isLoading, selectedOption } = this.state\r\n\r\n              const tagsArrayFun = () => {\r\n                     const tagItem = tagString.map((tag, removeIndex) =>\r\n                            <Badge key={tag.toString()} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary\">\r\n                                   <span className=' text-ellipsis d-block'>{tag}</span>\r\n                                   <Button variant='link' size='sm' className=\"p-0 ms-1 \" onClick={this.onClickToRemoveTag(removeIndex)}>\r\n                                          <FontAwesomeIcon icon={'xmark'} />\r\n                                   </Button>\r\n                            </Badge>\r\n                     );\r\n                     return tagItem;\r\n              }\r\n              return (\r\n                     <div>\r\n                            <div className='p-4 m_sidebar_scroll_'>\r\n                                   {!isTaggModal &&\r\n                                          <Form.Group className='mb-3'>\r\n                                                 <Form.Label className=\"mb-2\" htmlFor=\"author_p_\">Author Profile</Form.Label>\r\n                                                 <div className=\"d-flex align-items-center mb-5\">\r\n                                                        <div className=\"me-3 me-xxl-4\">\r\n                                                               <div className=\"symbol h-70px w-70px position-relative rounded-circle bg-light overflow-hidden\">\r\n                                                                      {authorImage && authorImage != '' ? <Image src={authorImage} alt={author} height={70} width={70} className=\"iobject-center-cover\" load=\"lazy\" fluid />\r\n                                                                             : <span className=\"symbol-label bg-primary text-gray-100-alt fw-bold display-1 text-uppercase\">{GET_FIRST_LETTER(author)}</span>}\r\n\r\n                                                               </div>\r\n                                                        </div>\r\n                                                        <div className=\"d-flex align-items-start flex-column\">\r\n                                                               <div className=\"d-flex align-items-center\">\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={this.handleOpen}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'pen'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                                                             <Button variant='icon' size='sm' className=\"btn-active-primary m-1\" onClick={onClickRemoveAuthorImg}>\r\n                                                                                    <FontAwesomeIcon type={'solid'} icon={'trash-can'} />\r\n                                                                             </Button>\r\n                                                                      </OverlayTrigger>\r\n                                                               </div>\r\n                                                               <div className=\"form-text mt-2\">Allowed file types: png, jpg, jpeg.</div>\r\n                                                        </div>\r\n                                                 </div>\r\n                                          </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_n_\">Author Name <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_n_\" name=\"author_n_\" className={!author.length ? 'is-invalid' : ''} placeholder=\"Enter Author Name\" value={author} onChange={onChangeAuthor} />\r\n                                          {!author.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"author_h_\">Author Handle <span className='text-danger'>*</span></Form.Label>\r\n                                          <Form.Control id=\"author_h_\" name=\"author_h_\" className={!handle.length ? 'is-invalid' : ''} placeholder=\"Enter Author Handle\" value={handle} onChange={onChangeHandle} />\r\n                                          {!handle.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                                   {isTaggModal ? <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"tags__\">Add Tag</Form.Label>\r\n                                          <div className=\"mb-3\">\r\n                                                 <CreatableSelect className=\"selectpicker\" placeholder={'Enter your Tag'} classNamePrefix=\"selectpicker\" isClearable isLoading={isLoading} options={selectedOption} onChange={this.handleSelectChange} onInputChange={this.onSearchText} value={selectedOption}  isValidNewOption={this.isValidNewOption} />\r\n                                          </div>\r\n                                          {/* <Button  onClick={()=>this.handleAddTagButton(searchPost)}>Add</Button> */}\r\n                                          <div className=\"mb-3 mb-xl-4\">\r\n                                                 <div className=\"tags-group d-flex align-items-center flex-wrap\">\r\n                                                        {tagsArrayFun()}\r\n                                                 </div>\r\n                                          </div>\r\n                                   </Form.Group>:''}\r\n                                   {!isTaggModal && <Form.Group className='mb-3'>\r\n                                          <Form.Label className=\"mb-2\" htmlFor=\"post_cont_\">Content</Form.Label>\r\n                                          <Form.Control as={'textarea'} className={`${!content.length ? 'is-invalid' : ''} textarea-min-row-7`} id=\"post_cont_\" placeholder=\"Enter Content\" value={content} onChange={onChangeContent} />\r\n                                          {!content.length ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                   </Form.Group>}\r\n                            </div>\r\n                            <div className=\"assets_btn_wrapper p-4 f-center flex-column\">\r\n                                   {!isTaggModal ? <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading || !(author && handle && content)} onClick={this.handleSave}>Save Changes</Button>\r\n                                          : <Button className={`w-100 mb-2 ${loading ? 'spinner' : ''}`} disabled={loading} onClick={()=> onSaveTag()}>Save Changes</Button>}\r\n                                   <Button variant='link' className='text-muted' onClick={handleClose}>Cancel</Button>\r\n                            </div>\r\n\r\n\r\n                            <DashboardModal\r\n                                   id=\"background-image\"\r\n                                   closeModalOnClickOutside\r\n                                   closeAfterFinish\r\n                                   open={this.state.uppyProfileOpen}\r\n                                   onRequestClose={this.handleClose}\r\n                                   uppy={uppyUploader.uppy}\r\n                                   hideUploadButton={false}\r\n                                   autoOpenFileEditor={false}\r\n                                   plugins={[\"Instagram\", \"GoogleDrive\", \"Url\", \"Webcam\"]}\r\n                                   animateOpenClose={true}\r\n                                   proudlyDisplayPoweredByUppy={false}\r\n                                   inline={false}\r\n                                   showProgressDetails={true}\r\n                                   height={750}\r\n                                   browserBackButtonClose={true}\r\n                                   showRemoveButtonAfterComplete={false}\r\n                            />\r\n                     </div>\r\n              );\r\n       }\r\n}\r\n\r\nexport default EditAside;","import ReactHtmlParser from 'react-html-parser';\r\nimport Rating from '../Rating';\r\n\r\n\r\nconst TextType = ({ content, mediaClass, rating, fontSize, lineCount, size }) => {\r\n  return <div className={`position-relative overflow-hidden ${mediaClass}`} style={{paddingBottom:`${size ? size : '100'}%`}}>\r\n            <div className=\"w-100 f-center flex-column position-absolute start-0 top-0 h-100 p-3\">\r\n              {rating ? \r\n              <div className=\"f-center ps-1 mb-4\">\r\n                <Rating className={'mx-1 fs-3'} iconClass=\"mx-1\" rating={rating} />\r\n              </div> \r\n              : null}\r\n              <div className=\"overflow-hidden\">\r\n                <p className={`text-center line-clamp-${lineCount ? lineCount : 4} line-clamp mb-0 ${!fontSize ?'fs-7':''}`} style={{fontSize:fontSize}}>{ReactHtmlParser(content)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n}\r\nexport default TextType\r\n","import React, { Component } from 'react';\r\nimport TextType from '../../../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../../../CommonComponents/MediaType/VideoType';\r\nimport { getImageWidthHeight } from '../../../../../../utils';\r\n\r\n\r\nclass ModalMedia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1,\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n            mediaSize: { height: 400, width: 400 },\r\n        };\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) {\r\n                this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n            }\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot })\r\n        }\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({\r\n                mediaSize: {\r\n                    height: modalData.mediaHeight,\r\n                    width: modalData.mediaWidth\r\n                }\r\n            })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { modalData, handleAllImageError } = this.props\r\n        const { winWidth, winHeight, mediaSize } = this.state\r\n        const scale = Math.min((winWidth - 450) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n        return (\r\n            modalData.type == 1 ?\r\n                <div className='mx-auto w-100 p-4'>\r\n                    <TextType mediaClass=\"bg-gray-200\" size={120} content={modalData.postcontent} rating={modalData.rating} socialNetworkId={modalData.networkId} fontSize={'calc(14px + .3vw + .3vh)'} lineCount={10} />\r\n                </div>\r\n                :\r\n                <>\r\n                <div className='w-100' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n                    <div className=\"position-relative\" style={{ paddingBottom: `${winWidth > 991 ? paddingBottom : null}%` }}>\r\n                        <div className=\"position-lg-absolute top-0 start-0 w-100 h-100\">\r\n                        {(modalData.type == 2 || modalData.type == 4) ?\r\n                            <ImageType mediaClass={'content_img_'} size={paddingBottom} url={modalData.postFile} height={height} width={width} icon={modalData.networkId} rating={modalData.rating} alt={''} handleAllImageError={handleAllImageError} item={modalData} isCover={true} />\r\n                        :\r\n                        (modalData.type == 3 || modalData.type == 5) ?\r\n                            <VideoType item={modalData} mediaClass={'content_video'} size={paddingBottom} url={modalData.mediaUrl || modalData.mediaFile || modalData.mediaClip || modalData.postFile} poster={modalData.postFile} height={height} width={width} autoPlay={true} muted={false} isCover={true} controls={true} loop={false} isupdate={1} />\r\n                            : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n);\r\n    }\r\n}\r\n\r\nexport default ModalMedia;","import React, { Component, Suspense } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport EditAside from './EditAside';\r\nimport UploadBox from '../../../CommonComponents/Uploads/UploadBox';\r\nimport { editpost, onUpdateTags } from '../../../../../../actions/moderationActions';\r\nimport ModalMedia from '../Elements/ModalMedia';\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { author: '', handle: '', authorImage: '', postImage: '', content: '', tags: '', type: '', mediaUrl: '', mediaWidth: '', mediaHeight: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize);\r\n        const { modalData } = this.props\r\n        this.setState({ author: modalData.name, handle: modalData.username, authorImage: modalData.picture, postImage: modalData.postFile, content: modalData.postcontent, tags: modalData.tags, type: modalData.type, loading: false, mediaUrl: modalData.mediaUrl, mediaWidth: modalData.mediaUrl, mediaHeight: modalData.mediaUrl })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    onChangeAuthor = event => this.setState({ author: event.target.value })\r\n    onChangeHandle = event => this.setState({ handle: event.target.value })\r\n    onChangeAuthorImg = value => this.setState({ authorImage: value })\r\n    onClickRemoveAuthorImg = event => this.setState({ authorImage: \"\" })\r\n    onChangePostImg = value => this.setState({ postImage: value })\r\n    onChangePostType = value => this.setState({ type: 4 })\r\n    onChangeContent = event => this.setState({ content: event.target.value })\r\n    onChangeTag = value => this.setState({ tags: value })\r\n\r\n    handleResize = () => {\r\n        const { modalData } = this.props\r\n        this.setState({\r\n            winWidth: window.innerWidth,\r\n            winHeight: window.innerHeight,\r\n        });\r\n    };\r\n\r\n\r\n    onClickTouploadImage = (value, callBack) => this.setState({ postImage: value }, () => callBack())\r\n\r\n\r\n\r\n    onSavePost = event => {\r\n        const { modalData, handleClose } = this.props\r\n        const { authorImage, postImage, author, content, handle, tags } = this.state;\r\n        this.setState({ loading: true })\r\n\r\n        const postpayload = { datapostFileN: postImage, userPhoto: '', content: content, newTable: 2, spostId: modalData.postId, wallId: localStorage.getItem('wallId'), postId: modalData.id, postauthor: author, posthandle: handle, authorpicture: authorImage, feedId: modalData.feedId }\r\n\r\n        this.props.editpost(postpayload, handleClose);\r\n\r\n\r\n    }\r\n\r\n    onSaveTag = event => {\r\n        const { modalData, handleClose, isTaggModal } = this.props\r\n        this.setState({ loading: true })\r\n\r\n\r\n        const tagPayload = { postId: modalData.id, wallId: String(localStorage.getItem('wallId')), tags: this.state.tags };\r\n        this.props.onUpdateTags(tagPayload, isTaggModal, handleClose)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { modalData, handleClose, isTaggModal, handleAllImageError } = this.props\r\n        const { postImage, tags, loading } = this.state\r\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>{isTaggModal ? 'Add Tag' : 'Edit Post'}</span>   \r\n                <div className='d-flex align-items-center h-100'>\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-wrap\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n                    <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                </div>\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    <EditAside modalData={modalData} onChangeAuthor={this.onChangeAuthor} onChangeHandle={this.onChangeHandle} onChangeAuthorImg={this.onChangeAuthorImg} onChangePostImg={this.onChangePostImg} onChangeContent={this.onChangeContent} onChangeTag={this.onChangeTag} onClickRemoveAuthorImg={this.onClickRemoveAuthorImg} handleClose={handleClose} onSavePost={this.onSavePost} onSaveTag={this.onSaveTag} isTaggModal={isTaggModal} {...this.state} />\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editpost: (payload, callback) => dispatch(editpost(payload, callback)),\r\n        onUpdateTags: (data, isTaggModal, callback) => dispatch(onUpdateTags(data, isTaggModal, callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","import React, { Component, useEffect } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { checkPermission } from \"../../../../../../actions/collaboratorActions\";\r\n\r\nconst Hotspot = (props) => {\r\n\r\n  const { ImageClass, item, enableHotspot, width, height, spotWidth, spotHeight, onControlledDrag, changePrdId, ctaData } = props\r\n  useEffect(() => {\r\n    return\r\n  }, [item.postproduct])\r\n\r\n  return (<div className={`h-100 w-100 ${ImageClass}`}>\r\n    {enableHotspot == 1 && item.postproduct && item.postproduct.length > 0 && spotWidth ?\r\n      item.postproduct.map((Item, index) => {\r\n        let left = (spotWidth * Item.hotspot.left.replace(\"%\", \"\")) / 100;\r\n        let top = (spotHeight * Item.hotspot.top.replace(\"%\", \"\")) / 100;\r\n        return <Draggable bounds=\"parent\" onStop={onControlledDrag} key={`hotspot_${Item.ugc_product}`} onStart={() => changePrdId(Item.ugc_product)} defaultPosition={{ x: left, y: top }} >\r\n          <div className={`h-16px w-16px position-absolute`}>\r\n              <OverlayTrigger placement='top' overlay={<Tooltip data-theme=\"light\">\r\n                <div className=\"text-start\">\r\n                  {Item.product && Item.product.product_title ? Item.product.product_title : ''}\r\n                  {((Item.product.product_discount && Item.product.product_discount > 0) || (Item.product.product_price && Item.product.product_price > 0)) ?\r\n                    <div className=\"fw-bold fs-6\">{Item?.product?.price_currency_symbol}{(Item.product.product_price == Item.product.product_discount ? Item.product.product_price : Item.product.product_discount > 0 ? Item.product.product_discount : Item.product.product_price)}</div> : ''}\r\n                </div>\r\n              </Tooltip>}>\r\n\r\n              <div className={`blob ${ctaData?.hotspot_type == 1 ? 'blob_002' : 'blob_001'}`} style={{ backgroundColor: ctaData?.hotspot_color }}>\r\n                <div className={`f-center fw-medium fs-8`} style={{ color: ctaData?.hotspot_type_color, lineHeight: '20px' }}>\r\n                  {ctaData?.hotspot_type == 1 ? index + 1 : ''}\r\n                </div>\r\n              </div>\r\n\r\n              </OverlayTrigger>\r\n            </div>\r\n        </Draggable>\r\n      }) : ''}\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Hotspot","import React, { Component, Suspense } from 'react';\r\nimport { Modal, Dropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\r\nimport { ENABLE_HOTSPOT_ACTION, REMOVE_TAGGED_PRODUCT_ACTION, UPDATE_HOTSPOT_ACTION } from '../../../../../actions/moderationActions';\r\nimport { getUserInfo_afterChanges } from '../../../../../actions/loginActions';\r\nimport EditPost from './EditElements';\r\nimport Hotspot from './Elements/Hotspot';\r\nimport ModalMedia from './Elements/ModalMedia';\r\n\r\nimport './modal.scss';\r\nimport ErrorFound from '../../../../ErrorFound';\r\nimport { getImageWidthHeight } from '../../../../../utils';\r\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\r\n\r\nconst ContentModalAside = React.lazy(() => import('./Elements/ContentModalAside'));\r\nclass ContentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { spotWidth: 0, spotHeight: 0, searchTag: '', selectedTag: [], productId: 0, enableHotspot: this.props.modalData?.hotspot, loading: false, winWidth: window.innerWidth, winHeight: window.innerHeight, paddingBottom: 100, mediaSize: { height: 400, width: 400 }, editPost: false, isTaggModal: false, }\r\n        this.hotspotRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const hotspotSection = this.hotspotRef.current;\r\n            if (hotspotSection) this.setState({ spotWidth: hotspotSection.clientWidth, spotHeight: hotspotSection.clientHeight });\r\n        }, 100);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.onMediaLoad(this.props.modalData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.modalData !== prevProps.modalData) {\r\n            this.onMediaLoad(this.props.modalData);\r\n            this.setState({ enableHotspot: this.props.modalData?.hotspot })\r\n        }\r\n    }\r\n\r\n    handleResize = () => this.setState({ winWidth: window.innerWidth, winHeight: window.innerHeight, });\r\n    onSaveCallBack = () => this.setState({ enableHotspot: this.props.modalData?.hotspot })\r\n\r\n\r\n    onControlledDrag = (e, position) => {\r\n        const { x, y } = position;\r\n        const { spotWidth, spotHeight, productId } = this.state;\r\n        const { modalData } = this.props;\r\n        let l = x * 100 / spotWidth;\r\n        let t = y * 100 / spotHeight;\r\n        const location_hotspot = { 'left': `${l}%`, 'top': `${t}%` }\r\n        const hostpot = `left:${l}%;top:${t}%;`\r\n        this.props.UPDATE_HOTSPOT_ACTION(productId, modalData?.referenceId, location_hotspot, hostpot)\r\n    };\r\n\r\n\r\n    changeHotspotStatus = (hotspotEnable, referenceId) => {\r\n        let isHotspotEnable = hotspotEnable == 1 ? 0 : 1;\r\n        this.setState({ enableHotspot: isHotspotEnable })\r\n        this.props.ENABLE_HOTSPOT_ACTION(isHotspotEnable, referenceId, this.onSaveCallBack);\r\n    };\r\n\r\n    changePrdId = (id) => this.setState({ productId: id }) \r\n    onSaveCallBack = () => this.setState({ enableHotspot: this.props.modalData.hotspot }) \r\n    responceApi = () => this.setState({ loading: false });\r\n    handleClose = () => this.props.modalCallback(false)\r\n    editPostFun = (status) => this.setState({ editPost: !this.state.editPost, isTaggModal: status })\r\n\r\n\r\n    onMediaLoad = async (modalData) => {\r\n        if (modalData.mediaHeight && modalData.mediaWidth) {\r\n            this.setState({ mediaSize: { height: modalData.mediaHeight, width: modalData.mediaWidth } })\r\n        } else {\r\n            try {\r\n                const { width, height } = await getImageWidthHeight(modalData.newMedia);\r\n                this.setState({ mediaSize: { height: height, width: width } })\r\n            } catch (error) {\r\n                this.setState({ mediaSize: { height: 100, width: 100 } })\r\n            }\r\n        }\r\n    }\r\n    editPostFun = (status) => checkPermission('contentGallery', 'editGallery', true) ? this.setState({ editPost: !this.state.editPost, isTaggModal: status }) : {}\r\n\r\n    render() {\r\n        const { modalToggle, modalData, onRefreshPost, filter, ctaData, postPostUpdate, currentIndex, clickToPin, clickToGetUgc, clickToDeletePost, clickToBlockUser, handleAllImageError } = this.props\r\n        const { spotWidth, spotHeight, enableHotspot, winWidth, winHeight, mediaSize, editPost, isTaggModal } = this.state;\r\n        const scale = Math.min((winWidth - 450) / mediaSize.width, (winHeight - 130) / mediaSize.height);\r\n        const height = mediaSize.height * scale\r\n        const width = mediaSize.width * scale\r\n        const paddingBottom = (height * 100) / width\r\n\r\n        return <Modal size={'full'} show={modalToggle} className=\"assets_modal p-0\" backdrop={false}>\r\n            <Modal.Header className=\"justify-content-between py-0\">\r\n                <span className='text-muted fw-medium'>{editPost ? 'Edit Post' : 'General Info'}</span>\r\n                <div className='d-flex align-items-center h-100'>\r\n                    {!editPost ?\r\n                        <>\r\n                            <div className=\"d-none d-lg-flex h-100\">\r\n                                {\r\n                                    <>\r\n                                        {[18, 2].includes(modalData?.networkId) ?\r\n                                            <Button variant={'secondary'} className={`p-0 f-center border-0 me-3 btn-active-primary flex-shrink-0 refresh_post_media_Popup${modalData.id}`} onClick={() => onRefreshPost(modalData)} style={{ display: 'none' }}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'arrows-rotate'} iconClass={'me-1'} />\r\n                                                Refresh Post\r\n                                            </Button> : null}\r\n                                        {(((modalData.networkId == 3 && modalData.feedFilter == 62) || modalData.networkId == 7 || (modalData.networkId == 18 && (modalData.feedFilter == 24 || modalData.feedFilter == 25 || modalData.feedFilter == 26))) && modalData.ugcstatus == null && modalData.type != 1) ?\r\n                                            <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={clickToGetUgc(modalData)}>\r\n                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1'} />\r\n                                                Get Rights\r\n                                            </Button> : null}\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(true)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'tag'} iconClass={'me-1'} />\r\n                                            Tags\r\n                                        </Button>\r\n                                        <Button variant={'secondary'} className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary flex-shrink-0\" onClick={() => this.editPostFun(false)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'pen'} iconClass={'me-1'} />\r\n                                            Edit Post\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <Dropdown align=\"end\" className=\"f-center position-relative ms-4 h-100\">\r\n                                <Dropdown.Toggle variant=\"secondary\" className=\"p-0 f-center border-0 me-3 text-muted btn-active-primary arrow_disabled h-100\">\r\n                                    <FontAwesomeIcon icon={'ellipsis'} iconClass={'me-1'} />More\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {(modalData.ugcstatus != 1 || modalData.ugcstatus != 2) ?\r\n                                        <Dropdown.Item onClick={clickToDeletePost(modalData, modalData.id, modalData.status, currentIndex, modalData.feedId, modalData.feedFilter)}>\r\n                                            <FontAwesomeIcon type={'solid'} icon={'trash-can'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">Delete Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : null}\r\n                                    <Dropdown.Item onClick={clickToBlockUser(currentIndex, modalData.id, modalData.username, 'grid', localStorage.getItem('wallId'))}>\r\n                                        <FontAwesomeIcon type={'solid'} icon={'ban'} iconClass={'me-1'} />\r\n                                        <span className=\"navi-text\">Block User</span>\r\n                                    </Dropdown.Item>\r\n                                    {modalData.newlink != '' && modalData.newlink != null ?\r\n                                        <Dropdown.Item href={modalData.newlink} target=\"_blank\">\r\n                                            <FontAwesomeIcon type={'solid'} icon={'paper-plane'} iconClass={'me-1'} />\r\n                                            <span className=\"navi-text\">View Post</span>\r\n                                        </Dropdown.Item>\r\n                                        : <></>}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </>\r\n                        : null}\r\n                    <div className='ms-5 d-flex justify-content-end'>\r\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={this.handleClose}></Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 f-center p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-hidden\">\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_left rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex - 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-left'} />\r\n                    </Button>\r\n                    <div className='w-100 position-relative' style={{ maxWidth: winWidth > 991 ? width : null }}>\r\n                        <ModalMedia modalData={modalData} handleAllImageError={handleAllImageError} />\r\n                        {!(modalData.type == 3 || modalData.type == 5) ? <div className=\"position-absolute top-0 start-0 w-100 h-100\" style={{ zIndex: 1 }} ref={this.hotspotRef}>\r\n                            <Suspense fallback={<></>}>\r\n                            <ErrorFound><Hotspot ImageClass={'hotspot-section'} ImageUrl={modalData?.newMedia} spotWidth={spotWidth} spotHeight={spotHeight} enableHotspot={enableHotspot} item={modalData} width={width} height={height} onControlledDrag={this.onControlledDrag} changePrdId={this.changePrdId} imgHeight={modalData?.mediaHeight} imgWidth={modalData?.mediaWidth} ctaData={ctaData} /></ErrorFound>\r\n                            </Suspense>\r\n                        </div> : null}\r\n                    </div>\r\n\r\n                    <Button variant='icon' className=\"assets_modal_arrow_right rounded-circle position-absolute\" onClick={this.props.slideAssets(currentIndex + 1)}>\r\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-right'} />\r\n                    </Button>\r\n\r\n\r\n                </div>\r\n                <div className=\"full_modal_sidebar position-relative\">\r\n                    {editPost ?\r\n                        <EditPost handleClose={() => this.editPostFun(false)} modalData={modalData} filter={filter} isTaggModal={isTaggModal} handleAllImageError={handleAllImageError} />\r\n                        :\r\n                        <Suspense fallback={<></>}>\r\n                            {modalData ? <ContentModalAside modalData={modalData} changeHotspotStatus={this.changeHotspotStatus} enableHotspot={enableHotspot} postPostUpdate={postPostUpdate} key={modalData?.id} modalCallback={this.props.modalCallback} /> : null}\r\n                        </Suspense>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctaData: state.ctaData?.data,\r\n        authorized: state.authorized,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        UPDATE_HOTSPOT_ACTION: (productId, item, referenceId, location_hotspot, hostpot) => dispatch(UPDATE_HOTSPOT_ACTION(productId, item, referenceId, location_hotspot, hostpot)),\r\n        REMOVE_TAGGED_PRODUCT_ACTION: (product_sku, productId, referenceId) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(product_sku, productId, referenceId)),\r\n        ENABLE_HOTSPOT_ACTION: (id, referenceId, callBack) => dispatch(ENABLE_HOTSPOT_ACTION(id, referenceId, callBack)),\r\n        getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModal);","import React, { Component, useEffect, useState } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\r\nimport { ExpiredPostInstaQueue } from '../../../../../actions/moderationActions'\r\nimport { isRefresh } from '../../../../../utils'\r\nclass RefreshPostData extends Component {\r\n    state = {\r\n        isRequest: false\r\n    }\r\n    componentDidMount() {\r\n        const { isRequest } = this.state\r\n        const { item } = this.props\r\n        if (isRefresh(item)) {\r\n            this.setState({ isRequest: true }, () => ExpiredPostInstaQueue(item))\r\n        }\r\n    }\r\n    render() {\r\n        const { refreshPostLoading, onRefreshPost, item } = this.props\r\n        return <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh Post</Tooltip>} >\r\n            <span className={`refresh_post_media_${item.id} me-2 cursor-pointer ${refreshPostLoading ? \"disabled\" : \"\"}`} onClick={() => onRefreshPost(item)} style={{ display: 'none' }}>\r\n                <span className={`refresh-icon-${item.id} d-inline-block`}><FontAwesomeIcon icon={'arrows-rotate'} /></span>\r\n            </span>\r\n        </OverlayTrigger>\r\n    }\r\n}\r\n\r\nexport default RefreshPostData","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'react-html-parser';\r\nimport moment from 'moment';\r\nimport { clickToPostPin, clickToDeletePost, clickToBlockUser, clickToPostStatus, GET_UGC_POST_DETAIL, ugcModal, GET_UGC_REQUEST, UPDATE_INSTA_POST_ACTION } from '../../../../actions/moderationActions'\r\nimport ProductTags from './Elements/TagedProducts'\r\nimport Tags from './Elements/Tags'\r\nimport { TIKTOK_UPDATE_STATUS, GET_NETWORK_ICON, GET_NETWORK_NAME, isRefresh } from '../../../../utils';\r\nimport ChangeOrderModal from './Elements/ChangeOrderModal'\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\r\nimport { OverlayTrigger, Dropdown, Tooltip, Card, Form, Button, Image } from 'react-bootstrap'\r\nimport { baseUrl, ImagePlaceholder } from '../../../../Assets/AssetsHelper';\r\nimport ContentModal from './ContentModal/ContentModal';\r\nimport Masonry from \"react-masonry-component\";\r\nimport Author from '../CommonComponents/Author/Author';\r\nimport TextType from '../CommonComponents/MediaType/TextType';\r\nimport ImageType from '../CommonComponents/MediaType/ImageType';\r\nimport VideoType from '../CommonComponents/MediaType/VideoType';\r\nimport RefreshPostData from './Elements/RefreshPost'\r\nimport Rating from '../CommonComponents/Rating';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\n\r\n\r\n\r\nclass MasonryView extends Component {\r\n    imageQueue = [];\r\n    state = { postID: null, id: null, data: null, itemIndex: null, modalData: null, firstRequest: false, openpinToTopModal: false, showModal: false, currentIndex: null }\r\n\r\n\r\n    clickToPin = (index, postId, status) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostPin(index, postId, status) }\r\n\r\n    clickToGetUgc = (item) => event => {if(checkPermission('contentGallery', 'editGallery', true)) { this.props.getUgcDetails(item); this.openUgcModal() }}\r\n\r\n    clickToDeletePost = (item, index) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToDeletePost(item, index, this.props.navigate)}\r\n\r\n    clickToBlockUser = (index, userName) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToBlockUser(index, userName)}\r\n\r\n    clickToPostStatus = (index, postId, value) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatus(index, postId, value)}\r\n\r\n    onClickToPostTags = (tags) => event => { this.props.searchTagsFilter(tags) }\r\n\r\n    openUgcModal = (data) => { this.props.ugcModal(true) }\r\n\r\n    clickToGetLink = (type, item) => event => {\r\n        this.props.getUgcDetails(item)\r\n        this.props.GET_UGC_REQUEST(item)\r\n        this.props.onShow(type, item.ugcmodified)\r\n    }\r\n\r\n    handleImageError = (e) => {\r\n        const src = e.target.getAttribute(\"data-id\");\r\n        if (!this.imageQueue.includes(src)) {\r\n            this.imageQueue.push(src);\r\n            if (!this.state.firstRequest) this.processImageQueue();\r\n        }\r\n    };\r\n\r\n    processImageQueue = async () => {\r\n        this.setState({ firstRequest: true })\r\n        const src = this.imageQueue[0];\r\n        const imgTarget = document.getElementById(`imgID${src}`);\r\n        if (src) {\r\n            TIKTOK_UPDATE_STATUS(src).then(({ data }) => {\r\n                this.imageQueue.shift();\r\n                if (imgTarget) imgTarget.src = data.media;\r\n                this.processImageQueue()\r\n            })\r\n                .catch((error) => {\r\n                    this.imageQueue.shift();\r\n                    if (imgTarget) imgTarget.src = ImagePlaceholder;\r\n                    this.processImageQueue()\r\n                })\r\n        }\r\n    };\r\n\r\n    onRefreshPost = async (item) => {\r\n        const { UPDATE_INSTA_POST_ACTION } = this.props\r\n        if(checkPermission('contentGallery', 'editGallery', true)) await UPDATE_INSTA_POST_ACTION(item)\r\n\r\n    }\r\n\r\n    handleModalShow = (data, index) =>  {\r\n        this.setState({ showModal: true, modalData: data, currentIndex: index })\r\n    }\r\n\r\n    handleCallback = (dataEvent) => {\r\n        this.setState({\r\n            showModal: dataEvent, modalData: dataEvent ? this.state.modalData : null, currentIndex: null\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.listData !== prevProps.listData) {\r\n            this.setState({ modalData: this.props.listData[this.state.currentIndex] });\r\n        }\r\n    }\r\n\r\n\r\n    slideAssets = (currentIndex) => event => {\r\n        const { listData } = this.props\r\n        if (currentIndex === -1) {\r\n            let count = listData.length - 1\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n        else {\r\n            let count = listData.length == currentIndex ? 0 : currentIndex\r\n            this.setState({ currentIndex: count, modalData: listData[count] });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const PersonalizationUgcRights = 1\r\n        const { total, activeTab, filter, moderation, getUgcDetails, ugcData, ugcPopup, ugcRequestData, onShow, handleAllImageError } = this.props\r\n        const { openpinToTopModal, showModal, modalData } = this.state;\r\n        let selection = filter?.tags.join()\r\n\r\n        return (<div className=\"w-100 mb-4 mb-lg-0\">\r\n            <Masonry className={`row gx-2`} elementType={\"div\"} disableImagesLoaded={false} updateOnEachImageLoad={true} enableResizableChildren > {\r\n                (moderation?.listData && moderation?.listData.length > 0) ? moderation?.listData.map((item, index) => {\r\n                    return (item.status == activeTab || activeTab == 0) ?\r\n                        <div key={`post${index}_${item.id}`} total-items={total} className={`assetsItem`} id={`content_id-${item.id}`} data-post-id={item.id} data-highlight={item.highlight} data-pinned={item.pin} data-created={item.createdAt}>\r\n                            <ErrorFound>\r\n                                <Card className='border-0'>\r\n                                    <Card.Body className=\"p-0\">\r\n                                        <div className=\"f-between p-2\" style={{ boxShadow: '0px 1px 0px rgba(0,0,0,.1)' }}>\r\n                                            <div className=\"d-flex align-items-center list-inline mb-0\" id={`post-actions-${item.id}`}>\r\n                                                <Form.Check className='me-2' checked={item.isChecked} value={item.isChecked} onChange={this.props.clickPostChecked(index)} />\r\n\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Pin to Top</Tooltip>}>\r\n                                                    <span className={`w-18px f-center fs-8 me-2 cursor-pointer ${item.pin ? 'text-primary' : 'text-muted'}`} onClick={this.clickToPin(index, item.postId, item.pin)} data-value={item.pin}>\r\n                                                        <FontAwesomeIcon type={'solid'} icon={'thumbtack'} />\r\n                                                    </span>\r\n                                                </OverlayTrigger>\r\n                                                {(((item.networkId == 3 && item.feedFilter == 62) || (item.networkId == 18 && (item.feedFilter == 24 || item.feedFilter == 25 || item.feedFilter == 26))) && item.ugcstatus == null && item.type != 1 && localStorage.getItem('wallLimitExceed') != 'true') ?\r\n                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Get Rights</Tooltip>}>\r\n                                                        <span className=\"w-18px f-center fs-8 me-2 cursor-pointer\" onClick={() => { if(checkPermission('contentGallery', 'editGallery', true)){getUgcDetails(item); this.openUgcModal()} }}>\r\n                                                            {item.ugcRights == null || item.ugcstatus == 4 ?\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-muted'} />\r\n                                                                : item.ugcstatus == 2 ?\r\n                                                                    <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'text-success'} />\r\n                                                                    : item.ugcstatus == 1 ?\r\n                                                                        <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'text-warning'} />\r\n                                                                        : item.ugcstatus == 3 ?\r\n                                                                            <FontAwesomeIcon type={'solid'} icon={'user-xmark'} iconClass={'text-danger'} />\r\n                                                                            : ''}\r\n                                                        </span>\r\n                                                    </OverlayTrigger>\r\n                                                    : null}\r\n\r\n                                                {[18, 2].includes(item?.networkId) ?\r\n                                                    <RefreshPostData onRefreshPost={this.onRefreshPost} item={item} />\r\n                                                    : null}\r\n                                            </div>\r\n\r\n                                            <Dropdown>\r\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>More Actions</Tooltip>}>\r\n                                                    <Dropdown.Toggle variant='secondary' className=\"arrow_disabled dropdown-toggle border-0 p-0\">\r\n                                                        <FontAwesomeIcon icon={'ellipsis'} />\r\n                                                    </Dropdown.Toggle>\r\n                                                </OverlayTrigger>\r\n                                                <Dropdown.Menu>\r\n                                                    {item.ugcstatus != 1 || item.ugcstatus != 2 ?\r\n                                                        <Dropdown.Item onClick={this.clickToDeletePost(item, index)}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'trash-can'} /></span>\r\n                                                            Delete Post\r\n                                                        </Dropdown.Item> : null}\r\n                                                    <Dropdown.Item onClick={this.clickToBlockUser(index, item.username)} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>\r\n                                                        <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'ban'} /></span>\r\n                                                        Block User\r\n                                                    </Dropdown.Item>\r\n                                                    {item.newlink != '' && item.newlink != null ?\r\n                                                        <Dropdown.Item href={item.newlink} target=\"_blank\">\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'paper-plane'} /></span>\r\n                                                            View Post\r\n                                                        </Dropdown.Item>\r\n                                                        : null}\r\n                                                    {item.pin ?\r\n                                                        <Dropdown.Item onClick={() => this.setState({ openpinToTopModal: true })}>\r\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'right-left'} /></span>\r\n                                                            Change Order\r\n                                                        </Dropdown.Item>\r\n                                                        : ''}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center cursor-pointer flex-column\">\r\n                                            <div className='position-relative w-100'>\r\n                                                <div onClick={()=>localStorage.getItem('wallLimitExceed') != 'true' ? this.handleModalShow(item, index) : {}}>\r\n                                                    {item.type == 1 ?\r\n                                                        <TextType mediaClass={'bg-light'} content={item.postcontent} rating={item.rating} socialNetworkId={item.networkId} />\r\n                                                        :\r\n                                                        (item.type == 2 || item.type == 4) ?\r\n                                                            <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} isCover={true} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} item={item} />\r\n                                                            :\r\n                                                            (item.type == 3 || item.type == 5) ?\r\n                                                                <>{item.mediaClip ?\r\n                                                                    <VideoType item={item} mediaClass={'content_video'} size={false} url={item.mediaClip} poster={item.postFile} height={item.mediaHeight} width={item.mediaWidth} autoPlay={true} muted={true} isCover={true} controls={false} loop={true} />\r\n                                                                    : <ImageType mediaClass={'content_img_'} size={false} url={item.postFile} height={item.mediaHeight} width={item.mediaWidth} icon={item.networkId} rating={item.rating} alt={''} handleAllImageError={handleAllImageError} isCover={true} item={item} />}\r\n                                                                    <div className='position-absolute f-center h-100 w-100 start-0 top-0 text-white' style={{ fontSize: 45 }}>\r\n                                                                        <FontAwesomeIcon icon={'circle-play'} iconClass={'filter-shadow'} />\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null}\r\n                                                </div>\r\n                                                <div className=\"position-absolute w-100 start-0 bottom-0 p-3 w-100\" style={{ overflowX: 'auto', zIndex: 1 }}>\r\n                                                <ErrorFound><ProductTags item={item} openContent={(item, index) => this.handleModalShow(item, index) } index={index} navigate={this.props.navigate}/></ErrorFound>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {(PersonalizationUgcRights == 1) ? (item.ugcstatus == 1 || item.ugcstatus == 2 || item.ugcstatus == 3 || item.ugcstatus == 4) ?\r\n                                                <div className=\"w-100\">\r\n                                                    {item.ugcstatus == 1 ?\r\n                                                        <div onClick={this.clickToGetLink(1, item)} className=\"bg-warning f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-clock'} />\r\n                                                            </span>\r\n                                                            Pending\r\n                                                            {item.ugccreated ?\r\n                                                                <small>\r\n                                                                    ({item.ugccreated ? moment(moment(item.ugcmodified, 'YYYY-MM-DD  HH:mm:ss').utcOffset(0)).fromNow() : null})\r\n                                                                </small>\r\n                                                                : null}\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 2 ?\r\n                                                        <div onClick={this.clickToGetLink(2, item)} className=\"bg-success f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-check'} />\r\n                                                            </span>\r\n                                                            Approved\r\n                                                        </div>\r\n                                                        : null}\r\n                                                    {item.ugcstatus == 3 ?\r\n                                                        <div onClick={this.clickToGetLink(3, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Rejected\r\n                                                        </div>\r\n                                                        : null}\r\n\r\n                                                    {item.ugcstatus == 4 ?\r\n                                                        <div onClick={this.clickToGetLink(4, item)} className=\"bg-danger f-center text-white fw-medium p-1 w-100 fs-9\">\r\n                                                            <span className='me-1'>\r\n                                                                <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\r\n                                                            </span>\r\n                                                            Expired\r\n                                                        </div>\r\n                                                        : null}\r\n                                                </div>\r\n                                                : null\r\n                                                : null}\r\n\r\n                                            {item.ctastatus == 1 && item.buttonText != '' ?\r\n                                                <div className={`d-flex p-2 w-100 grid-cta-status-${item.id}`}>\r\n                                                    <a className=\"btn font-weight-bold text-nowrap w-100\" title={item.buttonText} target=\"_blank\" href={`${item.buttonUrl && item.buttonUrl.includes('http') ? item.buttonUrl : `//${item.buttonUrl}`}`} style={{ backgroundColor: item.ctaButtonColor, color: item.ctaTextColor }} >\r\n                                                        <span>{item.buttonText}</span>\r\n                                                    </a>\r\n                                                </div>\r\n                                                : null}\r\n                                        </div>\r\n                                        {item.rating > 0 && item.type != 1 ? <div className='d-flex justify-content-start p-3 pb-0'>\r\n                                            <Rating className={'fs-5'} iconClass=\"me-1\" rating={item.rating}/>\r\n                                        </div>: null}\r\n                                        <div className=\"p-3\">\r\n                                            <Tags item={item} onClickToPostTags={this.onClickToPostTags} selection={selection} key={item.tags} />\r\n                                            <div className=\"f-between\">\r\n                                                <div className=\"d-flex align-items-center pe-2\" style={{ maxWidth: 'calc(100% - 25px)' }}>\r\n                                                    <div className='d-flex align-items-center overflow-hidden' style={{ maxWidth: '100%' }}>\r\n                                                        <Author imageSize={36}\r\n                                                            symbolClass={'symbol-label fs-5'}\r\n                                                            className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                            name={item.name} profileUrl={item.picture} networkId={item.networkId} />\r\n                                                        <div className=\"d-flex flex-column flex-grow-1 overflow-hidden\">\r\n                                                            {item?.link ?\r\n                                                            <a href={item?.link} target=\"_blank\" className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</a>\r\n                                                            : \r\n                                                            <span className=\"mb-0 text-ellipsis fw-bold text-body\">{item.name}</span>}\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\">@{parse(item.username)}</span>\r\n                                                                <span className=\"h-4px w-4px rounded-circle mx-1 d-flex flex-shrink-0\" style={{ backgroundColor: 'var(--bs-gray-600)' }}></span>\r\n                                                                <span className=\"mb-0 text-ellipsis fs-10 text-muted\"> {moment(new Date(item.createdAt * 1000)).fromNow()}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className=\"d-flex align-items-center h-24px w-24px flex-shrink-0\">\r\n                                                    <Image src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={24} width={24} alt={GET_NETWORK_NAME(item.networkId)} fluid />\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center p-3 border-top\">\r\n                                            {item.status != 3 ? <div className=\"w-50 me-1\">\r\n                                                <Button variant='public' size='sm' onClick={this.clickToPostStatus(index, item.postId, 1)} className={`${item.status == 1 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Public</Button>\r\n                                            </div> : null}\r\n                                            {item.status != 3 ? <div className=\"w-50 ms-1\">\r\n                                                <Button variant='private' size='sm' onClick={this.clickToPostStatus(index, item.postId, 2)} className={`${item.status == 2 ? 'disabled' : ''} w-100`} disabled={localStorage.getItem('wallLimitExceed') == 'true' ? true : false}>Private</Button>\r\n                                            </div> : null}\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </ErrorFound>\r\n                        </div>\r\n                        : null\r\n                }) : null\r\n            }\r\n            </Masonry>\r\n            {modalData ?\r\n                <ContentModal clickToPin={this.clickToPin} clickToGetUgc={this.clickToGetUgc} clickToDeletePost={this.clickToDeletePost} clickToBlockUser={this.clickToBlockUser} modalCallback={this.handleCallback} modalToggle={showModal} modalData={modalData} exportDonwloadMedia={this.exportDonwloadMedia} slideAssets={this.slideAssets} currentIndex={this.state.currentIndex} filter={filter} handleAllImageError={handleAllImageError} onRefreshPost={this.onRefreshPost} />\r\n                : null}\r\n            <ChangeOrderModal openpinToTopModal={openpinToTopModal} closeModalPop={() => this.setState({ openpinToTopModal: false })} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isEditing: state.moderation?.isEditing,\r\n        ugcData: state.moderation?.ugcData,\r\n        ugcPopup: state.moderation?.ugcPopup,\r\n        ugcRequestData: state.moderation?.ugcRequestData,\r\n        moderation: state.moderation,\r\n        limits : state.limitExceed\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickToPostStatus: (index, ptPost, id, value) => dispatch(clickToPostStatus(index, ptPost, id, value)),\r\n        clickToPostPin: (index, postId, status) => dispatch(clickToPostPin(index, postId, status)),\r\n        clickToDeletePost: (item, index, navigate) => dispatch(clickToDeletePost(item, index, navigate)),\r\n        clickToBlockUser: (index, userName) => dispatch(clickToBlockUser(index, userName)),\r\n        getUgcDetails: (data) => dispatch(GET_UGC_POST_DETAIL(data)),\r\n        ugcModal: (state) => dispatch(ugcModal(state)),\r\n        UPDATE_INSTA_POST_ACTION: (obj) => dispatch(UPDATE_INSTA_POST_ACTION(obj)),\r\n        GET_UGC_REQUEST: (data) => dispatch(GET_UGC_REQUEST(data))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MasonryView);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header'\r\nimport { Container } from 'react-bootstrap';\r\nimport { getModeration, updateCheckAll, selectPostUpdate, activeTabActionFilter, dateRangeFilter, clickToPostStatusALL, clickToPostDeleteALL, searchTagsFilter, limitUpdate, onNextNavigateClick, onPrevNavigateClick, onUpdatePage, clickToRefresh, removeAllFilterBody, searchPostFilter, removeCheckAll, updateCheckStatusAll, CLEAR_UGC_REQUEST, CLEAR_UGC_DATA, ugcModal } from '../../../../actions/moderationActions'\r\nimport { IMG_LOAD_AFTER_COMPLETE_LAYOUT, fadeOutEffect } from '../../../../utils'\r\nimport { TOGGLE_ADD_GALLERY } from '../../../../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { getUserInfo_afterChanges } from '../../../../actions/loginActions';\r\nimport withRouter from '../../../routes/WithRouter';\r\nimport './moderation.scss';\r\nimport FilterBody from './Filters';\r\nimport FilterTab from './Filters/filterTab';\r\nimport AddUgcRights from './UgcRights';\r\nimport UgcStatus from './UgcRights/Status';\r\nimport Skeleton from './Elements/Skeleton'\r\nimport MasonryView from './MasonryView'\r\nimport EmptyWithIcon from '../CommonComponents/Empty/EmptyWithIcon';\r\nimport ErrorFound from '../../../ErrorFound';\r\nimport { checkPermission } from '../../../../actions/collaboratorActions';\r\n\r\nclass Moderation extends Component {\r\n  allImageQueue = [];\r\n  state = { total: 0, isCheckAll: false, isCheckedPostCount: 0, perPageCount: 10, activePage: 1, filters: [], allFirstImage: false, statusPopup: 0 }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.moderation.changeModeration_wall !== this.props.moderation.changeModeration_wall && this.props.moderation.changeModeration_wall) this.setState({ activeTab: this.props.moderation?.filter?.status }, this.clickToUncheckAll)\r\n    if (prevProps.wallsLoader !== this.props.wallsLoader) {\r\n      // if (!this.props.wallsLoader && !this.props.moderation?.listData?.length && this.props.moderation?.loding) this.props.getModeration();\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { params } = this.props;\r\n    const currentUrl = window.location.href;\r\n    const newUrl = currentUrl.replace(params?.id, localStorage.getItem('wallId'));\r\n    window.history.pushState(null, '', newUrl);\r\n    window.feedId = params.feedId;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { moderation } = this.props;\r\n    if (window.location.href.includes(\"ob_success\")) this.onBoardingSuccess()\r\n    document.cookie = \"callBackUrl=React\";\r\n    localStorage.removeItem('createFeedObj')\r\n    // if (!moderation.listData.length && moderation.loding) this.props.getModeration();\r\n    this.props.getModeration();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.allImageQueue = [];\r\n    this.props.removeAllFilterBody(true)\r\n  }\r\n\r\n  onBoardingSuccess = () => {\r\n    setTimeout(() => {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: `<strong>You are almost there!</strong>`,\r\n        html: `Tag products to curate a Shoppable Gallery & publish it on your pages.`,\r\n        showCloseButton: true,\r\n        showCancelButton: false,\r\n        focusConfirm: true,\r\n        confirmButtonText: `Got it!`,\r\n        confirmButtonAriaLabel: `Got it!`,\r\n        cancelButtonText: '<i class=\"fa fa-thumbs-down\"></i>',\r\n        cancelButtonAriaLabel: 'Thumbs down'\r\n      }).then(result => {\r\n        if (result.isConfirmed) { this.props.getUserInfo_afterChanges(); this.props.navigate(`/content/moderation/${localStorage.getItem('wallId') ? localStorage.getItem('wallId') : ''}`) }\r\n      })\r\n    }, 1000);\r\n  }\r\n\r\n  clickToCheckAll = event => {\r\n    const { isCheckAll } = this.state;\r\n    this.setState({ isCheckAll: !isCheckAll }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.updateCheckAll(this.state.isCheckAll)\r\n    })\r\n  }\r\n\r\n  clickToCheckStatusAll = (status) => event => {\r\n    this.onActionUpdateOpcity()\r\n    this.props.updateCheckStatusAll(status)\r\n  }\r\n\r\n  clickToUncheckAll = event => {\r\n    this.setState({ isCheckAll: false }, () => {\r\n      this.onActionUpdateOpcity()\r\n      this.props.removeCheckAll(false)\r\n    })\r\n  }\r\n\r\n  clickPostChecked = (index) => event => this.props.selectPostUpdate(index, this.onActionUpdateOpcity())\r\n\r\n  onActionUpdateOpcity = () => {\r\n    const { isCheckAll, isCheckedPostCount } = this.state;\r\n    if (isCheckAll || (isCheckedPostCount > 0)) {\r\n      if (document.getElementsByClassName(\"modSelectNo\") && document.getElementsByClassName(\"modSelectNo\")[0])\r\n        fadeOutEffect(document.getElementsByClassName(\"modSelectNo\")[0])\r\n      if (document.getElementsByClassName(\"filter-bar\") && document.getElementsByClassName(\"filter-bar\")[0]) fadeOutEffect(document.getElementsByClassName(\"filter-bar\")[0])\r\n    }\r\n  }\r\n\r\n  clickToTab = (activeTab) => event => this.props.activeTabActionFilter(activeTab)\r\n\r\n  onDateRangeFilter = (startDate, endDate) => this.props.dateRangeFilter(startDate, endDate)\r\n\r\n  onClickToFilterUpdateStatus = (status) => event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostStatusALL(status)}\r\n  onClickToFilterDeleteAll = event => {if(checkPermission('contentGallery', 'editGallery', true)) this.props.clickToPostDeleteALL(this.props.navigate)}\r\n  onClickNextPage = event => this.props.onNextNavigateClick()\r\n  onClickPrevPage = event => this.props.onPrevNavigateClick()\r\n  onChangePage = (page) => event => { this.props.onUpdatePage(page) }\r\n\r\n\r\n  onClickReset = (item) => {\r\n    let tempFilter = this.state.filters.filter(i => i.key === item.key)\r\n    tempFilter = tempFilter.filter((it) => {\r\n      if ([\"postType\", \"socialFeed\", \"other\"].includes(it.key))\r\n        return it.value.filter((j) => !item.value.includes(j));\r\n    });\r\n    this.setState({ filters: tempFilter }, () => this.props.clickToRefresh())\r\n  }\r\n\r\n  onClickAllReset = event => {\r\n    this.setState({ filters: [] }, () => this.props.getModeration())\r\n  }\r\n\r\n\r\n  handleAllImageError = (e) => {\r\n    try {\r\n      const src = e.target.getAttribute(\"data-id\");\r\n      if (!this.allImageQueue.some(item => item.src === src)) {\r\n        this.allImageQueue.push({ src, e });\r\n      }\r\n      if (!this.state.allFirstImage) {\r\n        this.processAllImageQueue();\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  processAllImageQueue = async () => {\r\n    const queue = this.allImageQueue;\r\n    if (queue.length && !this.state.allFirstImage) {\r\n      this.setState({ allFirstImage: true });\r\n      this.processNextImage();\r\n    }\r\n  };\r\n\r\n  processNextImage = () => {\r\n    try {\r\n      const { src, e } = this.allImageQueue[0];\r\n      if (src) {\r\n        IMG_LOAD_AFTER_COMPLETE_LAYOUT(e, this.nextProcessAllImageQueue);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  nextProcessAllImageQueue = () => {\r\n    try {\r\n      this.allImageQueue.shift();\r\n      if (this.allImageQueue.length) {\r\n        this.processNextImage();\r\n      } else {\r\n        this.setState({ allFirstImage: false });\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  openugcModel = () => this.props.ugcModal(true)\r\n  onShow = (id) => this.setState({ statusPopup: id })\r\n\r\n  render() {\r\n    const { isCheckAll, perPageCount, activePage, filters } = this.state;\r\n    const { moderation, searchTagsFilter, limitUpdate, loader, clickToRefresh, ugcModal, clearUgcData, removeAllFilterBody, searchPostFilter, allWalls, wallsLoader, feeds, ugcData, ugcPopup, CLEAR_UGC_REQUEST_DATA, navigate } = this.props;\r\n    return (\r\n      !wallsLoader && !(allWalls && allWalls.length > 0) ?\r\n        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n          <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Create a Gallery, to add feed! ⌛'} desc={'Oops! Looks like you have deleted your gallery, create one by simply clicking on the button below.'} icon={'media'} button={{ action: () => checkPermission('contentGallery', 'createGallery', true) ? this.props.TOGGLE_ADD_GALLERY(true) : {}, text: 'Create Gallery' }} isFullScreen={false} />\r\n        </div>\r\n        :\r\n        <div className=\"d-flex flex-column flex-column-fluid full-content moderation__\">\r\n          <Header clickToCheckAll={this.clickToCheckStatusAll} clickToUncheckAll={this.clickToUncheckAll} isCheckAll={isCheckAll} isCheckedPostCount={moderation?.isCheckedPostCount} searchPostFilter={searchPostFilter} onClickToViewFilter={this.onClickToViewFilter} total={moderation?.total} perPageCount={perPageCount} activePage={activePage} moderation={moderation} clickToTab={this.clickToTab} onDateRangeFilter={this.onDateRangeFilter} onClickToFilterUpdateStatus={this.onClickToFilterUpdateStatus} onClickToFilterDeleteAll={this.onClickToFilterDeleteAll} searchTagsFilter={searchTagsFilter} limitUpdate={limitUpdate} onNextNavigateClick={this.onClickNextPage} onPrevNavigateClick={this.onClickPrevPage} onChangePage={this.onChangePage} onAppliedFilter={this.onAppliedFilter} clickToRefresh={clickToRefresh} activeTab={moderation?.filter?.status} key={moderation?.filter?.status} />\r\n\r\n          <Container fluid className='position-relative pt-10'>\r\n            <FilterBody {...this.props} filterBody={moderation.filterBody} />\r\n            <FilterTab  {...this.props} filterBody={moderation.filterBody} />\r\n            <UgcStatus {...this.props} statusPopup={this.state.statusPopup} onHide={() => { this.setState({ statusPopup: 0 }); CLEAR_UGC_REQUEST_DATA() }} openugcModel={this.openugcModel} />\r\n\r\n            {moderation?.total == 0 && !moderation?.loding ?\r\n              <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 182px)' }}>\r\n                <EmptyWithIcon title={feeds && feeds.length ? 'No Posts!' : 'Whoops! You have not created a feed! ⌛'} desc={''} icon={'media'} button={{ action: () => checkPermission('networkManager', 'manageFeed', true) ? navigate(`/content/addfeed/${localStorage.getItem('wallId')}`) : {}, text: 'Create feed' }} isFullScreen={false} />\r\n              </div>\r\n              :\r\n              <div className=\"moderation_card tab-content pb-10 pb-lg-0 h-100\">\r\n                {loader.filterLoader ? <Skeleton {...this.props} /> : <ErrorFound><MasonryView clickPostChecked={this.clickPostChecked}  {...moderation} removeAllFilterBody={removeAllFilterBody} activeTab={moderation?.filter?.status} searchTagsFilter={searchTagsFilter} onAppliedFilter={this.onAppliedFilter} handleAllImageError={this.handleAllImageError} filters={filters} onClickAllReset={this.onClickAllReset} onClickReset={this.onClickReset} onShow={this.onShow} navigate={navigate}/></ErrorFound>}\r\n              </div>}\r\n\r\n            {ugcPopup && ugcData && ugcData.template && ugcData.template.length ? <ErrorFound><AddUgcRights ugcData={ugcData} hideUgc={() => { ugcModal(false); clearUgcData() }} /></ErrorFound> : ''}\r\n          </Container>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    moderation: state.moderation,\r\n    loader: state.loader,\r\n    ctaData: state.ctaData?.data,\r\n    allFont: state.allFont,\r\n    showAddFeed: state.modalReducer?.showAddFeed,\r\n    showManageFeed: state.modalReducer?.showManageFeed,\r\n    showCta: state.modalReducer?.showCta,\r\n    wallsLoader: state.dashboardData?.wallsLoader,\r\n    addGalleryNow: state.dashboardData?.addGalleryNow,\r\n    ctaData: state.ctaData?.data,\r\n    ugcData: state.moderation?.ugcData,\r\n    ugcPopup: state.moderation?.ugcPopup,\r\n    ugcRequestData: state.moderation?.ugcRequestData,\r\n    feeds: state.manageFeeds?.feeds,\r\n    allWalls: state.dashboardData?.dashboarddata?.allWalls,\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getModeration: (callback) => dispatch(getModeration(callback)),\r\n    activeTabActionFilter: (status) => dispatch(activeTabActionFilter(status)),\r\n    updateCheckAll: (status) => dispatch(updateCheckAll(status)),\r\n    selectPostUpdate: (index, callBack) => dispatch(selectPostUpdate(index, callBack)),\r\n    dateRangeFilter: (startDate, endDate) => dispatch(dateRangeFilter(startDate, endDate)),\r\n    clickToPostStatusALL: (status) => dispatch(clickToPostStatusALL(status)),\r\n    clickToPostDeleteALL: (navigate) => dispatch(clickToPostDeleteALL(navigate)),\r\n    searchTagsFilter: (searchTags) => dispatch(searchTagsFilter(searchTags)),\r\n    searchPostFilter: (searchPost) => dispatch(searchPostFilter(searchPost)),\r\n    limitUpdate: (limit) => dispatch(limitUpdate(limit)),\r\n    onNextNavigateClick: () => dispatch(onNextNavigateClick()),\r\n    onPrevNavigateClick: () => dispatch(onPrevNavigateClick()),\r\n    onUpdatePage: (page) => dispatch(onUpdatePage(page)),\r\n    clickToRefresh: () => dispatch(clickToRefresh()),\r\n    removeAllFilterBody: (status) => dispatch(removeAllFilterBody(status)),\r\n    removeCheckAll: (data) => dispatch(removeCheckAll(data)),\r\n    updateCheckStatusAll: (data) => dispatch(updateCheckStatusAll(data)),\r\n    TOGGLE_ADD_GALLERY: (status) => dispatch({ type: TOGGLE_ADD_GALLERY, payload: status }),\r\n    getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\r\n    ugcModal: (state) => dispatch(ugcModal(state)),\r\n    clearUgcData: () => dispatch(CLEAR_UGC_DATA()),\r\n    CLEAR_UGC_REQUEST_DATA: () => dispatch(CLEAR_UGC_REQUEST()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(withRouter(Moderation)));\r\n"],"names":["_ref","rating","className","iconClass","_jsx","children","generateRandomArray","map","rate","index","FontAwesomeIcon","type","icon","QuickSearch","Component","constructor","arguments","state","tagSearchList","searchPost","selected","openSearch","onLoad","this","length","autoCompleteSearch","then","response","responseData","totalTag","responseCode","data","setState","onSearchText","text","onClickToSearchTags","selectSearch","event","props","searchTagsFilter","onClickToSearchPost","String","searchPostFilter","render","_jsxs","_Fragment","Button","variant","size","onClick","Dropdown","show","style","display","InputGroup","id","Form","Control","minHeight","placeholder","value","onChange","e","target","autoComplete","Menu","overflowY","item","Item","maxDate","handleOnApply","startDate","endDate","DateRangePicker","onApply","initialSettings","locale","format","separator","showDropdowns","ranges","Today","moment","Yesterday","subtract","startOf","endOf","DateRange","picker","onDateRangeFilter","componentWillReceiveProps","nextProps","moderation","Object","keys","filter","filterBody","dateRanges","DateRanges","uuidv4","withRouter","checkPermission","navigate","localStorage","getItem","onNextNavigateClick","onPrevNavigateClick","onChangePage","paginateData","currentPage","pages","pagesIndex","parseInt","totalPages","onHide","Modal","centered","Body","Image","src","baseUrl","height","width","fluid","maxWidth","Link","to","addStatus","setAddTag","useState","selectedEntry","selectedEntryFun","label","permissionError","setPermissionError","ugcError","setUgcError","showGetRight","setShowGetRight","fromSnapup","setFromSnapup","activeTab","dispatch","useDispatch","useEffect","checkGetRight","check_uncheck_all","flag","post","ugcstatus","networkId","feedFilter","Container","Check","clickToCheckAll","status","checked","OverlayTrigger","placement","overlay","Tooltip","clickToRefresh","onClickToFilterUpdateStatus","onClickToFilterDeleteAll","getRights","userId","username","GET_UGC_POST_DETAIL","is_carausel","postId","ugcModal","Select","classNamePrefix","isSearchable","options","updateLimit","limitUpdate","ModerationPagination","PermissionError","ErrorModal","isLoaded","details","totalpost","publicpost","privatepost","tabName","TabTotal","upcomingpost","Nav","padding","eventKey","clickToTab","disabled","Badge","bg","Toggle","NavDropdown","Filters","ModSubHeader","PostTagSearch","searchData","loading","textSearch","textInput","onClickToSearch","removeFilterPostTags","push","updateFilterPostTags","postTags","autocomplete","Text","sItem","isChecked","includes","PostTypeCheck","onClickPostType","selecteds","postType","fin","OtherInput","_ref2","onClickOther","other","key","FilterBody","super","toogleFilter","isActiveAside","setTimeout","offcanvas","document","querySelector","classList","add","onSelectFeeds","removeFilterSocialFeeds","updateFilterSocialFeeds","removeFilterPostType","updateFilterPostType","removeFilterOthers","updateFilterOthers","socialFeeds","feeds","bind","componentDidMount","addEventListeners","window","feedId","name","componentDidUpdate","filterAside","getElementById","addEventListener","_moderation$filterBod","UserRuleEnableAI","Offcanvas","Accordion","flush","defaultactivekey","Header","socialFeed","Label","htmlFor","filterId","marginTop","GET_NETWORK_ICON","parse","removeAllFilterBody","connect","_state$manageFeeds","manageFeeds","FilterTab","onClickRemovePostTags","onClickToDateRangeRemove","removeDateRanges","filters","onClickReset","HtmlParser","CardPreview","handleThumbs","mainRef","current","go","React","ugcData","Splide","hasTrack","arrows","SplideTrack","SplideSlide","ImageType","mediaClass","url","postFile","alt","isCover","Author","imageSize","symbolClass","profileUrl","picture","GET_NETWORK_NAME","ShowMoreContent","classes","content","idIndex","line","copyUrl","openSteps","copied","hash","accountDetails","postUrl","sendRequest","onRaiseRequest","setUserName","copyText","custom_msg","requestMode","postLink","link","JSON","stringify","config","method","TINY_URL","headers","axios","tinyRequest","tiny_url","catch","ex","navigator","clipboard","writeText","bitlyurl","raiseReq","open","location","replace","HOST_URL","TOAST_ERROR","setStep","isRequesting","Group","as","maxLength","cols","rows","CreateTemplate","uppyUploader","UppyUpload","uppyUploaderPdf","postauthor","posthandle","authorpicture","postcarousel","modalOpen","createTemplate","brandFilename","editData","client_logo","selectedBrand","client_logo_name","selectedBrandFile","tncFilename","custom_terms","selectedtnc","custom_terms_name","selectedtncFile","selectedTemplate","acceptTnc","logoError","tncError","templateName","custom_message","tncerrorMsg","nameerrorMsg","msgerrorMsg","onClickToOpenBrand","brandModalOpen","$","click","uppy","cancelAll","onClickToCloseBrand","onClickToOpenTnc","tncModalOpen","onClickToCloseTnc","removeBrandLogo","removeTnc","onSaveTemplate","obj","owner","edit","ADD_UGC_TEMPLATE","onAddNewTemplate","on","stepName","result","TEMP_URL","ext","saveTemplate","closeButton","Title","WASABI_PATH","UGC_UPLOAD_URL","load","Footer","DashboardModal","animateOpenClose","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestCloseModal","closeAfterFinish","doneButtonHandler","plugins","callback","GeneralRequest","isEdit","onCreateTemplate","getSelectedTemplate","onTemplateChange","onHideTemplate","setItem","template","t","onNextStep","onUpdateTemplate","setTncError","tmp","setCustom_msg","setSelectedTemplate","onTemplateRemove","deleteTemplate","onTemplateEdit","setBrand_link","setTermslink","setTermstype","brand_link","console","log","_this$getSelectedTemp","_this$getSelectedTemp2","_this$getSelectedTemp3","_this$getSelectedTemp4","_this$getSelectedTemp5","_this$getSelectedTemp6","_this$getSelectedTemp7","_this$getSelectedTemp8","_this$getSelectedTemp9","_this$getSelectedTemp10","setAcceptTnc","hideUgc","onSelect","download","href","rel","DELETE_UGC_TEMPLATE","channel","BroadcastChannel","SAccounts","socialAccount","authorName","authorAvatar","errorMsg","otherAc","accountList","selectedPersonalAccount","handleMessage","async","code","origin","getTwitterAuth","filterAccountData","addAccountFromId","TAGGSHOP_SOCIAL_ACCOUNT_DATA","error","_socialAccountsData$a","socialAccountsData","allAcc","accountInformations","forEach","acc","Network","ConnectedAccounts","value2","accountName","unshift","id_str","profilePicture","color","description","_allAcc$","nextStep","_JSON$parse","cookie","Application","reInit","componentWillUnmount","removeItem","removeEventListener","_selectedPersonalAcco","_selectedPersonalAcco2","_selectedPersonalAcco3","_selectedPersonalAcco4","minWidth","_acc$ConnectedAccount","_acc$ConnectedAccount2","showAddAccounntAlert","getCookieData","withCookies","cookies","setCookie","useCookies","navigation","useNavigate","useSelector","userAccountData","socialAccounts","ChooseMethod","setRequestMode","Input","ugcTabKey","setUgcTabKey","step","isAccount","setIsAccount","userName","termslink","termstype","setIsRequesting","getPostIds","unique_code","postIds","referenceId","join","_tempSelected","_tempSelected2","_tempSelected3","findIndex","tempSelected","selectedImage","selectedVideo","selectedUsername","handle","bitlylink","rightsVia","hashtag","networkPostId","wallId","client","SEND_UGC","backdrop","ErrorFound","_tempSelected4","_tempSelected5","_tempSelected6","_tempSelected7","_tempSelected8","_tempSelected9","SocialAccounts","CopyUrl","UgcModalApproved","onDownloadMedia","saveAs","mediaUrl","ugcRequestData","userAgent","HTMLReactParser","userIP","userLocation","actionTime","utcOffset","timezone","custom_term_type","DOWNLOAD_CERTIFICATE","ugcid","comment","RadialChart","days","ago","series","chart","plotOptions","radialBar","hollow","margin","dataLabels","showOn","fontWeight","fontSize","offsetY","track","background","strokeWidth","fontFamily","total","colors","stroke","lineCap","prevProps","ReactApexChart","Pending","getNewdata","diff","ugccreated","COPY_TO_CLIPBOARD","RejectModal","openugcModel","statusPopup","Pendingng","ApprovedModal","ModerationSkeleton","_","Card","paddingBottom","ProductTags","removeTaggProduct","product_sku","productId","REMOVE_TAGGED_PRODUCT_ACTION","listView","openContent","postproduct","Row","_item$product","Col","xs","product","product_image","top","right","post_id","Tags","handleShowMore","prevState","visibleCount","items","handleShowLess","tags","split","visibleItems","slice","onClickToPostTags","ChangeOrderModal","reArrangePosts","newArray","updateOrder","indexing","spinner","GET_REORDER_PIN_TO_TOP","onLoadData","pinToTop","onDragEnd","openpinToTopModal","GET_PIN_TO_TOP_LIST","destination","reorder","list","startIndex","endIndex","Array","from","removed","splice","source","_this$state$items","closeModalPop","DragDropContext","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","Draggable","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","zIndex","newMedia","postname","postcontent","getItemStyle","Loader","_state$moderation","GET_LIST_ALL_PIN_TO_TOP_POST","calback","EditAside","getTagsArray","_this$props","submitTags","tag","trim","tagString","isLoading","formattedTags","charAt","toUpperCase","selectedOption","handleSelectChange","_e$value","onChangeTag","onClickToRemoveTag","handleOpen","uppyProfileOpen","handleSave","author","onSavePost","isValidNewOption","inputValue","profile","onChangeAuthorImg","onChangeAuthor","onChangeHandle","onChangeContent","onClickRemoveAuthorImg","authorImage","onSaveTag","handleClose","isTaggModal","GET_FIRST_LETTER","CreatableSelect","isClearable","onInputChange","tagsArrayFun","removeIndex","toString","closeModalOnClickOutside","onRequestClose","hideUploadButton","autoOpenFileEditor","lineCount","Rating","ReactHtmlParser","ModalMedia","handleResize","modalData","winWidth","innerWidth","winHeight","innerHeight","onMediaLoad","mediaHeight","mediaWidth","mediaSize","getImageWidthHeight","count","hotspotRef","hotspotSection","spotWidth","clientWidth","spotHeight","clientHeight","_this$props$modalData","enableHotspot","hotspot","handleAllImageError","scale","Math","min","TextType","socialNetworkId","VideoType","mediaFile","mediaClip","poster","autoPlay","muted","controls","loop","isupdate","ContentModal","onChangePostImg","postImage","onChangePostType","onClickTouploadImage","callBack","postpayload","datapostFileN","userPhoto","newTable","spostId","editpost","tagPayload","onUpdateTags","_state$ctaData","ctaData","authorized","payload","ImageClass","onControlledDrag","changePrdId","_Item$product","left","bounds","onStop","onStart","ugc_product","defaultPosition","x","y","product_title","product_discount","product_price","price_currency_symbol","hotspot_type","backgroundColor","hotspot_color","hotspot_type_color","lineHeight","ContentModalAside","_this$props$modalData2","onSaveCallBack","position","l","location_hotspot","hostpot","UPDATE_HOTSPOT_ACTION","changeHotspotStatus","hotspotEnable","isHotspotEnable","ENABLE_HOTSPOT_ACTION","responceApi","modalCallback","editPostFun","editPost","searchTag","selectedTag","_this$props$modalData3","modalToggle","onRefreshPost","postPostUpdate","currentIndex","clickToPin","clickToGetUgc","clickToDeletePost","clickToBlockUser","align","newlink","slideAssets","Suspense","fallback","Hotspot","ImageUrl","imgHeight","imgWidth","EditPost","getUserInfo_afterChanges","RefreshPostData","isRequest","isRefresh","ExpiredPostInstaQueue","refreshPostLoading","MasonryView","imageQueue","postID","itemIndex","firstRequest","showModal","clickToPostPin","getUgcDetails","openUgcModal","clickToPostStatus","clickToGetLink","GET_UGC_REQUEST","onShow","ugcmodified","handleImageError","getAttribute","processImageQueue","imgTarget","TIKTOK_UPDATE_STATUS","shift","media","ImagePlaceholder","UPDATE_INSTA_POST_ACTION","handleModalShow","handleCallback","dataEvent","listData","ugcPopup","selection","Masonry","elementType","disableImagesLoaded","updateOnEachImageLoad","enableResizableChildren","highlight","pin","createdAt","boxShadow","clickPostChecked","ugcRights","overflowX","fromNow","ctastatus","buttonText","title","buttonUrl","ctaButtonColor","ctaTextColor","Date","exportDonwloadMedia","_state$moderation2","_state$moderation3","_state$moderation4","isEditing","limits","limitExceed","ptPost","Moderation","allImageQueue","isCheckAll","isCheckedPostCount","perPageCount","activePage","allFirstImage","onBoardingSuccess","Swal","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","isConfirmed","onActionUpdateOpcity","updateCheckAll","clickToCheckStatusAll","updateCheckStatusAll","clickToUncheckAll","removeCheckAll","selectPostUpdate","getElementsByClassName","fadeOutEffect","activeTabActionFilter","dateRangeFilter","clickToPostStatusALL","clickToPostDeleteALL","onClickNextPage","onClickPrevPage","page","onUpdatePage","tempFilter","i","it","j","onClickAllReset","getModeration","some","processAllImageQueue","processNextImage","IMG_LOAD_AFTER_COMPLETE_LAYOUT","nextProcessAllImageQueue","_this$props$moderatio","_this$props$moderatio2","changeModeration_wall","wallsLoader","componentWillMount","params","newUrl","history","pushState","_moderation$filter","_moderation$filter2","_moderation$filter3","loader","clearUgcData","allWalls","CLEAR_UGC_REQUEST_DATA","onClickToViewFilter","onAppliedFilter","UgcStatus","loding","filterLoader","Skeleton","EmptyWithIcon","desc","button","action","isFullScreen","AddUgcRights","TOGGLE_ADD_GALLERY","_state$modalReducer","_state$modalReducer2","_state$modalReducer3","_state$dashboardData","_state$dashboardData2","_state$ctaData2","_state$dashboardData3","_state$dashboardData4","allFont","showAddFeed","modalReducer","showManageFeed","showCta","dashboardData","addGalleryNow","dashboarddata","searchTags","limit","CLEAR_UGC_DATA","CLEAR_UGC_REQUEST"],"sourceRoot":""}