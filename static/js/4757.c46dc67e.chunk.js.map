{"version":3,"file":"static/js/4757.c46dc67e.chunk.js","mappings":"gOAQA,MAAMA,EAAa,IAAIC,gBACjBC,EAAU,IAAIC,iBAAiB,WA2CrC,EA1CqBC,KACjB,MAAMC,GAASC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAcC,EAAAA,EAAAA,WAAS,GAEhCC,EAAgBC,UAClB,IACI,MAAMC,EAAWC,KAAKC,MAAMC,EAAMC,OAC5B,KAAEC,GAASL,EACXM,EAAYC,aAAaC,QAAQ,aACjCC,EAAOF,aAAaC,QAAQ,mBAC9BL,EAAMO,OAAOC,SAAS,eAAiBR,EAAMO,OAAOC,SAAS,eAClD,kBAARF,GACKJ,SAAYO,EAAAA,EAAAA,IAAiBC,SAASP,GAAYD,GAAM,IAAMZ,GAASqB,EAAAA,EAAAA,IAA6BvB,EAAOwB,GAAInB,MAAc,EAG7I,CAAE,MAAOoB,GAET,GAoBJ,OAjBAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAShC,EAAWgC,OAQ1B,OAPAC,OAAOC,iBAAiB,UAAWtB,EAAe,CAAEoB,WACpD9B,EAAQgC,iBAAiB,UAAWtB,GACpCL,GAASqB,EAAAA,EAAAA,IAA6BvB,EAAOwB,GAAInB,IACjDW,aAAac,QAAQ,eAAgB9B,EAAOwB,IAC5CR,aAAac,QAAQ,UAAW9B,EAAOwB,IACvCR,aAAac,QAAQ,gBAAgB,GACrCd,aAAac,QAAQ,eAAgBF,OAAOG,SAASC,SAASC,QAAQ,MAAO,KACtE,KACHL,OAAOM,oBAAoB,UAAW3B,EAAe,CAAEoB,WACvD9B,EAAQqC,oBAAoB,UAAW3B,GACvCZ,EAAWwC,QACXtC,EAAQuC,OAAO,CAClB,GACF,IAEIhC,GAAUiC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAAKD,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAACC,WAAW,GAAO,C,4FC1ClE,MA+BA,EA/B2BC,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRC,EAAS,QACTC,EAAO,SACPC,EAAQ,WACRC,EAAU,MACVC,EAAK,KACLC,EAAI,QACJC,EAAO,WACPC,KACGC,GACJX,EACC,MAAMY,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAGG,KAAqBH,IAAWD,GAAQ,GAAGI,KAAqBJ,IAAQJ,GAAW,GAAGQ,KAAwC,kBAAZR,EAAuB,WAAWA,IAAY,YAAaC,GAAY,GAAGO,aAA8BN,GAAc,GAAGM,eAAgCL,GAAS,GAAGK,WACxVI,GAAqBrB,EAAAA,EAAAA,KAAK,QAAS,IACpCgB,EACHR,UAAWW,EACXb,IAAKA,IAEP,GAAIS,EAAY,CACd,IAAIO,EAAkB,GAAGL,eAIzB,MAH0B,kBAAfF,IACTO,EAAkB,GAAGA,KAAmBP,MAEtBf,EAAAA,EAAAA,KAAK,MAAO,CAC9BQ,UAAWc,EACXC,SAAUF,GAEd,CACA,OAAOA,CAAK,G","sources":["app/Layout/Main/SocialAccount/ShareAccount.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../actions/sceneActions\";\r\nimport { addAccountFromId } from \"../../../../utils/addAccount\";\r\nimport { Loader } from \"../CommonComponents/Loader\";\r\nimport SocialAccount from \"./SocialAccount\";\r\n\r\nconst controller = new AbortController();\r\nconst channel = new BroadcastChannel('connect');\r\nconst ShareAccount = () => {\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    const handleMessage = async(event) => {\r\n        try {\r\n            const response = JSON.parse(event.data);\r\n            const { code } = response;\r\n            const networkId = localStorage.getItem('networkId');\r\n            const type = localStorage.getItem('connectionType');\r\n            if (event.origin.includes(\"tagshop.ai\") || event.origin.includes(\"localhost\")) {\r\n                if(type == 'connectAccount'){\r\n                    if (code) await addAccountFromId(parseInt(networkId), code, () => dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(params.id, setLoading)), true);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            \r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const signal = controller.signal;\r\n        window.addEventListener(\"message\", handleMessage, { signal });\r\n        channel.addEventListener(\"message\", handleMessage);\r\n        dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA(params.id, setLoading))\r\n        localStorage.setItem('shared_token', params.id)\r\n        localStorage.setItem('ownerId', params.id)\r\n        localStorage.setItem('shareAccount', true)\r\n        localStorage.setItem('url_redirect', window.location.pathname.replace('/v2', ''))\r\n        return () => {\r\n            window.removeEventListener(\"message\", handleMessage, { signal });\r\n            channel.removeEventListener(\"message\", handleMessage);\r\n            controller.abort();\r\n            channel.close();\r\n        }\r\n    }, [])\r\n\r\n    return loading ? <Loader/> : <SocialAccount isSharing={true}/>\r\n    \r\n}\r\n\r\nexport default ShareAccount","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["controller","AbortController","channel","BroadcastChannel","ShareAccount","params","useParams","dispatch","useDispatch","loading","setLoading","useState","handleMessage","async","response","JSON","parse","event","data","code","networkId","localStorage","getItem","type","origin","includes","addAccountFromId","parseInt","TAGGSHOP_SOCIAL_ACCOUNT_DATA","id","error","useEffect","signal","window","addEventListener","setItem","location","pathname","replace","removeEventListener","abort","close","_jsx","Loader","SocialAccount","isSharing","React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","children"],"sourceRoot":""}