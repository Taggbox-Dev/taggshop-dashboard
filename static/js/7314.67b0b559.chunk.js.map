{"version":3,"file":"static/js/7314.67b0b559.chunk.js","mappings":"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","sources":["actions/initActions.js","actions/socketClient.js","app/Layout/Main/PricePlan/SignUpPricePlan.js"],"sourcesContent":["import axios from 'axios';\r\nimport HttpClient from \"./http-client\";\r\nimport { GET_INIT_PRODUCT, SIGN_UP_VERIFICATION, CREATE_WALL, EXTRA_DATA_UPDATE, BASE_URL } from './api'\r\nimport { USER_TOKEN, USER_AUTHENTICATED } from '../reducer/keys';\r\nimport Swal from 'sweetalert2';\r\nimport { TOAST_ERROR } from '../utils';\r\n\r\n\r\nexport const getInItProduct = () => {\r\n    return new HttpClient().get(GET_INIT_PRODUCT)\r\n}\r\n\r\nexport const UPDATE_EXTRA_DATA = (postData) => {\r\n    // return new HttpClient().post(EXTRA_DATA_UPDATE , postData)\r\n}\r\n\r\n\r\nexport const createWall = (shopOnBio = null) => {\r\n    const url = shopOnBio ? `${CREATE_WALL}?slug=${shopOnBio}` : CREATE_WALL\r\n    return new HttpClient().get(url)\r\n}\r\n\r\nexport const signUpVerified = (token, history, callback) => {\r\n    return (dispatch) => {\r\n        new HttpClient().post(`${SIGN_UP_VERIFICATION}/${token}`).then((response) => {\r\n            const { responseData, response_code, response_message, user } = response.data\r\n\r\n            if (responseData?.promotor_key) {\r\n                Object.keys(responseData.promotor_key).forEach(key => {\r\n                    document.cookie = `${key}=${responseData.promotor_key[key]};`;\r\n                });\r\n            }\r\n\r\n            if (responseData.user && Object.keys(responseData.user).length > 0) {\r\n                callback(responseData.user.id);\r\n            }\r\n\r\n            if (response_code == 200) {\r\n                localStorage.setItem('steps', '1');\r\n                dispatch({ type: USER_TOKEN, payload: responseData });\r\n                localStorage.setItem('token', responseData.token);\r\n                if (responseData?.user?.emailId) localStorage.setItem('emailId', responseData?.user?.emailId);\r\n                history('/accounts/price')\r\n            }\r\n            else if (response_code == 201) {\r\n                Swal.fire({\r\n                    title: response_message,\r\n                    icon: \"success\",\r\n                    showCancelButton: false,\r\n                    showConfirmButton: true,\r\n                    confirmButtonText: 'Go to Home',\r\n                }).then(result => {\r\n                    localStorage.removeItem('steps')\r\n                    window.location = BASE_URL\r\n                })\r\n            }\r\n        })\r\n    }\r\n}","import io from 'socket.io-client';\r\nimport { SOCKET_CLIENT_URL } from './api';\r\n\r\nexport const SOCKET_CONNECTION = io(`${SOCKET_CLIENT_URL}`, {\r\n    transports: [\"websocket\"],\r\n    transport: [\"websocket\"],\r\n    upgrade: true\r\n})\r\n\r\nexport const emitEvent = (event, data) => {\r\n    SOCKET_CONNECTION.emit(event, data);\r\n};\r\n\r\nexport const onEvent = (event, func) => {\r\n    SOCKET_CONNECTION.on(event, func);\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport { PLAN__DETAILS, UPDATE_PLAN__DETAILS } from '../../../../actions/planDetail';\r\nimport { TOAST_DISMISS, TOAST_LOADING, getCookieValue } from '../../../../utils';\r\nimport withRouter from '../../../routes/WithRouter';\r\nimport Cookies from 'universal-cookie';\r\nimport { connect } from 'react-redux';\r\nimport PlanView from './Elements/PlanView';\r\nimport { emitEvent, onEvent } from '../../../../actions/socketClient';\r\nimport { HOST_URL } from '../../../../actions/api';\r\nimport { createWall } from '../../../../actions/initActions';\r\nimport { SHOPIFY_PRODUCT_SYNC } from '../../../../actions/productAction';\r\nimport { getUserInfo } from '../../../../actions/loginActions';\r\n\r\nclass SignUpPricePlan extends Component {\r\n  state = { init: false, showFrePlan: false, shopifyLogin: localStorage.getItem('shopifyLogin'), loading: false, changePrice: true, showContactUs: false }\r\n\r\n  componentDidMount() {\r\n    this.props.PLAN__DETAILS(true);\r\n    this.setState({ shopifyLogin: localStorage.getItem('shopifyLogin') })\r\n    setTimeout(() => {\r\n      onEvent(`getPlanUpdated${this.props.authorized?.token?.user?.id != null ? this.props.authorized?.token?.user?.id : this.props.authorized?.userData?.user_data?.user.id ? this.props.authorized?.userData?.user_data?.user.id : localStorage.getItem('ownerId')}`, (data) => {\r\n        localStorage.removeItem(\"steps\")\r\n        this.props.history('/home')\r\n      });\r\n    }, 1500);\r\n    window.fpr(\"referral\", { email: localStorage.getItem('emailId') })\r\n  }\r\n\r\n\r\n\r\n  SignUpPlanUpdate = async (planId) => {\r\n\r\n    const { authorized } = this.props;\r\n    this.setState({ loading: true });\r\n    const toastId = TOAST_LOADING();\r\n    const cookies = new Cookies();\r\n    try {\r\n      const response = await UPDATE_PLAN__DETAILS(planId);\r\n      if (response.data.response_code !== 200) throw new Error(\"Plan update failed\");\r\n\r\n      const userId = authorized?.token?.user?.id || authorized?.userData?.user_data?.user.id || localStorage.getItem('ownerId');\r\n      const createFromShopify = authorized?.userData?.user_data?.sessionData?.createFrom === 'shopify';\r\n\r\n      const processResponse = () => {\r\n        //await createWall(shopOnBio);\r\n        this.setState({ loading: false, init: true });\r\n        localStorage.removeItem('steps');\r\n        cookies.remove('shoponUrl');\r\n        setTimeout(() => {\r\n          this.props.history('/home')\r\n        }, 100);\r\n      };\r\n\r\n      if (createFromShopify) {\r\n        //await createWall(null);\r\n        localStorage.removeItem('shopifyLogin');\r\n        localStorage.removeItem('steps');\r\n        setTimeout(() => {\r\n          SHOPIFY_PRODUCT_SYNC(localStorage.getItem('shopId'), () => {\r\n             this.props.getUserInfo(this.props.history,`${HOST_URL}init/index/shopify`)\r\n            //window.location.href = ``;\r\n          });\r\n        }, 100);\r\n      } else {\r\n        emitEvent('planUpdated', { id: userId, plan: \"\" });\r\n        const shopOnBio = getCookieValue('shoponUrl');\r\n        await processResponse(shopOnBio);\r\n      }\r\n      TOAST_DISMISS(toastId);\r\n    } catch (error) {\r\n      this.setState({ loading: false });\r\n      TOAST_DISMISS(toastId);\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return <PlanView {...this.props} signUpPlan={true} loading={this.state.loading} SignUpPlanUpdate={this.SignUpPlanUpdate} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n  return {\r\n    authorized: state.authorized,\r\n    priceDetail: state.planPriceDetail?.planPrice,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    PLAN__DETAILS: (isSignup) => dispatch(PLAN__DETAILS(isSignup)),\r\n    getUserInfo: (navigation,link) =>dispatch(getUserInfo(navigation,link))\r\n    ,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignUpPricePlan));"],"names":["signUpVerified","token","history","callback","dispatch","HttpClient","post","SIGN_UP_VERIFICATION","then","response","responseData","response_code","response_message","user","data","_responseData$user","_responseData$user2","promotor_key","Object","keys","forEach","key","document","cookie","length","id","localStorage","setItem","type","USER_TOKEN","payload","emailId","Swal","title","icon","showCancelButton","showConfirmButton","confirmButtonText","result","removeItem","window","location","BASE_URL","SOCKET_CONNECTION","io","SOCKET_CLIENT_URL","transports","transport","upgrade","SignUpPricePlan","Component","constructor","arguments","state","init","showFrePlan","shopifyLogin","getItem","loading","changePrice","showContactUs","SignUpPlanUpdate","async","authorized","this","props","setState","toastId","TOAST_LOADING","cookies","Cookies","_authorized$token","_authorized$token$use","_authorized$userData","_authorized$userData$","_authorized$userData2","_authorized$userData3","_authorized$userData4","UPDATE_PLAN__DETAILS","planId","Error","userId","userData","user_data","createFromShopify","sessionData","createFrom","processResponse","remove","setTimeout","SHOPIFY_PRODUCT_SYNC","getUserInfo","HOST_URL","event","plan","emit","shopOnBio","getCookieValue","TOAST_DISMISS","error","emitEvent","componentDidMount","PLAN__DETAILS","_this$props$authorize","_this$props$authorize2","_this$props$authorize3","_this$props$authorize4","_this$props$authorize5","_this$props$authorize6","_this$props$authorize7","_this$props$authorize8","_this$props$authorize9","_this$props$authorize10","_this$props$authorize11","_this$props$authorize12","func","on","fpr","email","render","_jsx","PlanView","signUpPlan","connect","_state$planPriceDetai","priceDetail","planPriceDetail","planPrice","isSignup","navigation","link","withRouter"],"sourceRoot":""}